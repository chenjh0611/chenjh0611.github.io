<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一切随缘的技术博客</title>
  <icon>https://www.gravatar.com/avatar/d843950e6addab9cb2ebd3eee5c6cef7</icon>
  <subtitle>日拱一卒无有尽、功不唐捐终入海</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://code.skyheng.com/"/>
  <updated>2018-03-20T14:50:33.096Z</updated>
  <id>http://code.skyheng.com/</id>
  
  <author>
    <name>一切随缘</name>
    <email>1225948009@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkdownPad2在win10上安装及破解</title>
    <link href="http://code.skyheng.com/post/36308.html"/>
    <id>http://code.skyheng.com/post/36308.html</id>
    <published>2018-03-17T14:03:52.000Z</published>
    <updated>2018-03-20T14:50:33.096Z</updated>
    
    <content type="html"><![CDATA[<p>MarkdownPad 2_ 是一款较不错的Markdown编辑器，可快速将文本转换为美观的HTML/XHTML的网页格式代码，且操作方便，用户可以通过键盘快捷键和工具栏按钮来使用或者移除Markdown格式，左右栏的分割方式令用户可以实时看到 HTML 格式的 Markdown 文档。如果你喜欢在简书、CSDN等平台发表文章，也想掌握这门简单的轻量级的标记语言Markdown，又担心离线无处编辑，欢迎尝试。<br><a id="more"></a></p><h2 id="下载安装文件"><a href="#下载安装文件" class="headerlink" title="下载安装文件"></a>下载安装文件</h2><ul><li>官网下载地址：<a href="http://markdownpad.com/download/markdownpad2-setup.exe" title="官网下载地址" target="_blank" rel="noopener">http://markdownpad.com/download/markdownpad2-setup.exe</a></li><li>百度网盘地址：<a href="https://pan.baidu.com/s/1eSKXqka" title="百度网盘地址" target="_blank" rel="noopener">https://pan.baidu.com/s/1eSKXqka</a></li></ul><h2 id="运行并破解"><a href="#运行并破解" class="headerlink" title="运行并破解"></a>运行并破解</h2><ul><li>破解码如下:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email address：Soar360@live.com  </span><br><span class="line">License key：GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</span><br></pre></td></tr></table></figure></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/5494434-5949697f2f2ba48c.png" alt="破解界面"></p><p>如果是win10还需要安装一个组件<code>awesomium_v1.6.6_sdk_win.exe</code>，否则会出现错误提示<br><img src="http://img.blog.csdn.net/20161010210006981" alt=""><br><img src="http://img.blog.csdn.net/20161010210212747" alt=""></p><p>官方的文档给出的说法：<a href="http://markdownpad.com/faq.html#livepreview-directx" target="_blank" rel="noopener">http://markdownpad.com/faq.html#livepreview-directx</a><br>Windows 10 下 MarkdownPad2 预览无法显示是怎么回事：<a href="https://www.zhihu.com/question/34393386" target="_blank" rel="noopener">https://www.zhihu.com/question/34393386</a></p><h3 id="awesomium-sdk介绍"><a href="#awesomium-sdk介绍" class="headerlink" title="awesomium sdk介绍"></a>awesomium sdk介绍</h3><p>awesomium sdk是一个功能丰富的开源库，软件具有多种网页渲染方式，可以直接将编写的网页渲染到任何游戏场景中，对3D游戏的背景渲染、环境渲染、游戏场景渲染等都具有很大的优势，它支持多种编程语言，支持HTML5和CSS3、JavaScript，能够自动选取符合游戏代码的编程语言进行插入，运用了目前业界速度最快的浏览器内核webkit和v8，能够很快的对插入的网页进行编排，修改，帮助用户快速建立3D游戏开源库</p><ul><li>Awesomium 1.6.6 SDK下载地址：<a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a></li><li>组件百度网盘地址：<a href="https://pan.baidu.com/s/1qY7LKba" target="_blank" rel="noopener">https://pan.baidu.com/s/1qY7LKba</a></li></ul><h3 id="Awesomium-SDK的安装界面"><a href="#Awesomium-SDK的安装界面" class="headerlink" title="Awesomium SDK的安装界面"></a>Awesomium SDK的安装界面</h3><p><img src="http://img.blog.csdn.net/20161010210359039" alt="Awesomium SDK的安装界面"></p><h2 id="重启MarkdownPad2"><a href="#重启MarkdownPad2" class="headerlink" title="重启MarkdownPad2"></a>重启MarkdownPad2</h2><ul><li>破解和安装组件后需要重启软件 才可以正常的使用，重启MarkdownPad2就可以用了!<br><img src="http://upload-images.jianshu.io/upload_images/5494434-e61b7678739ef6b6.png" alt="使用效果"></li></ul><p>注：如果是英文版，可到tools-&gt;options修改，再重启即可<br><img src="http://upload-images.jianshu.io/upload_images/5494434-512c5560426e68d7.png" alt="切换语言"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MarkdownPad 2_ 是一款较不错的Markdown编辑器，可快速将文本转换为美观的HTML/XHTML的网页格式代码，且操作方便，用户可以通过键盘快捷键和工具栏按钮来使用或者移除Markdown格式，左右栏的分割方式令用户可以实时看到 HTML 格式的 Markdown 文档。如果你喜欢在简书、CSDN等平台发表文章，也想掌握这门简单的轻量级的标记语言Markdown，又担心离线无处编辑，欢迎尝试。&lt;br&gt;
    
    </summary>
    
      <category term="markdown" scheme="http://code.skyheng.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://code.skyheng.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>关系数据库常用SQL的详细用法</title>
    <link href="http://code.skyheng.com/post/61360.html"/>
    <id>http://code.skyheng.com/post/61360.html</id>
    <published>2018-03-16T08:56:27.000Z</published>
    <updated>2018-03-20T14:50:33.096Z</updated>
    
    <content type="html"><![CDATA[<p>开发中使用SQL是肯定的，但是每次写语句的时候总是会有的语句语法不太记得，特此想记录自己常用的SQL，详解下用法</p><a id="more"></a><h2 id="UNION和UNION-ALL"><a href="#UNION和UNION-ALL" class="headerlink" title="UNION和UNION ALL"></a>UNION和UNION ALL</h2><p>在开发中，有些数据的存储可能涉及到分库分表，查询的时候，可能需要查询所有的分表，这个时候，就需要用到UNION或者UNION ALL，下面介绍一下UNION的用法以及与UNION ALL的区别：UNION操作符用于合并两个或多个SELECT语句的结果集，这里需要注意的是：UNION内部的SELECT语句必须拥有相同数量的列，列也必须拥有相似的数据类型，同时，每条SELECT语句中列的顺序必须相同。</p><h3 id="UNION语法："><a href="#UNION语法：" class="headerlink" title="UNION语法："></a>UNION语法：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure><p>union操作符合并的结果集，不会允许重复值，如果允许有重复值的话，使用UNION ALL.</p><h3 id="UNION-ALL语法："><a href="#UNION-ALL语法：" class="headerlink" title="UNION ALL语法："></a>UNION ALL语法：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> ALL</span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure><p>UNION结果集中的列名总等于union中第一个select语句中的列名。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发中使用SQL是肯定的，但是每次写语句的时候总是会有的语句语法不太记得，特此想记录自己常用的SQL，详解下用法&lt;/p&gt;
    
    </summary>
    
      <category term="sql" scheme="http://code.skyheng.com/categories/sql/"/>
    
      <category term="mysql" scheme="http://code.skyheng.com/categories/sql/mysql/"/>
    
      <category term="oracle" scheme="http://code.skyheng.com/categories/sql/mysql/oracle/"/>
    
    
      <category term="mysql" scheme="http://code.skyheng.com/tags/mysql/"/>
    
      <category term="sql" scheme="http://code.skyheng.com/tags/sql/"/>
    
      <category term="oracle" scheme="http://code.skyheng.com/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署在阿里云服务器上</title>
    <link href="http://code.skyheng.com/post/5372.html"/>
    <id>http://code.skyheng.com/post/5372.html</id>
    <published>2018-03-15T15:31:16.000Z</published>
    <updated>2018-03-20T14:56:18.691Z</updated>
    
    <content type="html"><![CDATA[<p>Coding和Github的Pages服务还是有点慢，IP通常也是在国外，使用ping的时候秒秒钟就能周游世界，之前买的阿里云服务一直都空闲着，<br>现在想着把自己的博客部署在阿里云提升博客的访问速度,所以果断舍弃了这个把hexo搭建到了我的阿里云服务器上<br><a id="more"></a></p><h2 id="博客的架构"><a href="#博客的架构" class="headerlink" title="博客的架构"></a>博客的架构</h2><p>先搞明白Hexo博客从搭建到自动发布的架构，才能更好的理解我们每一步进行的操作。不然只跟着步骤过了一遍，却不知道为什么这么做。<br><img src="http://img.skyheng.com/picture/hexo/hexo_articlex.png" alt="hexo的架构"><br>整个流程就是本地将 *.md 渲染成静态文件，然后Git推送到服务器的repository,服务器再通过 git-hooks 同步网站根目录。</p><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><p><strong>第一步：</strong> 安装<code>node.js</code>以及本地<code>Hexo</code>初始化<br><strong>第二步：</strong> 服务器环境搭建，包括安装 <code>Git</code> 、<code>Nginx</code>配置 、创建 <code>git</code> 用户<br><strong>第三步：</strong> 使用Git自动化部署发布博客</p><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p>本地环境我就不介绍了查看下面两篇文章</p><ul><li><a href="http://code.skyheng.com/post/4103.html">使用Github搭建Hexo技术博客–安装教程</a></li><li><a href="http://code.skyheng.com/post/53342.html">使用Github搭建Hexo技术博客–增强教程</a></li></ul><h2 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><ul><li>因为我们是拿nginx做Web服务器，所以我们需要安装部署好nginx，如果没有安装，推荐使用<a href="https://lnmp.org/install.html" target="_blank" rel="noopener">LNMP一键安装包</a>，不过我使用的是宝塔的主机面板管理主机。</li><li>我们可以专门为hexo创建一个部署目录，比如我创建了/home/www/hexo文件夹，并把nginx的配置文件nginx.conf中的部署目录改为/home/www/hexo，<br>配置文件一般在/usr/local/nginx/conf里；同样可以使用默认目录，nginx的默认目录为/var/www/html，如果使用宝塔的主机面板，则默认的部署目录为/www/wwwroot/hexo</li></ul><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><ul><li>检查安装信息：<code>git --version</code></li></ul><h4 id="创建git用户"><a href="#创建git用户" class="headerlink" title="创建git用户"></a>创建git用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>找到以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure></p><p>在下面添加一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure></p><p>保存退出后改回权限：<code>chmod 400 /etc/sudoers</code></p><ul><li>然后给新加的用户git设置权限，编辑/etc/passwd将：<code>git:x:1003:1003:,,,:/home/git:/bin/bash</code> 改成：<code>git:x:1003:1003:,,,:/home/git:/usr/bin/git-shell</code> 这样git就只能使用git-shell而不能使用bash。</li><li><strong>git服务器打开RSA认证</strong><br>vim /etc/ssh/sshd_config<br>在sshd_config中开启以下几项：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile  .ssh/authorized_keys</span><br></pre></td></tr></table></figure><ul><li>随后设置Git用户的密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要root权限</span></span><br><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>切换至git用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment">#然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys</span></span><br><span class="line">chmod 600 ~/.ssh/authorzied_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><ul><li>然后就可以执行ssh 命令测试是否可以免密登录<code>ssh -v git@SERVER</code> 至此，Git用户添加完成</li></ul><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>执行命令：<code>sudo git init --bare hexo.git</code></p><blockquote><p>使用–bare 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p></blockquote><p>改变 hexo.git 目录的拥有者为git用户：<code>sudo chown -R git:git hexo.git</code></p><h3 id="配置钩子"><a href="#配置钩子" class="headerlink" title="配置钩子"></a>配置钩子</h3><p>在 <code>hexo.git/hooks</code> 目录下新建一个 <code>post-receive</code> 文件，进入<code>cd /home/git/hexo.git/hooks/</code>，编辑这个文件<code>vim post-receive</code><br>在 <code>post-receive</code> 文件中写入如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/www/wwwroot/hexo --git-dir=/home/git/hexo.git checkout -f</span><br></pre></td></tr></table></figure></p><ul><li>设置这个文件的可执行权限：<code>chmod +x post-receive</code></li><li>注意，<code>/www/wwwroot/hexo</code> 要换成你自己的部署目录，正如上文所说，我是的配置目录是<code>/www/wwwroot/hexo</code>。其中<code>/home/git/hexo.git</code>是git仓库的位置。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。</li></ul><h4 id="下面这种方式我也试过总是提示删除文件夹没有权限"><a href="#下面这种方式我也试过总是提示删除文件夹没有权限" class="headerlink" title="下面这种方式我也试过总是提示删除文件夹没有权限"></a>下面这种方式我也试过总是提示删除文件夹没有权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">rm -rf /www/wwwroot/hexo</span><br><span class="line">git <span class="built_in">clone</span> /home/git/hexo.git/ /www/wwwroot/hexo/</span><br></pre></td></tr></table></figure><p>还尝试改变权限：<code>chown -R git:git /www/wwwroot/hexo/</code> 但是就是没有成功也许是我的方法不对，再此记录下。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><h3 id="安装Git-1"><a href="#安装Git-1" class="headerlink" title="安装Git"></a>安装Git</h3><p>在Linux上安装Git：<a href="https://www.cnblogs.com/lhbryant/p/6928894.html" target="_blank" rel="noopener">https://www.cnblogs.com/lhbryant/p/6928894.html</a></p><h3 id="部署教程"><a href="#部署教程" class="headerlink" title="部署教程"></a>部署教程</h3><p>阿里云VPS搭建自己的的Hexo博客：<a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005723321</a><br>Hexo个人博客部署到CentOS个人服务器：<a href="https://segmentfault.com/a/1190000010680022" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010680022</a><br>部署Hexo到个人服务器：<a href="https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/" target="_blank" rel="noopener">https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/</a><br>HEXO部署到unbuntu服务器详细指南：<a href="http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/" target="_blank" rel="noopener">http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/</a><br>服务器部署Hexo博客：<a href="https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/</a><br>Hexo博客部署到服务器：<a href="https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/" target="_blank" rel="noopener">https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</a><br>通过Git将Hexo博客部署到服务器：<a href="https://www.jianshu.com/p/e03e363713f9" target="_blank" rel="noopener">https://www.jianshu.com/p/e03e363713f9</a><br>部署Hexo博客到linux云主机并实现自动发布：<a href="https://ghui.me/post/2016/07/host-hexo-vps/" target="_blank" rel="noopener">https://ghui.me/post/2016/07/host-hexo-vps/</a><br>将Hexo博客部署到云主机：<a href="https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/" target="_blank" rel="noopener">https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/</a><br>配合Travis CI，将Hexo博客自动部署到你的服务器上：<a href="https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/" target="_blank" rel="noopener">https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/</a><br>使用Git Hook自动部署Hexo到个人VPS：<a href="http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/" target="_blank" rel="noopener">http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/</a><br>VPS Centos7安装Git服务器，部署Hexo静态博客：<a href="https://www.micronbot.com/blog/8.html" target="_blank" rel="noopener">https://www.micronbot.com/blog/8.html</a><br>在Ubuntu 14.04服务器上部署Hexo博客：<a href="https://cloud.tencent.com/developer/article/1004587" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1004587</a><br>阿里云ubuntu部署hexo,并与本地同步，实现自动部署：<a href="http://blog.csdn.net/nghuyong/article/details/54430093" target="_blank" rel="noopener">http://blog.csdn.net/nghuyong/article/details/54430093</a><br>阿里云搭建Git服务，实现Hexo自动部署：<a href="https://imys.net/20160303/hexo-nginx-auto-deploy.html" target="_blank" rel="noopener">https://imys.net/20160303/hexo-nginx-auto-deploy.html</a><br>hexo博客部署到linux服务器上：<a href="https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/" target="_blank" rel="noopener">https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Coding和Github的Pages服务还是有点慢，IP通常也是在国外，使用ping的时候秒秒钟就能周游世界，之前买的阿里云服务一直都空闲着，&lt;br&gt;现在想着把自己的博客部署在阿里云提升博客的访问速度,所以果断舍弃了这个把hexo搭建到了我的阿里云服务器上&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://code.skyheng.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://code.skyheng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>BigDecimal的用法详解及注意事项</title>
    <link href="http://code.skyheng.com/post/55981.html"/>
    <id>http://code.skyheng.com/post/55981.html</id>
    <published>2018-03-15T02:50:31.000Z</published>
    <updated>2018-03-20T14:50:33.081Z</updated>
    
    <content type="html"><![CDATA[<p>Java在java.math包中提供的API类BigDecimal，用来对超过16位有效位的数进行精确的运算。双精度浮点型变量double可以处理16位有效数，但在实际应用中，可能需要对更大或者更小的数进行运算和处理。一般情况下，对于那些不需要准确计算精度的数字，我们可以直接使用Float和Double处理，但是Double.valueOf(String) 和Float.valueOf(String)会丢失精度。所以开发中，如果我们需要精确计算的结果，则必须使用BigDecimal类来操作！<br><a id="more"></a></p><p>（一）BigDecimal类的常用的几个构造方法</p><ul><li>BigDecimal(int)：将int表示形式转换为BigDecimal对象</li><li>BigDecimal(String) ：将字符串表示形式转换为BigDecimal对象</li><li>BigDecimal(double)：将double表示形式转换为BigDecimal对象</li></ul><p>（二）BigDecimal类的常用方法</p><ul><li>add(BigDecimal)：BigDecimal对象中的值相加，返回BigDecimal对象</li><li>subtract(BigDecimal)：BigDecimal对象中的值相减，返回BigDecimal对象</li><li>multiply(BigDecimal)：BigDecimal对象中的值相乘，返回BigDecimal对象</li><li>divide(BigDecimal)：BigDecimal对象中的值相除，返回BigDecimal对象</li><li>toString()：将BigDecimal对象中的值转换成字符串</li><li>doubleValue()：将BigDecimal对象中的值转换成双精度数</li><li>floatValue()：将BigDecimal对象中的值转换成单精度数</li><li>longValue()：将BigDecimal对象中的值转换成长整数</li><li>intValue()：将BigDecimal对象中的值转换成整数</li></ul><p>下面分享一个用于高精确处理常用的数学运算类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.per.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于高精确处理常用的数学运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//默认除法运算精度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEF_DIV_SCALE = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title">add</span><span class="params">(String v1, String v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的加法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">add</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.add(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">sub</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title">sub</span><span class="params">(String v1, String v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的减法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sub</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.subtract(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">mul</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title">mul</span><span class="params">(String v1, String v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">mul</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> round(b1.multiply(b2).doubleValue(), scale);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的乘法运算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 保留scale 位小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">mul</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.multiply(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算，当发生除不尽的情况时，精确到</span></span><br><span class="line"><span class="comment">     * 小数点以后10位，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">div</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> div(v1, v2, DEF_DIV_SCALE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指</span></span><br><span class="line"><span class="comment">     * 定精度，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 表示表示需要精确到小数点以后几位。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">div</span><span class="params">(<span class="keyword">double</span> v1, <span class="keyword">double</span> v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(v1));</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(Double.toString(v2));</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指</span></span><br><span class="line"><span class="comment">     * 定精度，以后的数字四舍五入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 表示需要精确到小数点以后几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 两个参数的商</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">div</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        <span class="keyword">return</span> b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的小数位四舍五入处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v     需要四舍五入的数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 四舍五入后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">round</span><span class="params">(<span class="keyword">double</span> v, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b = <span class="keyword">new</span> BigDecimal(Double.toString(v));</span><br><span class="line">        <span class="keyword">return</span> b.setScale(scale, BigDecimal.ROUND_HALF_UP).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供精确的小数位四舍五入处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v     需要四舍五入的数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 四舍五入后的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">round</span><span class="params">(String v, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b = <span class="keyword">new</span> BigDecimal(v);</span><br><span class="line">        <span class="keyword">return</span> b.setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取余数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 余数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">remainder</span><span class="params">(String v1, String v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">return</span> b1.remainder(b2).setScale(scale, BigDecimal.ROUND_HALF_UP).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取余数  BigDecimal</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1    被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2    除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scale 小数点后保留几位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 余数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigDecimal <span class="title">remainder</span><span class="params">(BigDecimal v1, BigDecimal v2, <span class="keyword">int</span> scale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (scale &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                    <span class="string">"The scale must be a positive integer or zero"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v1.remainder(v2).setScale(scale, BigDecimal.ROUND_HALF_UP);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比较大小</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v1 被比较数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v2 比较数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果v1 大于v2 则 返回true 否则false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(String v1, String v2)</span> </span>&#123;</span><br><span class="line">        BigDecimal b1 = <span class="keyword">new</span> BigDecimal(v1);</span><br><span class="line">        BigDecimal b2 = <span class="keyword">new</span> BigDecimal(v2);</span><br><span class="line">        <span class="keyword">int</span> bj = b1.compareTo(b2);</span><br><span class="line">        <span class="keyword">boolean</span> res;</span><br><span class="line">        <span class="keyword">if</span> (bj &gt; <span class="number">0</span>)</span><br><span class="line">            res = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考<br><a href="http://blog.csdn.net/haibin_hu/article/details/52076830" target="_blank" rel="noopener">http://blog.csdn.net/haibin_hu/article/details/52076830</a><br><a href="http://blog.csdn.net/ochangwen/article/details/51531866" target="_blank" rel="noopener">http://blog.csdn.net/ochangwen/article/details/51531866</a><br><a href="http://blog.csdn.net/qq_33451004/article/details/71247041" target="_blank" rel="noopener">http://blog.csdn.net/qq_33451004/article/details/71247041</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java在java.math包中提供的API类BigDecimal，用来对超过16位有效位的数进行精确的运算。双精度浮点型变量double可以处理16位有效数，但在实际应用中，可能需要对更大或者更小的数进行运算和处理。一般情况下，对于那些不需要准确计算精度的数字，我们可以直接使用Float和Double处理，但是Double.valueOf(String) 和Float.valueOf(String)会丢失精度。所以开发中，如果我们需要精确计算的结果，则必须使用BigDecimal类来操作！&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java日期时间格式化转换符</title>
    <link href="http://code.skyheng.com/post/4240.html"/>
    <id>http://code.skyheng.com/post/4240.html</id>
    <published>2018-03-10T17:47:16.000Z</published>
    <updated>2018-03-20T14:50:33.081Z</updated>
    
    <content type="html"><![CDATA[<p>Java日期时间格式化转换符<br><a id="more"></a></p><h2 id="Java-日期时间格式化转换符"><a href="#Java-日期时间格式化转换符" class="headerlink" title="Java 日期时间格式化转换符"></a>Java 日期时间格式化转换符</h2><p>在 Java 语言中，我们经常会使用 SimpleDateFormat 类来格式化一个给定的时间戳数字，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formDate</span><span class="params">(<span class="keyword">long</span> millis)</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTimeInMillis(millis);</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:hh:mm"</span>, Locale.getDefault());</span><br><span class="line">    <span class="keyword">return</span> sdf.format(calendar.getTime());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>事实上，还有一些通用的字符串转换符来更加灵活的获取一些我们想知道的时间日期结果。比如，一个星期的第几天等。使用起来，类似这样：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formDate</span><span class="params">(<span class="keyword">long</span> millis)</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTimeInMillis(millis);</span><br><span class="line">        Date date = calendar.getTime();</span><br><span class="line">    <span class="keyword">return</span> String.format(Locale.US, <span class="string">"%td %tb %tY %tH:%tM %tp"</span>, date, date, date, date, date, date);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="以下是我们可能经常使用到的一些常用转换符。"><a href="#以下是我们可能经常使用到的一些常用转换符。" class="headerlink" title="以下是我们可能经常使用到的一些常用转换符。"></a>以下是我们可能经常使用到的一些常用转换符。</h3><h2 id="常用日期格式化转换符"><a href="#常用日期格式化转换符" class="headerlink" title="常用日期格式化转换符"></a>常用日期格式化转换符</h2><table><thead><tr><th>转换符</th><th>描述体</th><th>示例</th></tr></thead><tbody><tr><td>%te</td><td>一个月中的某一天（1～31）</td><td>2</td></tr><tr><td>%tb</td><td>指定语言环境的月份简称</td><td>Feb（英文）、二月（中文）</td></tr><tr><td>%tB</td><td>指定语言环境的月份全称</td><td>February（英文）、二月（中文）</td></tr><tr><td>%tA</td><td>指定语言环境的星期几全称</td><td>Monday（英文）、星期一（中文）</td></tr><tr><td>%ta</td><td>指定语言环境的星期几简称</td><td>Mon（英文）、星期一（中文）</td></tr><tr><td>%tc</td><td>包括全部日期和时间信息</td><td>Mon Jan 08 06:30:04 UTC 2018</td></tr><tr><td>%tY</td><td>四位年份</td><td>2018</td></tr><tr><td>%ty</td><td>两位年份</td><td>18</td></tr><tr><td>%tj</td><td>一年中的第几天（001～366）</td><td>008</td></tr><tr><td>%tm</td><td>月份（01～12）</td><td>08</td></tr><tr><td>%td</td><td>一个月中的第几天（01～31）</td><td>08</td></tr></tbody></table><h2 id="常用时间格式化转换符"><a href="#常用时间格式化转换符" class="headerlink" title="常用时间格式化转换符"></a>常用时间格式化转换符</h2><table><thead><tr><th>转换符</th><th>描述体</th><th>示例</th></tr></thead><tbody><tr><td>%tH</td><td>2位数字的24小时制的小时（00～23）</td><td>14</td></tr><tr><td>%tI</td><td>2位数字的12小时制的小时（01～12）</td><td>05</td></tr><tr><td>%tk</td><td>2位数字的24小时制的小时（1～23）</td><td>5</td></tr><tr><td>%tI</td><td>2位数字的12小时制的小时（1～12）</td><td>10</td></tr><tr><td>%tM</td><td>2位数字的分钟（00～59））</td><td>05</td></tr><tr><td>%tS</td><td>2位数字的秒数（00～60）</td><td>12</td></tr><tr><td>%tL</td><td>3位数字的毫秒数（000～999）</td><td>920</td></tr><tr><td>%tN</td><td>9位数字的微秒数（000000000～999999999）</td><td>062000000000</td></tr><tr><td>%tp</td><td>指定语言环境下上午或下午标记</td><td>下午（中文）、pm（英文）</td></tr><tr><td>%tz</td><td>相对于GMT RFC 82格式的数字时区偏移量</td><td>+0800</td></tr><tr><td>%tZ</td><td>时区缩写形式的字符串</td><td>CST</td></tr><tr><td>%ts</td><td>1970-01-01 00:00:00至现在经过的秒数</td><td>1206426646</td></tr><tr><td>%tQ</td><td>1970-01-01 00:00:00至现在经过的毫秒数</td><td>1206426737453</td></tr></tbody></table><h2 id="常用日期时间格式化组合转换符"><a href="#常用日期时间格式化组合转换符" class="headerlink" title="常用日期时间格式化组合转换符"></a>常用日期时间格式化组合转换符</h2><table><thead><tr><th>转换符</th><th>描述体</th><th>示例</th></tr></thead><tbody><tr><td>%tF</td><td>“年-月-日”格式（4位年份）</td><td>2018-01-08</td></tr><tr><td>%tD</td><td>“月/日/年”格式（2位年份）</td><td>01/08/18</td></tr><tr><td>%tr</td><td>“时：分：秒 PM（AM）”格式（12小时制）</td><td>15:23:50 PM</td></tr><tr><td>%tT</td><td>“时：分：秒”格式（24小时制）</td><td>15:23:50</td></tr><tr><td>%tR</td><td>“时：分”格式（24小时制）</td><td>15:23</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java日期时间格式化转换符&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用过程中常见问题记录</title>
    <link href="http://code.skyheng.com/post/46695.html"/>
    <id>http://code.skyheng.com/post/46695.html</id>
    <published>2018-02-05T12:46:31.000Z</published>
    <updated>2018-03-20T14:51:22.100Z</updated>
    
    <content type="html"><![CDATA[<p>记录在hexo使用过程中常见问题<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/hexo/hexo3.png" alt="hexo"></p><h2 id="一、Cannot-find-module-swig"><a href="#一、Cannot-find-module-swig" class="headerlink" title="一、Cannot find module swig"></a>一、Cannot find module swig</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ERROR Plugin load failed: hexo-deployer-git</span><br><span class="line">Error: Cannot find module &apos;swig&apos;</span><br><span class="line">    at Function.Module._resolveFilename (module.js:536:15)</span><br><span class="line">    at Function.Module._load (module.js:466:25)</span><br><span class="line">    at Module.require (module.js:579:17)</span><br><span class="line">    at require (internal/module.js:11:18)</span><br><span class="line">    at Object.&lt;anonymous&gt; (E:\01-blog-space\hexo\node_modules\_hexo-deployer-git@0.3.1@hexo-deployer-git\lib\deployer.js:6:12)</span><br><span class="line">    at Module._compile (module.js:635:30)</span><br><span class="line">    at Object.Module._extensions..js (module.js:646:10)</span><br><span class="line">    at Module.load (module.js:554:32)</span><br><span class="line">    at tryModuleLoad (module.js:497:12)</span><br><span class="line">    at Function.Module._load (module.js:489:3)</span><br><span class="line">    at Module.require (module.js:579:17)</span><br><span class="line">    at require (E:\01-blog-space\hexo\node_modules\hexo\lib\hexo\index.js:216:21)</span><br></pre></td></tr></table></figure><p>问题解决：安装<code>npm install swig --save</code></p><h2 id="需要显示草稿文章"><a href="#需要显示草稿文章" class="headerlink" title="需要显示草稿文章"></a>需要显示草稿文章</h2><p>启动的时候执行：</p><ul><li><code>hexo server --drafts</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录在hexo使用过程中常见问题&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://code.skyheng.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://code.skyheng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>PowerDesigner16应用</title>
    <link href="http://code.skyheng.com/post/62692.html"/>
    <id>http://code.skyheng.com/post/62692.html</id>
    <published>2017-12-02T06:13:47.000Z</published>
    <updated>2018-03-20T14:50:32.877Z</updated>
    
    <content type="html"><![CDATA[<p>这个地方是写描述的地方</p><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>PowerDesigner16配置显示注释comment配置方法 - CSDN博客<br><a href="http://blog.csdn.net/chao_1990/article/details/52620206" target="_blank" rel="noopener">http://blog.csdn.net/chao_1990/article/details/52620206</a></p><p>PowerDesigner设计表时显示注释列Comment - CSDN博客<br><a href="http://blog.csdn.net/xiaouncle/article/details/53463581" target="_blank" rel="noopener">http://blog.csdn.net/xiaouncle/article/details/53463581</a></p><p>PowerDesigner 把Comment写到name中 和把name写到Comment中 pd7以后版本可用 - 剑飘红 - 博客园<br><a href="https://www.cnblogs.com/cxd4321/archive/2009/03/07/1405475.html" target="_blank" rel="noopener">https://www.cnblogs.com/cxd4321/archive/2009/03/07/1405475.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个地方是写描述的地方&lt;/p&gt;
    
    </summary>
    
      <category term="powerDesigner" scheme="http://code.skyheng.com/categories/powerDesigner/"/>
    
    
      <category term="powerDesigner" scheme="http://code.skyheng.com/tags/powerDesigner/"/>
    
  </entry>
  
  <entry>
    <title>怎样在虚拟机上安装Ubuntu17.10系统</title>
    <link href="http://code.skyheng.com/post/27822.html"/>
    <id>http://code.skyheng.com/post/27822.html</id>
    <published>2017-10-24T17:01:48.000Z</published>
    <updated>2018-03-20T14:50:32.877Z</updated>
    
    <content type="html"><![CDATA[<p>这个地方是写描述的地方</p><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>怎样在虚拟机上安装Ubuntu17.04系统 - CSDN博客<br><a href="http://blog.csdn.net/hpf247/article/details/77810826" target="_blank" rel="noopener">http://blog.csdn.net/hpf247/article/details/77810826</a></p><p>VMware Ubuntu安装详细过程 - 小宝鸽 - CSDN博客<br><a href="http://blog.csdn.net/u013142781/article/details/50529030" target="_blank" rel="noopener">http://blog.csdn.net/u013142781/article/details/50529030</a></p><p>VMware Tools （ubuntu系统）安装详细过程与使用 - 小宝鸽 - CSDN博客<br><a href="http://blog.csdn.net/u013142781/article/details/50539574" target="_blank" rel="noopener">http://blog.csdn.net/u013142781/article/details/50539574</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个地方是写描述的地方&lt;/p&gt;
    
    </summary>
    
      <category term="ubuntu" scheme="http://code.skyheng.com/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="http://code.skyheng.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Java8 JDK1.8 API中文</title>
    <link href="http://code.skyheng.com/post/55614.html"/>
    <id>http://code.skyheng.com/post/55614.html</id>
    <published>2017-08-29T16:10:22.000Z</published>
    <updated>2018-03-20T14:51:22.272Z</updated>
    
    <content type="html"><![CDATA[<p>本帮助文档是使用百度翻译，非人工翻译。准确性不能保证，请与英文版配合使用</p><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="java-1-6-帮助文档"><a href="#java-1-6-帮助文档" class="headerlink" title="java 1.6 帮助文档"></a>java 1.6 帮助文档</h3><h4 id="中文"><a href="#中文" class="headerlink" title="中文"></a><a href="https://blog.fondme.cn/posts/21004/#中文" title="中文" target="_blank" rel="noopener"></a>中文</h4><p>链接：<a href="http://download.csdn.net/detail/qw599186875/9608735" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9608735</a></p><h4 id="英文"><a href="#英文" class="headerlink" title="英文"></a><a href="https://blog.fondme.cn/posts/21004/#英文" title="英文" target="_blank" rel="noopener"></a>英文</h4><h3 id=""><a href="#" class="headerlink" title=""></a><a href="https://blog.fondme.cn/posts/21004/#Java1-8-帮助文档" title="Java1.8 帮助文档" target="_blank" rel="noopener"></a></h3><h3 id="Java1-8-帮助文档"><a href="#Java1-8-帮助文档" class="headerlink" title="Java1.8 帮助文档"></a><a href="https://blog.fondme.cn/#Java1-8-帮助文档" title="Java1.8 帮助文档" target="_blank" rel="noopener"></a>Java1.8 帮助文档</h3><h4 id="英文-1"><a href="#英文-1" class="headerlink" title="英文"></a><a href="https://blog.fondme.cn/#英文-1" title="英文" target="_blank" rel="noopener"></a>英文</h4><h4 id="中文-–-谷歌版"><a href="#中文-–-谷歌版" class="headerlink" title="中文 – 谷歌版"></a><a href="https://blog.fondme.cn/#中文-–-谷歌版" title="中文 – 谷歌版" target="_blank" rel="noopener"></a>中文 – 谷歌版</h4><p>在线版: <a href="https://blog.fondme.cn/apidoc/jdk-1.8-google/" target="_blank" rel="noopener">https://blog.fondme.cn/apidoc/jdk-1.8-google/</a><br>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9802192" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9802192</a></p><h4 id="中文-–-有道版"><a href="#中文-–-有道版" class="headerlink" title="中文 – 有道版"></a><a href="https://blog.fondme.cn/#中文-–-有道版" title="中文 – 有道版" target="_blank" rel="noopener"></a>中文 – 有道版</h4><p>在线版: <a href="https://blog.fondme.cn/apidoc/jdk-1.8-youdao/" target="_blank" rel="noopener">https://blog.fondme.cn/apidoc/jdk-1.8-youdao/</a><br>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9608721" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9608721</a></p><h4 id="中文-–-百度版"><a href="#中文-–-百度版" class="headerlink" title="中文 – 百度版"></a><a href="https://blog.fondme.cn/#中文-–-百度版" title="中文 – 百度版" target="_blank" rel="noopener"></a>中文 – 百度版</h4><p>在线版: <a href="https://blog.fondme.cn/apidoc/jdk-1.8-baidu/" target="_blank" rel="noopener">https://blog.fondme.cn/apidoc/jdk-1.8-baidu/</a><br>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9608724" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9608724</a></p><p><a href="http://download.csdn.net/detail/qw599186875/9802192" target="_blank" rel="noopener"></a></p><p><a href="http://download.csdn.net/detail/qw599186875/9802192" target="_blank" rel="noopener"></a></p><p> <img src="http://img.blog.csdn.net/20170412160822841?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXc1OTkxODY4NzU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p><p><img src="http://img.blog.csdn.net/20170412160940809?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXc1OTkxODY4NzU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p><p>JDK1.8 API 英文 java帮助文档</p><p>JDK API java 帮助文档</p><p>JDK1.8 API英文java帮助文档</p><p>Java最新帮助文档</p><p>链接：<a href="http://download.csdn.net/detail/qw599186875/9608712" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9608712</a></p><p>jdk1.9 下载</p><p>windows版本<br>mac os 版本<br>linux 版本<br>Java1.9 帮助文档</p><p>英文</p><p>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9917053" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9917053</a></p><p>中文 – 谷歌版</p><p>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9917057" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9917057</a></p><p>中文 – 必应版</p><p>下载链接：<a href="http://download.csdn.net/detail/qw599186875/9917055" target="_blank" rel="noopener">http://download.csdn.net/detail/qw599186875/9917055</a></p><p><a href="https://blog.fondme.cn/posts/21024" target="_blank" rel="noopener">https://blog.fondme.cn/posts/21024</a></p><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><ul><li>本文转载自<a href="http://blog.csdn.net/qw599186875/article/details/52265995" target="_blank" rel="noopener">http://blog.csdn.net/qw599186875/article/details/52265995</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本帮助文档是使用百度翻译，非人工翻译。准确性不能保证，请与英文版配合使用&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
      <category term="jdk" scheme="http://code.skyheng.com/categories/java/jdk/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
      <category term="jdk" scheme="http://code.skyheng.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>前端CDN公共库大全</title>
    <link href="http://code.skyheng.com/post/8806.html"/>
    <id>http://code.skyheng.com/post/8806.html</id>
    <published>2017-07-22T09:56:22.000Z</published>
    <updated>2018-03-20T14:50:32.877Z</updated>
    
    <content type="html"><![CDATA[<p>CDN公共库是指将常用的JS库存放在CDN节点，以方便广大开发者直接调用。与将JS库存放在服务器单机上相比，CDN公共库更加稳定、高速。现在web应用都在使用JS类库，这些类库小的几十K，<br>大的几百K，而国内网络访问速度大家都知道不是那么惬意，所以给各位开发者推荐常用JS类库的CDN缓存，这样不管客户在哪里访问你的页面，调用公共类库的速度都会为你的页面节省很多时间。<br><a id="more"></a></p><h2 id="前端-CDN-公共库大全"><a href="#前端-CDN-公共库大全" class="headerlink" title="前端 CDN 公共库大全"></a>前端 CDN 公共库大全</h2><p>一般的CDN公共库都会包含全球所有最流行的开源JavaScript库，你可以在自己的网页上直接通过script标记引用这些资源。这样做不仅可以为您 节省流量，还能通过CDN加速，获得更快的访问速度。<br><img src="http://img.skyheng.com/picture/2017/cdn.jpg" alt="cdn"></p><h3 id="百度CDN公共库"><a href="#百度CDN公共库" class="headerlink" title="百度CDN公共库"></a><a href="http://cdn.code.baidu.com" title="百度CDN公共库" target="_blank" rel="noopener">百度CDN公共库</a></h3><p>百度公共CDN为站长的应用程序提供稳定、可靠、高速的服务，包含全球所有最流行的开源JavaScript库。<br>地址：<a href="http://cdn.code.baidu.com" title="百度CDN公共库" target="_blank" rel="noopener">http://cdn.code.baidu.com</a><br>GIT开源库：<a href="https://github.com/Clouda-team/baiducdnstatic" title="百度公共CDNGIT开源库" target="_blank" rel="noopener">https://github.com/Clouda-team/baiducdnstatic</a><br>Ps：百度的速度目前来说应该是和新浪差不多的。不过jQuery的版本比SAE少几个，其他类库应该都差不多。</p><h3 id="新浪云计算CDN公共库"><a href="#新浪云计算CDN公共库" class="headerlink" title="新浪云计算CDN公共库"></a><a href="http://lib.sinaapp.com" title="新浪云计算CDN公共库" target="_blank" rel="noopener">新浪云计算CDN公共库</a></h3><p>新浪云计算是新浪研发中心下属的部门，主要负责新浪在云计算领域的战略规划，技术研发和平台运营工作。主要产品包括 应用云平台Sina App Engine（简称SAE）。<br>SAE的CDN节点覆盖全国各大城市的多路（电信、联通、移动、教育）骨干网络，使开发者能够方便的使用高质量的CDN服务。<br>地址：<a href="http://lib.sinaapp.com" title="新浪云计算CDN公共库" target="_blank" rel="noopener">http://lib.sinaapp.com</a><br>Ps：网上有评测说新浪的速度比百度的要好。个人没感觉出来。亲测半夜的时候出现过几次加载慢的情况（不知道其他站长遇到过没有）。</p><h3 id="又拍云JS库CDN服务"><a href="#又拍云JS库CDN服务" class="headerlink" title="又拍云JS库CDN服务"></a><a href="http://jscdn.upai.com" title="又拍云JS库CDN服务" target="_blank" rel="noopener">又拍云JS库CDN服务</a></h3><p>又拍云存储是杭州纬聚网络有限公司旗下项目，成立于2005年6月，前期主要为又拍网、又拍图片管家提供图片云存储／云计算服务，于2010年2月对所有用户开放使用。<br>主要专注于海量小文件的存储与分发及图片云计算领域。提供的两大核心服务：静态文件云存储、CDN加速处理。<br>地址：<a href="http://jscdn.upai.com" title="又拍云JS库CDN服务" target="_blank" rel="noopener">http://jscdn.upai.com</a><br>Ps：又拍云js库提供了常用的JavaScript库CDN服务。算是起步较早的cdn加速服务了。速度和稳定性也不错。不过js库有点少，有些前卫的js库可能不提供。</p><h3 id="七牛云存储-开放静态文件CDN"><a href="#七牛云存储-开放静态文件CDN" class="headerlink" title="七牛云存储 开放静态文件CDN"></a><a href="http://www.staticfile.org" title="七牛云存储 开放静态文件CDN" target="_blank" rel="noopener">七牛云存储 开放静态文件CDN</a></h3><p>像 Google Ajax Library，Microsoft ASP.net CDN，SAE，Baidu，Upyun 等 CDN 上都免费提供的 JS 库的存储，但使用起来却都有些局限，因为他们只提供了部分 JS 库。但七牛云存储提供一个尽可能全面收录优秀开源库的仓库，并免费提供 CDN 加速服务。<br>地址：<a href="http://www.staticfile.org" title="七牛云存储 开放静态文件CDN" target="_blank" rel="noopener">http://www.staticfile.org</a><br>GIT开源库：<a href="https://github.com/staticfile/static" target="_blank" rel="noopener">https://github.com/staticfile/static</a><br>Ps：同时，开放静态文件CDN也提供开源库源接入的入口，让所有人都可以提交开源库，包括 JS、CSS、image 和 swf 等静态文件。</p><h3 id="360网站卫士CDN前端公共库"><a href="#360网站卫士CDN前端公共库" class="headerlink" title="360网站卫士CDN前端公共库"></a><a href="http://libs.useso.com" title="360网站卫士CDN前端公共库" target="_blank" rel="noopener">360网站卫士CDN前端公共库</a></h3><p>托管在360众多的全国CDN节点上，覆盖电信、联通、移动等主流运营商线路，您可以在自己的网页上直接通过script标记引用这些资源，让网站访问速度瞬间提速！<br>只需替换一个域名就可以继续使用Google提供的前端公共库和免费字体库,让网站访问速度瞬间提速。<br>地址：<a href="http://libs.useso.com" title="百度CDN公共库" target="_blank" rel="noopener">http://libs.useso.com</a><br>Ps：360的步伐现在是越来越快了。各种技术和提供的服务更新的速度是飞快的。360CDN服务也是最近才推出的（貌似主要还是Google被墙了 的原因）。提供了大多数的前端js库，<br>还在自己的服务器上面缓存了Google的前端公共库和免费字体库，这个算是其他国内的cdn公共库没有的。速度和 稳定性也不错，当然相比较而且还是略逊于百度和新浪(亲测有些地方宽带线路会断线，可能也是很少部分吧)。毕竟提供服务还没多久。</p><h3 id="modules-in-the-sea"><a href="#modules-in-the-sea" class="headerlink" title="modules in the sea"></a><a href="http://a.tbcdn.cn/libs" title="modules in the sea" target="_blank" rel="noopener">modules in the sea</a></h3><p>阿里提供的公共CDN库，提供的比较少，没啥好说的。<br>地址：<a href="http://a.tbcdn.cn/libs" title="modules in the sea" target="_blank" rel="noopener">http://a.tbcdn.cn/libs</a><br>GIT开源库：<a href="https://github.com/Clouda-team/baiducdnstatic" title="阿里CDNGIT开源库" target="_blank" rel="noopener">https://github.com/seajs/modules</a><br>Ps：仅提供了几个项目CDN加速，未提供递交。</p><h2 id="目前国外的一些比较大的公共CDN服务"><a href="#目前国外的一些比较大的公共CDN服务" class="headerlink" title="目前国外的一些比较大的公共CDN服务"></a>目前国外的一些比较大的公共CDN服务</h2><h3 id="CDNJS静态资源CDN服务"><a href="#CDNJS静态资源CDN服务" class="headerlink" title="CDNJS静态资源CDN服务"></a><a href="http://www.cdnjs.com" title="CDNJS静态资源CDN服务" target="_blank" rel="noopener">CDNJS静态资源CDN服务</a></h3><p>CDNJS提供非常完整的 JavaScript 程式库，无论是热门或是冷门的一应俱全。若你觉得它们缺少哪些好用的函式库，也可以自行提交到网站里，通过审核后就 CDNJS 就会为你分流 js文件！<br>这项服务是结合 CloudFlare、Pingdom 与 S3Stat的，稳定性与速度自然不在话下。CDNJS提供的 JavaScript Libraries 全部列在网站首页，使用者可以直接搜索。这些程式库都有标示版本编号、标签以及原维护网站链结。<br>地址：<a href="http://www.cdnjs.com" title="CDNJS静态资源CDN服务" target="_blank" rel="noopener">http://www.cdnjs.com</a><br>GIT开源库：<a href="https://github.com/cdnjs/cdnjs" target="_blank" rel="noopener">https://github.com/cdnjs/cdnjs</a><br>Ps：CDNJS应该算是最完整的的JS库了。存储了大部分主流的 JS 库，甚至 CSS、image 和 swf，不过很多国内优秀开源库是没有的。很多国外前卫的Js库在CDNJS大都能找到。国内的速度虽然比不上其他的几个国内的CDN服务，但是相对来说 其实还可以。<br>当然你也可以使用国人提供的CDNJS国内镜像网站的又拍云路径来引用相关JS和CSS文件。<br>地址：<a href="http://www.cdnjs.cn" title="CDNJS静态资源CDN服务" target="_blank" rel="noopener">http://www.cdnjs.cn</a><br>CDNJS国内镜像托管在又拍云存储，但是各种JS或者CSS类库比又拍云自己出的JS库丰富很多,而且每天同步更新且支持https协议。</p><h3 id="Google-Hosted-Libraries"><a href="#Google-Hosted-Libraries" class="headerlink" title="Google Hosted Libraries"></a><a href="https://developers.google.com/speed/libraries" title="又拍云JS库CDN服务" target="_blank" rel="noopener">Google Hosted Libraries</a></h3><p>Google出品，必属精品了。虽然最近Google全线产品被墙了，连基本的Google搜索服务都无法使用了。但是谷歌的公共CDN公共库应该是 最强大的了，像其中的前卫的各种代码类库和Google Web Font 字体库，国内几大公共CDN服务几乎都不提供支持。<br>地址：<a href="https://developers.google.com/speed/libraries" title="百度CDN公共库" target="_blank" rel="noopener">https://developers.google.com/speed/libraries</a><br>Ps：当然，Google打不开怎么办？除了使用国内的cdn库，也没有什么好办法了。如：国内cdn不提供的js库使用七牛云存储cdn加速服务、Google Fonts Open Sans字体库使用360CDN公共库代替等。<br>360CDN公共库代替：<a href="http://ajax.useso.com" title="360CDN公共库" target="_blank" rel="noopener">http://ajax.useso.com</a><br>360CDN公共库代替：<a href="http://fonts.useso.com" title="360CDN公共库" target="_blank" rel="noopener">http://fonts.useso.com</a></p><h3 id="Microsoft-ASP-net-CDN"><a href="#Microsoft-ASP-net-CDN" class="headerlink" title="Microsoft ASP.net CDN"></a><a href="http://www.asp.net/ajax/cdn" title="Microsoft ASP.net CDN" target="_blank" rel="noopener">Microsoft ASP.net CDN</a></h3><p>ASP.NET开发团队推出的一个新的微软Ajax CDN（Content Delivery Network，内容分发网络）服务，该服务提供了对AJAX库（包括jQuery 和 ASP.NET AJAX）的缓存支持。该服务是免费的，不需任何注册，可用于商业性或非商业性用途。<br>地址：<a href="http://www.asp.net/ajax/cdn" title="Microsoft ASP.net CDN" target="_blank" rel="noopener">http://www.asp.net/ajaxlibrary/cdn.ashx</a><br>Ps：微软出品，自然不会太差。虽然在天朝，速度依然不会太慢（当然比不上国内的其他cdn）。</p><h3 id="MaxCDN：jsDelivr"><a href="#MaxCDN：jsDelivr" class="headerlink" title="MaxCDN：jsDelivr"></a><a href="http://www.jsdelivr.com" title="MaxCDN：jsDelivr" target="_blank" rel="noopener">MaxCDN：jsDelivr</a></h3><p>MaxCDN是一家价格相对比较便宜的CDN公司，在全球分布着众多的节点。 jsDelivr是基于MaxCDN的一个免费开源的 CDN 解决方案，用于帮助开发者和站长。jsDelivr包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。<br>地址：<a href="http://www.jsdelivr.com" title="MaxCDN：jsDelivr" target="_blank" rel="noopener">http://www.jsdelivr.com</a><br>Ps：每一款CDN的节点数量都是大家所关心的，jsDelivr总共提供着13个节点。加载速度和CDNJS基本差不多，国内用户建议使用国内CDN服务最佳。大家可以自己测试看看。</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这些CDN公共库大都各具特色。大家可以自己选择性去使用。速度和稳定性以国内的百度和新浪为最佳（当然这是个人意见）。鉴于Google已经被墙，所有关于Google的服务大家还是尽快转移阵地，使用国内的CDN公共库服务吧。<br>注：如果担心CDN地址加载失败，可以这样载入本地jquery<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">!<span class="built_in">window</span>.jQuery &amp;&amp; <span class="built_in">document</span>.write(<span class="string">'&lt;script src="js/jquery.min.js"&gt;&lt;\/script&gt;'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CDN公共库是指将常用的JS库存放在CDN节点，以方便广大开发者直接调用。与将JS库存放在服务器单机上相比，CDN公共库更加稳定、高速。现在web应用都在使用JS类库，这些类库小的几十K，&lt;br&gt;大的几百K，而国内网络访问速度大家都知道不是那么惬意，所以给各位开发者推荐常用JS类库的CDN缓存，这样不管客户在哪里访问你的页面，调用公共类库的速度都会为你的页面节省很多时间。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://code.skyheng.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://code.skyheng.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Shiro Freemarker标签的使用</title>
    <link href="http://code.skyheng.com/post/25067.html"/>
    <id>http://code.skyheng.com/post/25067.html</id>
    <published>2017-06-11T11:30:35.000Z</published>
    <updated>2018-03-20T14:50:32.877Z</updated>
    
    <content type="html"><![CDATA[<p>Shiro提供了JSP的一套JSTL标签，用于做JSP页面做权限控制的。可以控制一些按钮和一些超链接，或者一些显示内容。这篇先讲讲 Freemarker的 Shiro标签。</p><a id="more"></a><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="引用包："><a href="#引用包：" class="headerlink" title="引用包："></a>引用包：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- freemarker + shiro（标签） begin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.mingsoft<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-freemarker-tags<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- freemarker + shiro（标签） begin --&gt;</span></span><br></pre></td></tr></table></figure><ul><li>他不是 shiro  官方提供的。如果不是 Maven  项目，请先下载。<h3 id="Java代码："><a href="#Java代码：" class="headerlink" title="Java代码："></a>Java代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreeMarkerConfigExtend</span> <span class="keyword">extends</span> <span class="title">FreeMarkerConfigurer</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TemplateException </span>&#123;  </span><br><span class="line">        <span class="keyword">super</span>.afterPropertiesSet();</span><br><span class="line">        Configuration cfg = <span class="keyword">this</span>.getConfiguration();</span><br><span class="line">        cfg.setSharedVariable(<span class="string">"shiro"</span>, <span class="keyword">new</span> ShiroTags());<span class="comment">//shiro标签</span></span><br><span class="line">        cfg.setNumberFormat(<span class="string">"#"</span>);<span class="comment">//防止页面输出数字,变成2,000</span></span><br><span class="line">        <span class="comment">//可以添加很多自己的要传输到页面的[方法、对象、值]</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置文件："><a href="#配置文件：" class="headerlink" title="配置文件："></a>配置文件：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置freeMarker 拓展--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span> <span class="attr">class</span>=<span class="string">"com.sojson.core.freemarker.extend.FreeMarkerConfigExtend"</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPath"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/WEB-INF/ftl/<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerVariables"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"xml_escape"</span> <span class="attr">value-ref</span>=<span class="string">"fmXmlEscape"</span>/&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"api"</span> <span class="attr">value-ref</span>=<span class="string">"api"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 315360000 --&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"defaultEncoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"url_escaping_charset"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"boolean_format"</span>&gt;</span>true,false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"date_format"</span>&gt;</span>yyyy-MM-dd<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- &lt;prop key="number_format"&gt;0.######&lt;/prop&gt;--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>#<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"whitespace_stripping"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"auto_import"</span>&gt;</span></span><br><span class="line">  /common/config/top.ftl as _top, </span><br><span class="line">/common/config/left.ftl as _left, </span><br><span class="line">/common/config/html.ftl as _html,</span><br><span class="line">/common/config/bottom.ftl as _footer, </span><br><span class="line">/common/config/menu.ftl as _menu</span><br><span class="line"><span class="tag">&lt;/<span class="name">prop</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">props</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下面来介绍标签："><a href="#下面来介绍标签：" class="headerlink" title="下面来介绍标签："></a>下面来介绍标签：</h2><ol><li>guest（游客）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.guest</span>&gt;</span>  </span><br><span class="line">您当前是游客，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle qqlogin"</span> &gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.guest</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>2.user（已经登录，或者记住我登录）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.user</span>&gt;</span>  </span><br><span class="line">欢迎[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]登录，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/logout.shtml"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.user</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>3.authenticated（已经认证，排除记住我登录的）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.authenticated</span>&gt;</span>  </span><br><span class="line">用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]已身份验证通过  </span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.authenticated</span>&gt;</span></span><br><span class="line">``` </span><br><span class="line">4. notAuthenticated（和authenticated相反）</span><br><span class="line">```html</span><br><span class="line"><span class="tag">&lt;<span class="name">@shiro.notAuthenticated</span>&gt;</span></span><br><span class="line">    当前身份未认证（包括记住我登录的）</span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.notAuthenticated</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>这个功能主要用途，识别是不是本次操作登录过的，比如支付系统，进入系统可以用记住我的登录信息，但是当要关键操作的时候，需要进行认证识别。</li></ul><ol><li>principal标签，这个要稍微重点讲讲。好多博客都是一下带过。</li></ol><ul><li><code>principal</code>标签，取值取的是你登录的时候。在<code>Realm</code>实现类中的如下代码：<br><code>return new SimpleAuthenticationInfo(user,user.getPswd(), getName());</code></li><li>在new SimpleAuthenticationInfo(第一个参数,….)的第一个参数放的如果是一个username，那么就可以直接用。<!--取到username--><code>&lt;@shiro. principal/&gt;</code><br>如果第一个参数放的是对象，比如我喜欢放User对象。那么如果要取username字段。<!--需要指定property--><code>&lt;@shiro.principal property=&quot;username&quot;/&gt;</code><br>和Java如下Java代码一致<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = (User)SecurityUtils.getSubject().getPrincipals();</span><br><span class="line">String username = user.getUsername();</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>hasRole标签（判断是否拥有这个角色）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span>  </span><br><span class="line">用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]拥有角色admin<span class="tag">&lt;<span class="name">br</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.hasRole</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>hasAnyRoles标签（判断是否拥有这些角色的其中一个）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.hasAnyRoles</span> <span class="attr">name</span>=<span class="string">"admin,user,member"</span>&gt;</span>  </span><br><span class="line">用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]拥有角色admin或user或member<span class="tag">&lt;<span class="name">br</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.hasAnyRoles</span>&gt;</span>  </span><br><span class="line">``` </span><br><span class="line">8. lacksRole标签（判断是否不拥有这个角色）</span><br><span class="line">```html</span><br><span class="line"><span class="tag">&lt;<span class="name">@shiro.lacksRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span>  </span><br><span class="line">用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]不拥有admin角色</span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.lacksRole</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>hasPermission标签（判断是否有拥有这个权限）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">@shiro.hasPermission</span> <span class="attr">name</span>=<span class="string">"user:add"</span>&gt;</span>  </span><br><span class="line">用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]拥有user:add权限</span><br><span class="line"><span class="tag">&lt;/<span class="name">@shiro.hasPermission</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>lacksPermission标签（判断是否没有这个权限）</p><pre><code class="html"><span class="tag">&lt;<span class="name">@shiro.lacksPermission</span> <span class="attr">name</span>=<span class="string">"user:add"</span>&gt;</span>  用户[<span class="tag">&lt;<span class="name">@shiro.principal</span>/&gt;</span>]不拥有user:add权限<span class="tag">&lt;/<span class="name">@shiro.lacksPermission</span>&gt;</span></code></pre><p>11.自定义标签。</p></li></ol><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="http://www.sojson.com/blog/143.html" target="_blank" rel="noopener">http://www.sojson.com/blog/143.html</a></p><p>shiro-freemarker-tags jar: <a href="http://mvnrepository.com/artifact/net.mingsoft/shiro-freemarker-tags/0.1" target="_blank" rel="noopener">http://mvnrepository.com/artifact/net.mingsoft/shiro-freemarker-tags/0.1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shiro提供了JSP的一套JSTL标签，用于做JSP页面做权限控制的。可以控制一些按钮和一些超链接，或者一些显示内容。这篇先讲讲 Freemarker的 Shiro标签。&lt;/p&gt;
    
    </summary>
    
      <category term="shiro" scheme="http://code.skyheng.com/categories/shiro/"/>
    
      <category term="freemarker" scheme="http://code.skyheng.com/categories/shiro/freemarker/"/>
    
    
      <category term="shiro" scheme="http://code.skyheng.com/tags/shiro/"/>
    
      <category term="freemarker" scheme="http://code.skyheng.com/tags/freemarker/"/>
    
  </entry>
  
  <entry>
    <title>Velocity与Freemarker比较</title>
    <link href="http://code.skyheng.com/post/50779.html"/>
    <id>http://code.skyheng.com/post/50779.html</id>
    <published>2017-06-11T05:15:42.000Z</published>
    <updated>2018-03-20T14:51:22.288Z</updated>
    
    <content type="html"><![CDATA[<p>velocity与freemarker比较</p><a id="more"></a><ul><li>相比较 FreeMarker 而言，Velocity 更加简单、轻量级，但它的功能却没有 FreeMarker 那么强大。<br>对于大部分的应用来说，使用 FreeMarker 比 Velocity 更简单，因为 Velocity 还必须编写一些自定义的toolbox类以及一遍遍重复的编写一些比较通用的模版代码，因此也就丧失了刚开始开发时更多的宝贵时间。另外使用工具类和变通的方法在模版引擎中似乎不是一个非常有效的做法。同时，Velocity 的做法使得在Velocity的模版中大量的跟 Java 对象进行交互，这违反了简单的原则，尽管你也可以将代码转入控制器中实现。当然，如果你像使用 Velocity 一样来使用 FreeMarker ，那么 FreeMarker 也可以跟 Velocity 一样简单。</li><li>Velocity 一个优于 FreeMarker 的地方在于它有很广泛的第三方支持以及一个非常庞大的用户社区，你可以通过这个社区获得到很多的帮助，相反的 FreeMarker 在这方面要差很多。当然，也有越来越多的第三方软件开始在支持 FreeMarker 。</li></ul><hr><ul><li>下面是一些 FreeMarker 能做到的，而 Velocity 做不到的功能列表（且看着）：</li></ul><ol><li><p>日期和数字的支持<br>您可以执行运算和比较，对任意数量的类型，包括任意精度类型，而不仅仅是整数。<br>您可以比较和显示（格式化）日期/时间值。</p></li><li><p>国际化<br>您可以格式数字区域，各种各样的内置和自定义数字格式模式。<br>您可以格式日期地区和时区，各种各样的内置和定制的日期格式模式。<br>标识符（变量名）可以包含非英语字母一样重音字母，阿拉伯字母，汉字等</p></li><li><p>循环处理<br>您可以退出循环<br>您可以访问控制变量外循环机构的内部循环<br>您可以得知当前是否到了循环的结束位置</p></li><li><p>模版级别的数组处理<br>您可以使用[i]的语法来访问数组元素，包括原始的和非原始的指数<br>可以获取到数组的长度</p></li><li><p>宏定义<br>宏调用可以通过位置或名称进行参数传递<br>宏的参数可以设定默认值，在调用宏时如果没有指定该参数，则使用默认值代替<br>通过 &lt;@myMacro&gt;body<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#47;&#64;&#109;&#x79;&#77;&#x61;&#x63;&#114;&#x6f;">&#47;&#64;&#109;&#x79;&#77;&#x61;&#x63;&#114;&#x6f;</a> 可以支持宏的嵌套<br>可以通过文本表达的“宏的名称”来直接调用某个宏<br>宏允许先使用再定义<br>宏可以定义局部变量（新版本的Velocity也通过#local指令来实现该功能，尽管官方的文档还没有进行介绍）</p></li><li><p>命名空间<br>您可以使用多个名称空间的变数。当您建立“宏库”时是非常有用的 ，因为可以防止名称冲突与申请特定变量或与其他宏变量的库。</p></li><li><p>内置与 Java 语言无关的字符串、列表、Map 的操作方法</p></li><li><p>能提示模版中的拼写错误以及其他错误<br>当访问一个不存在的变量时，FreeMarker 在执行该模版时会报错，通过配置，你可以指定 FreeMarker 在碰到此类错误时是停止执行，还是忽略该错误，同时 FreeMarker 会在日志中记录此问题；<br>如果您输入错误指令的名称，FreeMarker将抛出一个异常。</p></li><li><p>更高级的文本输出工具<br>You can enclose a block of template in a set of tags that will cause it to apply HTML escaping or XML escaping (or any other transformation you can express as a FreeMarker expression for that matter) on all interpolations (${foo}) in the block.<br>FreeMarker has transforms, which are blocks of template that when rendered, go through a transforming filter. Built-in transforms include whitespace compressor, HTML and XML escaper. Best of all, you can implement your own transformers as well (i.e. if you generate Java source code, you can write a Java code pretty-printer transform and insert it into the template). Naturally, transforms can be nested.<br>You can explicitly flush the output writer with a built-in flush-directive.<br>You can stop the rendering with a built-in stop-directive.</p></li><li><p>文本处理<br>支持Java的特殊字符处理，例如\b, \t, \n, \f, \r, \”, \’, \，以及UNICODE的\xXXXX<br>除了通常的字符串，数字，和布尔常量您可以定义列表和地图文字以及内部模板</p></li><li><p>高级的空格清除<br>FreeMarker 将删除一些多余的空格、跳格、换行等字符，从而消除一些令人厌烦的明显多余的空格<br>FreeMarker 也提供指令来删除多于的空格</p></li><li><p>与其他技术的集成<br>提供 JSP 标签库以便在 JSP 中嵌入 FreeMarker 模版<br>可以直接跟 Python 对象一起工作</p></li><li><p>更强大的XML转换功能</p></li><li><p>先进的模板元程序<br>您可以捕捉到输出的任意部分范本背景变量<br>您可以任意解释的范围变量，就好像它是一个模板定义</p></li></ol><h2 id="velocity"><a href="#velocity" class="headerlink" title="velocity"></a>velocity</h2><ul><li>是较早出现的用于代替jsp的模板语言<br><strong>优点：</strong><br>1、不能编写java代码，可以实现严格的mvc分离<br>2、性能良好，据说比jsp性能还要好些<br>3、使用表达式语言，据说jsp的表达式语言就是学velocity的<br><strong>缺点：</strong><br>1、不是官方标准<br>2、用户群体和第三方标签库没有jsp多。<br>3、对jsp标签支持不够好</li></ul><h2 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h2><p><strong>优点：</strong><br>1、不能编写java代码，可以实现严格的mvc分离<br>2、性能非常不错<br>3、对jsp标签支持良好<br>4、内置大量常用功能，使用非常方便<br>5、宏定义（类似jsp标签）非常方便<br>6、使用表达式语言<br><strong>缺点：</strong><br>1、不是官方标准<br>2、用户群体和第三方标签库没有jsp多</p><ul><li>选择freemarker的原因：</li></ul><ol><li>性能。velocity应该是最好的，其次是jsp，普通的页面freemarker性能最差（虽然只是几毫秒到十几毫秒的差距）。但是在复杂页面上（包含大量判断、日期金额格式化）的页面上，freemarker的性能比使用tag和el的jsp好。</li><li>宏定义比jsp tag方便</li><li>内置大量常用功能。比如html过滤，日期金额格式化等等，使用非常方便</li><li>支持jsp标签</li><li>可以实现严格的mvc分离</li></ol><h2 id="FreeMarker的优点和缺点"><a href="#FreeMarker的优点和缺点" class="headerlink" title="FreeMarker的优点和缺点"></a>FreeMarker的优点和缺点</h2><h3 id="一、-FreeMarker简介"><a href="#一、-FreeMarker简介" class="headerlink" title="一、 FreeMarker简介"></a>一、 FreeMarker简介</h3><ul><li>FreeMarker是一个用Java语言编写的模板引擎，它基于模板来生成文本输出。<br>所谓模板，就是一份已经写好了基本内容，有着固定格式的文档，其中空出或者用占位符标识的内容，由使用者来填充，不同的使用者给出的数据是不同的。在模板中的占位符，在模板运行时，由模板引擎来解析模板，并采用动态数据替换占位符部分的内容。<br>FreeMarker与Web容器无关，即在Web运行时，它并不知道Servlet或HTTP。它不仅可以用作表现层的实现技术，而且还可以用于生成XML，JSP或Java 文等。</li></ul><h3 id="二、-FreeMarker的优点和缺点"><a href="#二、-FreeMarker的优点和缺点" class="headerlink" title="二、 FreeMarker的优点和缺点"></a>二、 FreeMarker的优点和缺点</h3><ul><li>(一) FreeMarker的优点</li></ul><ol><li><p>使用FreeMarker的优点之一，可以彻底的分离表现层和业务逻辑。<br>使用JSP 开发过程中在页面中大量的存在业务逻辑的代码，使得页面内容凌乱，在后期大量的修改维护过程中就变得非常困难。<br>FreeMarker根本不支持Java脚本代码。<br>FreeMarker的原理就是：模板+数据模型=输出，模板只负责数据在页面中的表现，不涉及任何的逻辑代码，而所有的逻辑都是由数据模型来处理的。用户最终看到的输出是模板和数据模型合并后创建的。</p></li><li><p>使用FreeMarker的优点之二，可以提高开发效率。<br>在我们以往的开发中，使用的都是JSP 页面来展示数据的，即所谓的表现层。我们都知道，JSP在第一次执行的时候需要转换成Servlet类，开发阶段进行功能调适时，需要频繁的修改JSP，每次修改都要编译和转换，那么试想一天中我们浪费在程序编译的时间有多少。相对于JSP来说，FreeMarker模板技术不存在编译和转换的问题，所以就不会存在上述问题。而且开发过程中，我们在不必在等待界面设计开发人员完成页面原形后，我们再来开发程序。</p></li><li><p>使用FreeMarker的优点之三，使得开发过程中的人员分工更加明确。<br>以往用JSP展现数据时，作为程序员的我们，并不熟悉界面设计技术，反之界面开发人员，也并不熟悉程序语言。对两者而言，交替性的工作本身就有难度。有时候稍有不慎，可能会将某个页面元素删除或去掉了某个程序符号，使得页面走样或程序错误，这样就需要双方相互沟通协作，解决出现的问题。有时候因为项目中的时间，任务量等因素的存在，可能这个工作就由一个人来完成，这样就可能加大某一方开发人员的工作量。<br>使用FreeMarker后，作为界面开发人员，只专心创建HTML文件、图像以及Web页面的其他可视化方面，不用理会数据；而程序开发人员则专注于系统实现，负责为页面准备要显示的数据。</p></li></ol><ul><li>(二)FreeMarker的缺点</li></ul><ol><li>使用FreeMarker的缺点之一，应用FreeMarker模板技术，在修改模板后，可能会看到已经过期的数据。如：生成静态的HTML页面后，如果一旦模板改变，而没有及时更新模板生成的HTML页面的话，用户看到的就是过期的数据。</li><li>使用FreeMarker的缺点之二，FreeMarker模板技术在应用过程中，FreeMarker中的变量必须要赋值，如果不赋值，那么就会抛出异常。想避免错误就要应用if/elseif/else 指令进行判段，如果对每一个变量都判断的话，那么则反而增加了编程的麻烦。</li><li>使用FreeMarker的缺点之三，FreeMarker的map限定key必须是string，其他数据类型无法操作</li><li>使用FreeMarker的缺点之四，FreeMarker不支持集群应用。为了编成的方便性，把序列化的东西都放到了Session中，如Session，request等，在开发的过程中确实方便，但如果将应用放到集群中，就会出现错误。</li></ol><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="http://blog.csdn.net/jediael_lu/article/details/38010279" target="_blank" rel="noopener">http://blog.csdn.net/jediael_lu/article/details/38010279</a><br><a href="http://lishumingwm163-com.iteye.com/blog/933365" target="_blank" rel="noopener">http://lishumingwm163-com.iteye.com/blog/933365</a><br><a href="http://autumnice.blog.163.com/blog/static/5552002011912102954555/" target="_blank" rel="noopener">http://autumnice.blog.163.com/blog/static/5552002011912102954555/</a></p><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;velocity与freemarker比较&lt;/p&gt;
    
    </summary>
    
      <category term="velocity" scheme="http://code.skyheng.com/categories/velocity/"/>
    
      <category term="freemarker" scheme="http://code.skyheng.com/categories/velocity/freemarker/"/>
    
    
      <category term="freemarker" scheme="http://code.skyheng.com/tags/freemarker/"/>
    
      <category term="velocity" scheme="http://code.skyheng.com/tags/velocity/"/>
    
  </entry>
  
  <entry>
    <title>Logback.xml常用配置详解</title>
    <link href="http://code.skyheng.com/post/24506.html"/>
    <id>http://code.skyheng.com/post/24506.html</id>
    <published>2017-06-08T14:50:08.000Z</published>
    <updated>2018-03-20T14:51:22.272Z</updated>
    
    <content type="html"><![CDATA[<p>最近一个项目中用到logback来配置日志，网上找来找去都太零碎，而且重复太多，没有一个全面的介绍怎么配置的，这里我就整理一下。</p><a id="more"></a><h1 id="根节点包含的属性"><a href="#根节点包含的属性" class="headerlink" title="根节点包含的属性"></a>根节点包含的属性</h1><ul><li>scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</li><li>scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</li><li>debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。</li></ul><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 其他配置省略--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="根节点的子节点"><a href="#根节点的子节点" class="headerlink" title="根节点的子节点"></a>根节点的子节点</h1><p>结构目录如下：</p><p><img src="http://static.easygeek.com.cn/1478490017989.PNG" alt="image"></p><h2 id="设置上下文名称："><a href="#设置上下文名称：" class="headerlink" title="设置上下文名称："></a>设置上下文名称：</h2><p>每个logger都关联到logger上下文，默认上下文名称为default。但可以使用设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改，如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>myAppName<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 其他配置省略--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="设置变量："><a href="#设置变量：" class="headerlink" title="设置变量："></a>设置变量：</h2><p>用来定义变量值的标签， 有两个属性name和value：</p><ul><li>name: 变量的名称</li><li>value: 的值时变量定义的值。</li></ul><p>通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量；例如使用定义上下文名称，然后在设置logger上下文时使用，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"APP_Name"</span> <span class="attr">value</span>=<span class="string">"myAppName"</span> /&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>$&#123;APP_Name&#125;<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 其他配置省略--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取时间戳字符串："><a href="#获取时间戳字符串：" class="headerlink" title="获取时间戳字符串："></a>获取时间戳字符串：</h2><ul><li>key: 标识此 的名字；</li><li>datePattern: 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循java.txt.SimpleDateFormat的格式。</li></ul><p>例如将解析配置文件的时间作为上下文名称，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">timestamp</span> <span class="attr">key</span>=<span class="string">"bySecond"</span> <span class="attr">datePattern</span>=<span class="string">"yyyyMMdd'T'HHmmss"</span>/&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>$&#123;bySecond&#125;<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 其他配置省略--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="设置loger"><a href="#设置loger" class="headerlink" title="设置loger"></a>设置loger</h2><p>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定。仅有一个name属性，一个可选的level和一个可选的addtivity属性。</p><ul><li>name: 用来指定受此loger约束的某一个包或者具体的某一个类。</li><li>level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO,WARN,ERROR,ALL和OFF，还有一个特俗值INHERITED或者同义词NULL`，代表强制执行上级的级别。 如果未设置此属性，那么当前loger将会继承上级的级别。</li><li>addtivity: 是否向上级loger传递打印信息。默认是true。</li></ul><p>也是元素，但是它是根loger。只有一个level属性，应为已经被命名为”root”。</p><ul><li>level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。 默认是DEBUG。</li></ul><p>和可以包含零个或多个元素，标识这个appender将会添加到这个loger。</p><p>例如： LogbackDemo.java类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> logback;  </span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;  </span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogbackDemo</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(LogbackDemo.class);  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        log.trace(<span class="string">"======trace"</span>);  </span><br><span class="line">        log.debug(<span class="string">"======debug"</span>);  </span><br><span class="line">        log.info(<span class="string">"======info"</span>);  </span><br><span class="line">        log.warn(<span class="string">"======warn"</span>);  </span><br><span class="line">        log.error(<span class="string">"======error"</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logback-xml配置文"><a href="#logback-xml配置文" class="headerlink" title="logback.xml配置文"></a>logback.xml配置文</h2><p>第1种：只配置root</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span>   </span><br><span class="line">    <span class="comment">&lt;!-- encoder 默认配置为PatternLayoutEncoder --&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">appender</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span>             </span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">root</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中appender的配置表示打印到控制台(稍后详细讲解appender )； 将root的打印级别设置为“INFO”，指定了名字为“STDOUT”的appender。</p><p>当执行logback.LogbackDemo类的main方法时，root将级别为“INFO”及大于“INFO”的日志信息交给已经配置好的名为“STDOUT”的appender处理，“STDOUT”appender将信息打印到控制台；</p><p>打印结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">13:30:38.484 [main] INFO  logback.LogbackDemo - ======info  </span><br><span class="line">13:30:38.500 [main] WARN  logback.LogbackDemo - ======warn  </span><br><span class="line">13:30:38.500 [main] ERROR logback.LogbackDemo - ======error</span><br></pre></td></tr></table></figure><p>第2种：带有loger的配置，不指定级别，不指定appender：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span>   </span><br><span class="line">    <span class="comment">&lt;!-- encoder 默认配置为PatternLayoutEncoder --&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">appender</span>&gt;</span>   </span><br><span class="line">  <span class="comment">&lt;!-- logback为java中的包 --&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"logback"</span>/&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>&gt;</span>             </span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">root</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中appender的配置表示打印到控制台(稍后详细讲解appender )； 将控制logback包下的所有类的日志的打印，但是并没用设置打印级别，所以继承他的上级的日志级别“DEBUG”； 没有设置addtivity，默认为true，将此loger的打印信息向上级传递； 没有设置appender，此loger本身不打印任何信息。 将root的打印级别设置为“DEBUG”，指定了名字为“STDOUT”的appender。</p><p>当执行logback.LogbackDemo类的main方法时，因为LogbackDemo 在包logback中，所以首先执行，将级别为“DEBUG”及大于“DEBUG”的日志信息传递给root，本身并不打印； root接到下级传递的信息，交给已经配置好的名为“STDOUT”的appender处理，“STDOUT”appender将信息打印到控制台；</p><p>打印结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">13:19:15.406 [main] DEBUG logback.LogbackDemo - ======debug  </span><br><span class="line">13:19:15.406 [main] INFO  logback.LogbackDemo - ======info  </span><br><span class="line">13:19:15.406 [main] WARN  logback.LogbackDemo - ======warn  </span><br><span class="line">13:19:15.406 [main] ERROR logback.LogbackDemo - ======error</span><br></pre></td></tr></table></figure><p>第3种：带有多个loger的配置，指定级别，指定appender:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>   </span><br><span class="line">   <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span>   </span><br><span class="line">    <span class="comment">&lt;!-- encoder 默认配置为PatternLayoutEncoder --&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">appender</span>&gt;</span>   </span><br><span class="line">  <span class="comment">&lt;!-- logback为java中的包 --&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"logback"</span>/&gt;</span>   </span><br><span class="line">  <span class="comment">&lt;!--logback.LogbackDemo：类的全路径 --&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"logback.LogbackDemo"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">logger</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ERROR"</span>&gt;</span>             </span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">root</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中appender的配置表示打印到控制台(稍后详细讲解appender )。</p><p>将控制logback包下的所有类的日志的打印，但是并没用设置打印级别，所以继承他的上级的日志级别“DEBUG”； 没有设置addtivity，默认为true，将此loger的打印信息向上级传递； 没有设置appender，此loger本身不打印任何信息。</p><p>控制logback.LogbackDemo类的日志打印，打印级别为“INFO”； additivity属性为false，表示此loger的打印信息不再向上级传递， 指定了名字为“STDOUT”的appender。</p><p>将root的打印级别设置为“ERROR”，指定了名字为“STDOUT”的appender。</p><p>当执行logback.LogbackDemo类的main方法时，先执行，将级别为“INFO”及大于“INFO”的日志信息交给此loger指定的名为“STDOUT”的appender处理，在控制台中打出日志，不再向次loger的上级 传递打印信息； 未接到任何打印信息，当然也不会给它的上级root传递任何打印信息；</p><p>打印结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4:09:01.531 [main] INFO  logback.LogbackDemo - ======info  </span><br><span class="line">14:09:01.531 [main] INFO  logback.LogbackDemo - ======info  </span><br><span class="line">14:09:01.531 [main] WARN  logback.LogbackDemo - ======warn  </span><br><span class="line">14:09:01.531 [main] WARN  logback.LogbackDemo - ======warn  </span><br><span class="line">14:09:01.531 [main] ERROR logback.LogbackDemo - ======error  </span><br><span class="line">14:09:01.531 [main] ERROR logback.LogbackDemo - ======error</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一个项目中用到logback来配置日志，网上找来找去都太零碎，而且重复太多，没有一个全面的介绍怎么配置的，这里我就整理一下。&lt;/p&gt;
    
    </summary>
    
      <category term="logback" scheme="http://code.skyheng.com/categories/logback/"/>
    
    
      <category term="logback" scheme="http://code.skyheng.com/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>Mysql数据库优化方法,千万级数据库记录查询轻松解决</title>
    <link href="http://code.skyheng.com/post/61394.html"/>
    <id>http://code.skyheng.com/post/61394.html</id>
    <published>2017-05-13T15:20:54.000Z</published>
    <updated>2018-03-20T14:51:22.288Z</updated>
    
    <content type="html"><![CDATA[<p>mysql数据库优化方法,千万级数据库记录查询轻松解决<br><a id="more"></a><br><img src="http://img.skyheng.com/picture/public/mysql.png" alt="mysql"></p><ul><li>1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</li><li>2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，<ul><li>Sql 代码 : <code>select id from t where num is null</code></li><li>可以在 num 上设置默认值 0,确保表中 num 列没有 null 值，然后这样查询，代码 : <code>select id from t where num=0</code></li></ul></li><li>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</li><li>4.应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，<ul><li>Sql 代码 : <code>select id from t where num=10 or num=20</code></li><li>可以这样查询，Sql 代码 : <code>select id from t where num=10 union all select id from t where num=20</code></li></ul></li><li>5.in 和 not in 也要慎用，否则会导致全表扫描，如：<ul><li>Sql 代码 : <code>select id from t where num in(1,2,3)</code>，对于连续的数值，能用 between 就不要用in了，Sql 代码 : <code>select id from t where num between 1 and 3</code></li></ul></li><li>6.下面的查询也将导致全表扫描：<ul><li>Sql 代码 : <code>select id from t where name like &#39;%c%&#39;</code>，若要提高效率，可以考虑全文检索。</li></ul></li><li>7.如果在 where 子句中使用参数，也会导致全表扫描。因为 SQL 只有在运行时才会解析局部变量，但优 化程序不能将访问计划的选择推迟到运行时;它必须在编译时进行选择。然 而，如果在编译时建立访问计 划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<ul><li>Sql 代码 : <code>select id from t where num=@num</code></li><li>可以改为强制查询使用索引：</li><li>Sql 代码 : <code>select id from t with(index(索引名)) where num=@num</code></li></ul></li><li>8.应尽量避免在 where 子句中对字段进行表达式操作， 这将导致引擎放弃使用索引而进行全表扫描。<ul><li>Sql 代码 : <code>select id from t where num/2=100;</code></li><li>可以这样查询，Sql 代码 : <code>select id from t where num=100*2;</code></li></ul></li><li>9.应尽量避免在 where 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<ul><li>Sql 代码 : <code>select id from t where substring(name,1,3)=&#39;abc&#39;;#name 以 abc 开头的 id</code></li><li>应改为，Sql 代码 : <code>select id from t where name like &#39;abc%&#39;;</code></li></ul></li><li>10.不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用 索引。</li><li>11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件 时才能保证系统使用该索引， 否则该索引将不会 被使用， 并且应尽可能的让字段顺序与索引顺序相一致。</li><li>12.不要写一些没有意义的查询，如需要生成一个空表结构：<ul><li>Sql 代码 : <code>select col1,col2 into #t from t where 1=0;</code></li><li>这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：</li><li>Sql 代码 : <code>create table #t(…);</code></li></ul></li><li>13.很多时候用 exists 代替 in 是一个好的选择：<ul><li>Sql 代码 : <code>select num from a where num in(select num from b);</code></li><li>用下面的语句替换：</li><li>Sql 代码 : <code>select num from a where exists(select 1 from b where num=a.num);</code></li></ul></li><li>14.并不是所有索引对查询都有效，SQL 是根据表中数据来进行查询优化的，当索引列有大量数据重复时， SQL 查询可能不会去利用索引，如一表中有字段 <strong><em>,male、female 几乎各一半，那么即使在 </em></strong> 上建 了索引也对查询效率起不了作用。</li><li>15.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过 6 个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</li><li>16.应尽可能的避免更新 clustered 索引数据列， 因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。</li><li>17.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并 会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言 只需要比较一次就够了。</li><li>18.尽可能的使用 varchar/nvarchar 代替 char/nchar , 因为首先变长字段存储空间小， 可以节省存储空间， 其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</li><li>19.任何地方都不要使用 select <em> from t ,用具体的字段列表代替“</em>”,不要返回用不到的任何字段。</li><li>20.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限(只有主键索引)。</li><li>21.避免频繁创建和删除临时表，以减少系统表资源的消耗。</li><li>22.临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用 表中的某个数据集时。但是，对于一次性事件， 最好使用导出表。</li><li>23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table,避免造成大量 log ,以提高速度;如果数据量不大，为了缓和系统表的资源，应先 create table,然后 insert.</li><li>24.如果使用到了临时表， 在存储过程的最后务必将所有的临时表显式删除， 先 truncate table ,然后 drop table ,这样可以避免系统表的较长时间锁定。</li><li>25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过 1 万行，那么就应该考虑改写。</li><li>26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更 有效。</li><li>27.与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</li><li>28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ,在结束时设置 SET NOCOUNT OFF .无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</li><li>29.尽量避免大事务操作，提高系统并发能力。 sql 优化方法使用索引来更快地遍历表。 缺省情况下建立的索引是非群集索引，但有时它并不是最佳的。在非群集索引下，数据在物理上随机存放在数据页上。合理的索引设计要建立在对各种查询的分析和预测上。一般来说：<ul><li>a.有大量重复值、且经常有范围查询( &gt; ,&lt; ,&gt; =,&lt; =)和 order by、group by 发生的列，可考虑建立集群索引;</li><li>b.经常同时存取多列，且每列都含有重复值可考虑建立组合索引;</li><li>c.组合索引要尽量使关键查询形成索引覆盖，其前导列一定是使用最频繁的列。索引虽有助于提高性能但 不是索引越多越好，恰好相反过多的索引会导致系统低效。用户在表中每加进一个索引，维护索引集合就 要做相应的更新工作。</li></ul></li><li>30.定期分析表和检查表。<ul><li>分析表的语法：<code>ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tb1_name[, tbl_name]...</code></li><li>以上语句用于分析和存储表的关键字分布，分析的结果将可以使得系统得到准确的统计信息，使得SQL能够生成正确的执行计划。如果用户感觉实际执行计划并不是预期的执行计划，执行一次分析表可能会解决问题。在分析期间，使用一个读取锁定对表进行锁定。这对于MyISAM，DBD和InnoDB表有作用。</li><li>例如分析一个数据表：<code>analyze table table_name</code></li><li>检查表的语法：<code>CHECK TABLE tb1_name[,tbl_name]...[option]...option = {QUICK | FAST | MEDIUM | EXTENDED | CHANGED}</code></li><li>检查表的作用是检查一个或多个表是否有错误，CHECK TABLE 对MyISAM 和 InnoDB表有作用，对于MyISAM表，关键字统计数据被更新</li><li>CHECK TABLE 也可以检查视图是否有错误，比如在视图定义中被引用的表不存在。</li></ul></li><li>31.定期优化表。<ul><li>优化表的语法：<code>OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tb1_name [,tbl_name]...</code></li><li>如果删除了表的一大部分，或者如果已经对含有可变长度行的表(含有 VARCHAR、BLOB或TEXT列的表)进行更多更改，则应使用OPTIMIZE TABLE命令来进行表优化。这个命令可以将表中的空间碎片进行合并，并且可以消除由于删除或者更新造成的空间浪费，但OPTIMIZE TABLE 命令只对MyISAM、 BDB 和InnoDB表起作用。</li><li>例如： <code>optimize table table_name</code></li><li>注意： analyze、check、optimize执行期间将对表进行锁定，因此一定注意要在MySQL数据库不繁忙的时候执行相关的操作。</li></ul></li></ul><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><ul><li>1、在海量查询时尽量少用格式转换。</li><li>2、ORDER BY 和 GROPU BY:使用 ORDER BY 和 GROUP BY 短语，任何一种索引都有助于 SELECT 的性能提高。</li><li>3、任何对列的操作都将导致表扫描，它包括数据库教程函数、计算表达式等等，查询时要尽可能将操作移 至等号右边。</li><li>4、IN、OR 子句常会使用工作表，使索引失效。如果不产生大量重复值，可以考虑把子句拆开。拆开的子 句中应该包含索引。</li><li>5、只要能满足你的需求，应尽可能使用更小的数据类型：例如使用 MEDIUMINT 代替 INT</li><li>6、尽量把所有的列设置为 NOT NULL,如果你要保存 NULL,手动去设置它，而不是把它设为默认值。</li><li>7、尽量少用 VARCHAR、TEXT、BLOB 类型</li><li>8、如果你的数据只有你所知的少量的几个。最好使用 ENUM 类型</li><li>9、正如 graymice 所讲的那样，建立索引。</li><li>10、合理用运分表与分区表提高数据存放和提取速度。</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql数据库优化方法,千万级数据库记录查询轻松解决&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://code.skyheng.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://code.skyheng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>程序员，你为什么值这么多钱？</title>
    <link href="http://code.skyheng.com/post/49258.html"/>
    <id>http://code.skyheng.com/post/49258.html</id>
    <published>2017-03-12T14:28:37.000Z</published>
    <updated>2018-03-20T14:50:32.862Z</updated>
    
    <content type="html"><![CDATA[<p>听说一段时间不加薪，人就会开始思考起和工资有关的问题。消费水平又提升了，能力也进步了，经验也更多了，怎么还没涨工资呢？</p><a id="more"></a><p><img src="http://img.skyheng.com/why-programer-deserve-so-much-money.jpg" alt=""></p><p>近两年，有了点余钱就开始考虑起投资来，比如：投资股票首先需要判断的就是关于公司价值和价格的关系。回到个人身上，似乎工资也就是个人价值在市场上的一个价格。那我们的工资是如何被定义或确定的？</p><p>因为我的程序员职业背景，下面就以这个职业为例来分析下这个问题。</p><h3 id="表象与实质"><a href="#表象与实质" class="headerlink" title="表象与实质"></a>表象与实质</h3><p>工资的高低给我们的感觉似乎和你的技能、经验呈一个正比关系。毕竟每次找工作面试的时候，考察的都是候选人的技能、经验相关水平，然后给予一个相应的级别，最后确定一个工资范围。而且一般有正规工资体系的公司，都会按照专业水平划分能力级别，以此对应不同的工资等级。</p><p>这个对应关系是我们能观察到的一个现象，且有切身的体会。所以很直觉的就会把工资高低和我们的技能水平、经验值关联起来。工作初期的很长那么一段时间内我都是这么以为的。</p><p>因而，当刚工作了两三年后，技能水平迅猛提升、经验值飞速增长，这个阶段属于<a href="http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;mid=2650610717&amp;idx=1&amp;sn=f23d1afadab0c22249eab5f332cd0677&amp;chksm=834c7be9b43bf2ff13e168b25b319348da2f47d9df358721971b47f227322ee293551a6fba6c" target="_blank" rel="noopener">《两种增长类型》</a>中的对数增长初期。上升曲线特别陡峭，而工资的增长呢，则属于指数增长的初期，几乎感觉不到增长，自我感觉是技能和经验已经翻倍，但工资似乎还在原地或就涨了 20%。</p><p>其中有个例外就是校招，校招刚毕业的同学的工资有可能比毕业工作了两三年的同学更高，出现倒挂现象。这在大公司的校招比较常见，这里决定工资高低的，和经验技能无关，只和公司的人才储备、市场竞争、品牌宣传有关。</p><p>所以，工资和技能经验的直观关系仅仅是一个表象，那么它的实质是什么呢？曾经读到刘润的一篇文章，其中写道：</p><blockquote><p>工资不是用来支付给技能的，不要以为技能越高、工资自然应该越高。<br>工资是用来支付给责任的，责任越大，工资越高。<br>涨工资，是因为承担了更大的责任。</p></blockquote><p>上面所说正是工资的实质。所以，站在公司的角度，它会设计很多不同的岗位，有管理岗、有各种专业系列岗，而每个岗位又对应不同的职责。而岗位职责对技能和经验的要求决定了该岗位的工资范围，也决定了整个公司的人力成本范围。</p><p>搞清楚了工资的实质，就明白涨工资是怎么回事了。涨工资，一种是岗位职责工资范围内的调节，毕竟如果长时间不涨，也不利于人员稳定。另一种是，升级到更高级别岗位，这种除了当下领到的工资涨了，而潜在的可涨的工资范围也提高了。所以，有时你的技能提升后，但公司业务发展没那么快，不能提供更高级别的岗位职责，工资也就涨不上去了。</p><p>另一个误解是，工资跟我的表现有关。今年工作很努力，表现很好，年底了公司业绩也很好，就会预期涨工资。但前面说了工资是支付给责任的，不取决于你的表现。这种情况一般通过发奖金来奖励突出的业绩，这属于短期激励，当然也有公司会在岗位职责工资范围内适当调节提升以保持长期激励。</p><p>对于管理岗位，因为经理人不属于个人贡献者，所以其工资的一部分通常和团队绩效绑定，称为“绩效奖金”。这个奖金一般在管理岗的全部薪酬中的百分比会随着薪酬的增加而增加，比如：高层可能占到 50%，而中层占到 20%-30%。前 Intel CEO 安迪·格鲁夫说过：</p><blockquote><p>每一份工作所包含的最大价值都是有限的，不管一个人在这个职位上待了多久，最后总会达到薪资的上限。</p></blockquote><p>这个上限就是岗位工资范围的天花板。而外部市场会提供一些工资立即涨 50% 甚至翻倍的机会。面对这种机会时，先不要自大的以为你的价值被低估了，心想你看外面市场给了翻倍的价格。很可能是这样的，外部公司出现了岗位空缺，考虑到公司业务正快速发展的时间和市场机会成本，所以会开出一个高于一般市场价格的工资水平来迅速补缺。另外，空缺的岗位职责实际可能比你在当前公司的职责更大，你还要考虑自己能否承担得起。别通过了面试，最后却过不了试用期，仅领了三个月或半年的翻倍工资，实际是得不偿失的。</p><p>认清自己，认清工资的本质。</p><h3 id="价值与价格"><a href="#价值与价格" class="headerlink" title="价值与价格"></a>价值与价格</h3><p>程序员提供的是软件开发这种技术服务，而为了提供这种服务需要相当长时间的知识、技能和经验的积累。获得具备提供这类服务所需的学习和实践的时间构成了我们的「技能成本」，这形成了价值的一部分。</p><p>而公司支付给程序员的工资就是提供技术服务的市场零售价。既然提到了「市场零售价」这个概念，想一想，市场上有没有同类的，成本差距不大的商品，零售价却可以差距巨大，这是为什么？</p><p>我想到的是：女士皮包。曾经看到过一个案例：</p><blockquote><p>北京新光天地的某著名奢侈品专卖店遭遇盗窃，据说一个零售价好几万的包包被偷了。店长报警，但最终警方并没有刑事立案，因为那个包包的成本进价不过几百块钱。</p></blockquote><p>而在程序员提供技术服务的市场上也存在类似情况，技能经验水平差不多，但工资（零售价）差别巨大的个体。思考下包包的例子就明白了，奢侈品包包除了材料成本，还有什么成本？客户之所以要买这个奢侈品包包，最大的成本不在材料，而是在客户的头脑中建立起关于这个包包的品牌信息并形成一种对客户有独特价值的认知，这属于另一种成本：「传递成本」。</p><p><strong>那么，程序员也有两个成本：</strong></p><ul><li><p><strong>技能成本：专注于提供技术和服务本身所占用的时间和注意力。</strong></p></li><li><p><strong>传递成本：让你潜在的“客户”知道你所能提供的技术和服务的价值占用的时间和注意力。</strong></p></li></ul><p>这里有个案例很形象的说明两者的关系：</p><blockquote><p>2003 年，一群海洋科学家历时三年，花费了三百万美元研究经费，完成了一份关于美国海岸环境状况的报告。这份报告反映了巨大的环境问题，可以说是触目惊心，所以参与研究的科学家都认为此报告一出必然石破天惊，成为每晚电视新闻主题，登上《时代周刊》的封面，等着被记者采访轰炸。结果除了纽约时报在二十二版给了个报道，报告几乎没有引起任何反响，这件事就这么结束了。</p></blockquote><p>花费了三百万美元研究经费，但仅有 3% 用于宣传，所以毫无影响力。这个案例之中，97% 的研究经费相当于「技能成本」，而用于宣传的 3% 相当于「传递成本」。当二者差距悬殊时，即使很有价值的东西也很难被市场所知晓，无法实现价值最大化。传递价值也需要成本，而且成本不低，正所谓酒香也怕巷子深。</p><p>所以，有人总是感觉自己被低估，因为他正巧知道了另一个和自己技术差不多的人，似乎只是人际关系更好反而获得的零售价更高。而程序员这类技术人员倾向于高估自身的价值，而认为市场低估了自己的价格，往往是因为对传递价值部分的成本没有足够的认识。</p><p>这两个成本最终都会成为你价值的一部分，而且市场上确实会为此埋单。两个技能水平相当的程序员，一个在市场上默默无闻，一个在市场上拥有相当的影响力并占据了潜在客户的头脑。当后者要去市场上出售时，零售价通常会更高。</p><p>搞清楚了价值的两个成本，就能很好的理解其价格了。思考下，为什么程序员在一线城市的人力和生活成本高居不下，企业还是要在一线城市最贵的写字楼扎堆？</p><p>我的理解就是这两个成本的原因。程序员的技能成本大量依赖一线城市的高校教育资源。而程序员群体的普遍特性是忽视传递成本，那么企业只好在其扎堆的地方以最小化传递成本。因为考虑市场的时间和机会成本足以覆盖一线城市相对二三线城市的人力成本差价的。</p><p>市场上的商品有两种销售方式：</p><ul><li><p>卖的更多：大型卖场，薄利多销。</p></li><li><p>卖的更贵：奢侈品，相对成本一百倍的毛利。</p></li></ul><p>程序员提供的技术服务因为无法卖的更多，所以只有一种选择，像奢侈品一样卖的更贵，前提是学会像奢侈品牌一样思考。</p><h3 id="发展与变化"><a href="#发展与变化" class="headerlink" title="发展与变化"></a>发展与变化</h3><p>有时价值没变化，但工资也可能会一直涨。从现在起你即使停止技能增长，只是维持技能不被市场淘汰。在可预见的未来十多年，你的工资还会翻好几倍。这有两个原因：</p><ol><li><p>货币是保持贬值趋势的</p></li><li><p>人口抚养比变化</p></li></ol><p>人口抚养比，是一个国家非劳动的人口占总人口的比率。来自国家信息中心的数据，2011 年是中国人口红利发生转折的一年，从这年开始，总抚养比由降转升，2011 年为 34.4%，2012 年为 34.9%。这是劳动年龄人口相当长时期第一次出现了绝对下降，这意味着中国 15 岁以上不满 60 周岁的劳动年龄人口，在 2030 年以前将稳步地有所减少，中国已经面临“人口红利”逐步消退的压力。</p><p>简单说，就是 2016 年，14 亿人有 5 亿无法工作，人口抚养比 5/14=35.7%。如果 60 岁退休政策不变的话，2030 年大概会反过来，5 亿人工作养 9 亿无法工作（未成年、退休）的人。按这个趋势和经济规律，好消息是劳动力供给减少价格自然会上升；坏消息是，劳动强度和压力会更大，毕竟一个劳动人口差不多要养活两个非劳动人口。</p><p>另外一个值得关注的可能就是人工智能的发展，需要多少年，对人的替代因素能达到一个不可忽视的比例？这一点暂时只能且行且看吧。</p><p>…</p><p>关于工资，我们从表象到本质，从价格到价值，从当下到未来逐步看清了其中的真实。那么就只需客观面对这个真实，按照经济规律行事，理解市场定价原则。再积极一些，尽可能高效率的提高个人价值产出率，但也要认识到工资的“玻璃天花板”。</p><p>还记得前面提及的<a href="http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;mid=2650610717&amp;idx=1&amp;sn=f23d1afadab0c22249eab5f332cd0677&amp;chksm=834c7be9b43bf2ff13e168b25b319348da2f47d9df358721971b47f227322ee293551a6fba6c" target="_blank" rel="noopener">《两种增长类型》</a>吗？不幸的是工资增长符合对数曲线，但价值增长是可以有办法走指数曲线的，跨过了指数增长的拐点再兑现价值，收入就会突破工资增长的天花板。</p><p>至于如何做？还没有清晰的思考认知，倒是觉得和菜头这句话很有道理：</p><blockquote><p>因为只有真正认识你价值的人，最终才会成为你价值的一部分。</p></blockquote><p>当然，如果你还在对数增长的陡峭期，那么就简单了，先让工资增长到天花板附近吧。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说一段时间不加薪，人就会开始思考起和工资有关的问题。消费水平又提升了，能力也进步了，经验也更多了，怎么还没涨工资呢？&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://code.skyheng.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="闲聊" scheme="http://code.skyheng.com/categories/%E9%9A%8F%E7%AC%94/%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="随笔" scheme="http://code.skyheng.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="闲聊" scheme="http://code.skyheng.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>数据库事务的四大特性以及事务的隔离级别</title>
    <link href="http://code.skyheng.com/post/52661.html"/>
    <id>http://code.skyheng.com/post/52661.html</id>
    <published>2017-01-06T14:52:58.000Z</published>
    <updated>2018-03-20T14:50:32.862Z</updated>
    
    <content type="html"><![CDATA[<p>本篇讲诉数据库中事务的四大特性（ACID），并且将会详细地说明事务的隔离级别。</p><a id="more"></a><h2 id="四大特性（ACID）"><a href="#四大特性（ACID）" class="headerlink" title="四大特性（ACID）"></a>四大特性（ACID）</h2><blockquote><p>如果一个数据库声称支持事务的操作，那么该数据库必须要具备以下四个特性：</p></blockquote><h3 id="⑴-原子性（Atomicity）"><a href="#⑴-原子性（Atomicity）" class="headerlink" title="⑴ 原子性（Atomicity）"></a>⑴ 原子性（Atomicity）</h3><ul><li>原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。</li></ul><h3 id="⑵-一致性（Consistency）"><a href="#⑵-一致性（Consistency）" class="headerlink" title="⑵ 一致性（Consistency）"></a>⑵ 一致性（Consistency）</h3><ul><li>一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。</li><li>拿转账来说，假设用户A和用户B两者的钱加起来一共是5000，那么不管A和B之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是5000，这就是事务的一致性。</li></ul><h3 id="⑶-隔离性（Isolation）"><a href="#⑶-隔离性（Isolation）" class="headerlink" title="⑶ 隔离性（Isolation）"></a>⑶ 隔离性（Isolation）</h3><ul><li>隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。</li><li>即要达到这么一种效果：对于任意两个并发的事务T1和T2，在事务T1看来，T2要么在T1开始之前就已经结束，要么在T1结束之后才开始，这样每个事务都感觉不到有其他事务在并发地执行。</li><li>关于事务的隔离性数据库提供了多种隔离级别，稍后会介绍到。</li></ul><h3 id="⑷-持久性（Durability）"><a href="#⑷-持久性（Durability）" class="headerlink" title="⑷ 持久性（Durability）"></a>⑷ 持久性（Durability）</h3><ul><li>持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。</li><li>例如我们在使用JDBC操作数据库时，在提交事务方法后，提示用户事务操作完成，当我们程序执行完成直到看到提示后，就可以认定事务以及正确提交，即使这时候数据库出现了问题，也必须要将我们的事务完全执行完成，否则就会造成我们看到提示事务处理完毕，但是数据库因为故障而没有执行事务的重大错误。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇讲诉数据库中事务的四大特性（ACID），并且将会详细地说明事务的隔离级别。&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://code.skyheng.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://code.skyheng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>从Request中获得参数Map返回可读的Map</title>
    <link href="http://code.skyheng.com/post/32480.html"/>
    <id>http://code.skyheng.com/post/32480.html</id>
    <published>2016-12-22T05:46:33.000Z</published>
    <updated>2018-03-20T14:50:32.518Z</updated>
    
    <content type="html"><![CDATA[<p>request.getAttribute()大家不陌生吧，通产我们都是通过这个来接收界面传过来的参数的，但是你有没想过如果接收参数比较多，比较乱的时候你还用它么，有没有其他更好的方法呢？</p><a id="more"></a><h2 id="request-getParameterMap"><a href="#request-getParameterMap" class="headerlink" title="request.getParameterMap()"></a>request.getParameterMap()</h2><ul><li>原本想自己封装一个map方法传值，通过key-value的方式传参与读取。后来发现request自带了一个类似的方法可以使用，对了就是request.getParameterMap(），</li><li>但是这个方法的话返回类型是Map类型的对象，也就是符合key-value的对应关系，但这里要注意的是，value的类型是String[],而不是String. </li><li>在这里我就纠结了很久没有经过特殊处理的话，你得到的字符串是这样的Ljava.lang.String;@1234, 那么这一串是什么意思呢？</li><li>网上搜了下： “(Ljava/lang/String;)V” 它是一种对函数返回值和参数的编码。这种编码叫做JNI字段描述符（JavaNative Interface FieldDescriptors)。</li><li>一个数组int[]，就需要表示为这样”[I}”。如果多个数组double[][]就需要表示为这样。也就是说每一个方括号开始，就表示一个数组维数。多个方框后面，就是数组 的类型。如果以一个L开头的描述符，就是类描述符，它后紧跟着类的字符串，然后分号”；”结束。</li><li>比如”Ljava/lang/String;”就是表示类型String；</li><li>JNI方法描述符，主要就是在括号里放置参数，在括号后面放置返回类型，如下：<br>（参数描述符）返回类型</li><li>可以看不能用多么纠结啊……你可以通过重写toString方法实现可用，不过我觉得还是通过一个自己写的map转换比较方便<br>代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map resMap=transToMAP(request.getParameterMap());</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>: builderParams</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:从request中获得参数Map，并返回可读的Map</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> req</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016年12月22日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">builderParams</span><span class="params">(HttpServletRequest req, Model model)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 返回值Map</span></span><br><span class="line">Map returnMap = <span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="comment">// 参数Map</span></span><br><span class="line">Map params = req.getParameterMap();</span><br><span class="line">Iterator entries = params.entrySet().iterator();</span><br><span class="line">Map.Entry entry;</span><br><span class="line">String name = <span class="string">""</span>;</span><br><span class="line">String value = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">while</span> (entries.hasNext()) &#123;</span><br><span class="line">entry = (Map.Entry) entries.next();</span><br><span class="line">name = (String) entry.getKey();</span><br><span class="line">Object valueObj = entry.getValue();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == valueObj) &#123;</span><br><span class="line">value = <span class="string">""</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (valueObj <span class="keyword">instanceof</span> String[]) &#123;</span><br><span class="line">String[] values = (String[]) valueObj;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">value = values[i] + <span class="string">","</span>;</span><br><span class="line">&#125;</span><br><span class="line">value = value.substring(<span class="number">0</span>, value.length() - <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">value = valueObj.toString();</span><br><span class="line">&#125;</span><br><span class="line">returnMap.put(name, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> returnMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家可以参考借鉴下，有更好的方法，也希望您不吝赐教。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;request.getAttribute()大家不陌生吧，通产我们都是通过这个来接收界面传过来的参数的，但是你有没想过如果接收参数比较多，比较乱的时候你还用它么，有没有其他更好的方法呢？&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Win10常用的快捷键</title>
    <link href="http://code.skyheng.com/post/56296.html"/>
    <id>http://code.skyheng.com/post/56296.html</id>
    <published>2016-10-21T15:04:35.000Z</published>
    <updated>2018-03-20T14:51:22.241Z</updated>
    
    <content type="html"><![CDATA[<p>微软已经开始向用户大面积推送Win 10了，很多用户可能已经把新系统用的不亦乐乎了，Win 10上集成了很多新的功能和特性，比如广受喜爱的Cortana、新的浏览器Microsoft Edge、多任务视图、新通知栏、Xbox软件、Windows Hello生物识别系统等等。</p><a id="more"></a><p>　　 雷锋网在不久前刚刚介绍过关于Win 10“开始菜单”的新特性，今天，雷锋网为大家介绍一项使用Win 10必不可少的技能——快捷键。</p><p>　　 经常使用快捷键的老手肯定知道，Win键是一个神奇的键位，它的组合非常的神奇，我们就从Win键开始介绍吧：</p><p>　　 Win键+Tab：激活多任务视图</p><p>　　 Win键+A：激活操作中心</p><p>　　 Win键+C：通过语音激活Cortana</p><p>　　 Win键+D：显示桌面</p><p>　　 Win键+E：打开文件管理器</p><p>　　 Win键+G：打开Xbox游戏录制工具栏，供用户录制游戏视频或截屏</p><p>　　 Win键+H：激活Windows 10应用的分享功能</p><p>　　 Win键+I：打开Windows 10设置</p><p>　　 Win键+K：激活无线显示器连接或音频设备连接</p><p>　　 Win键+L：锁定屏幕</p><p>　　 Win键+P：投影屏幕</p><p>　　 Win键+R：运行</p><p>　　 Win键+S：激活Cortana</p><p>　　 Win键+X：打开高级用户功能</p><p>　　 Win键+左/右/上/下：移动应用窗口</p><p>　　 Win键+Ctrl+D：创建一个新的虚拟桌面</p><p>　　 Win键+Ctrl+F4：关闭最近使用的虚拟桌面</p><p>　　 Win键+Ctrl+左/右：切换虚拟桌面</p><p>　　 Win键+Shift+左/右：将应用从一个显示屏移至另一个显示屏</p><p>　　 Win键+1/2/3：打开任务栏中固定的程序，1代表任务栏中第一个应用图标</p><p>除此之外还有一些常规的快捷键：</p><p>　　 Ctrl + V:粘贴文本光标</p><p>　　 Ctrl + C:将选中的文本复制到剪贴板</p><p>　　 Ctrl + A :选择当前行中的所有文本</p><p>　　 Shift +左/右/上/下：移动光标并选中文本</p><p>　　 Ctrl + Shift +左/右：移动光标向左或向右</p><p>　　 Shift +向上翻页/下一页：移动光标向上或向下一页</p><p>　　 Ctrl + Shift + Home /End：移动光标的开始或者结束“屏幕缓冲区，”选择所有文本光标和命令提示符开头或结尾的输出。</p><p>　　 Ctrl +上/下：向上或向下移动一行命令提示符的历史</p><p>　　 Alt + F4 ：关闭命令提示符窗口</p><p>　　 Win10的快捷键大体上与Win 7、Win 8并无太大区别，也说明了微软的升级保证了用户的习惯性，虽然这些快捷键很简单，但如果作为一个长期使用PC的工作者来说，有了这些快捷键，就能让你的工作效率高出很多，长期鼠标流的小伙伴可以试试看哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微软已经开始向用户大面积推送Win 10了，很多用户可能已经把新系统用的不亦乐乎了，Win 10上集成了很多新的功能和特性，比如广受喜爱的Cortana、新的浏览器Microsoft Edge、多任务视图、新通知栏、Xbox软件、Windows Hello生物识别系统等等。&lt;/p&gt;
    
    </summary>
    
      <category term="win10" scheme="http://code.skyheng.com/categories/win10/"/>
    
    
      <category term="win10" scheme="http://code.skyheng.com/tags/win10/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper常用命令介绍</title>
    <link href="http://code.skyheng.com/post/25267.html"/>
    <id>http://code.skyheng.com/post/25267.html</id>
    <published>2016-10-21T06:32:39.000Z</published>
    <updated>2018-03-20T14:51:22.132Z</updated>
    
    <content type="html"><![CDATA[<p>zooKeeper常用命令介绍</p><a id="more"></a><p>ZooKeeper的客户端包括Java版本和C语言版本。使用Java版本连接zk的命令以下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zkCli.sh -server ip:port</span><br></pre></td></tr></table></figure><p>执行此命令，客户端成功连接上zk，会有类似以下的输出，其中，包括“Welcome to ZooKeeper!”的欢迎语，以及其他一些连接的信息等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">lihaodeMacBook-Pro:bin lihao$ ./zkCli.sh -server 127.0.0.1:2182</span><br><span class="line">Connecting to 127.0.0.1:2182</span><br><span class="line">2016-06-29 07:51:39,679 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT</span><br><span class="line">2016-06-29 07:51:39,682 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=192.168.31.107</span><br><span class="line">2016-06-29 07:51:39,682 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.8.0_77</span><br><span class="line">2016-06-29 07:51:39,684 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation</span><br><span class="line">……</span><br><span class="line">2016-06-29 07:51:39,686 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=127.0.0.1:2182 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@531d72ca</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">2016-06-29 07:51:39,715 [myid:] - INFO  [main-SendThread(127.0.0.1:2182):ClientCnxn$SendThread@1032] - Opening socket connection to server 127.0.0.1/127.0.0.1:2182. Will not attempt to authenticate using SASL (unknown error)</span><br><span class="line">JLine support is enabled</span><br><span class="line">2016-06-29 07:51:39,797 [myid:] - INFO  [main-SendThread(127.0.0.1:2182):ClientCnxn$SendThread@876] - Socket connection established to 127.0.0.1/127.0.0.1:2182, initiating session</span><br><span class="line">[zk: 127.0.0.1:2182(CONNECTING) 0] 2016-06-29 07:51:39,830 [myid:] - INFO  [main-SendThread(127.0.0.1:2182):ClientCnxn$SendThread@1299] - Session establishment complete on server 127.0.0.1/127.0.0.1:2182, sessionid = 0x155996605050000, negotiated timeout = 30000</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br></pre></td></tr></table></figure><p>连接成功后，便可以使用命令与zk服务进行交互。</p><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><p>help命令会输出zk支持的所有命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2182(CONNECTED) 0] help</span><br><span class="line">ZooKeeper -server host:port cmd args</span><br><span class="line">    stat path [watch]</span><br><span class="line">    set path data [version]</span><br><span class="line">    ls path [watch]</span><br><span class="line">    delquota [-n|-b] path</span><br><span class="line">    ls2 path [watch]</span><br><span class="line">    setAcl path acl</span><br><span class="line">    setquota -n|-b val path</span><br><span class="line">    history </span><br><span class="line">    redo cmdno</span><br><span class="line">    printwatches on|off</span><br><span class="line">    delete path [version]</span><br><span class="line">    sync path</span><br><span class="line">    listquota path</span><br><span class="line">    rmr path</span><br><span class="line">    get path [watch]</span><br><span class="line">    create [-s] [-e] path data acl</span><br><span class="line">    addauth scheme auth</span><br><span class="line">    quit </span><br><span class="line">    getAcl path</span><br><span class="line">    close </span><br><span class="line">    connect host:port</span><br></pre></td></tr></table></figure><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p>查看指定路径下包含的节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 2] ls /</span><br><span class="line">[zookeeper]</span><br></pre></td></tr></table></figure><h2 id="create"><a href="#create" class="headerlink" title="create"></a>create</h2><p>创建一个节点，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 3] create /zk mydata</span><br><span class="line">Created /zk</span><br></pre></td></tr></table></figure><p>以上命令创建一个/zk节点，且其内容为 “myData”</p><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><p>显示指定路径下节点的信息，例如，我们检查一下上面的/zk节点最否创建成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 4] get /zk</span><br><span class="line">mydata</span><br><span class="line">cZxid = 0xb59</span><br><span class="line">ctime = Thu Jun 30 11:13:24 CST 2016</span><br><span class="line">mZxid = 0xb59</span><br><span class="line">mtime = Thu Jun 30 11:13:24 CST 2016</span><br><span class="line">pZxid = 0xb59</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 6</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>可以看到/zk节点的内容为”myData”，且输出包含了znode的其他信息。有关各个字段的具体含义，请参见了本博客对znode的介绍。</p><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>设置节点的内容，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 6] set /zk &quot;anotherData&quot;</span><br><span class="line">……</span><br><span class="line">[zk: localhost:2181(CONNECTED) 7] get /zk</span><br><span class="line">&quot;anotherData&quot;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><p>删除一个节点，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 8] delete /zk</span><br><span class="line">[zk: localhost:2181(CONNECTED) 9] get /zk</span><br><span class="line">Node does not exist: /zk</span><br></pre></td></tr></table></figure><p>以上就是zk客户端最常用的几个命令，从这几个命令我们也可以看到zk提供的API设计的简单。</p><h2 id="四字母命令"><a href="#四字母命令" class="headerlink" title="四字母命令"></a>四字母命令</h2><p>ZooKeeper提供了多个由4个字母构成的命令，可以使用nc或者telnet来使用这些命令。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 127.0.0.1 2181</span><br></pre></td></tr></table></figure><p>成功连接zk后，输入conf<br>会看到以下输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clientPort=2181</span><br><span class="line">dataDir=D:\Soft\zookeeper-3.4.6\data\version-2</span><br><span class="line">dataLogDir=D:\Soft\zookeeper-3.4.6\data\version-2</span><br><span class="line">tickTime=2000</span><br><span class="line">maxClientCnxns=60</span><br><span class="line">minSessionTimeout=4000</span><br><span class="line">maxSessionTimeout=40000</span><br><span class="line">serverId=0</span><br></pre></td></tr></table></figure><p>或者使用nc来向zk发送4字母命令，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo conf | nc 192.168.229.161 2181</span><br></pre></td></tr></table></figure><p>其他常用的四字母命令如下表格所示：</p><p>表格：ZooKeeper提供的四字母命令</p><table><thead><tr><th>命令</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td>conf</td><td style="text-align:center">zk服务配置的详细信息</td></tr><tr><td>stat</td><td style="text-align:center">客户端与zk连接的简要信息</td></tr><tr><td>srvr</td><td style="text-align:center">zk服务的详细信息</td></tr><tr><td>cons</td><td style="text-align:center">客户端与zk连接的详细信息</td></tr><tr><td>mntr</td><td style="text-align:center">zk服务目前的性能状况</td></tr><tr><td>wchs</td><td style="text-align:center">watch的简要信息</td></tr><tr><td>wchc</td><td style="text-align:center">watch的详细信息，客户端 -&gt; watch的映射，线上环境要小心使用</td></tr><tr><td>wchp</td><td style="text-align:center">watch的详细信息, znode -&gt; 客户端的映射，线上环境要小心使用</td></tr></tbody></table><p>例如，mntr 命令的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">echo mntr | nc 192.168.229.161 2181</span><br><span class="line">zk_version  3.4.6-1569965, built on 02/20/2014 09:09 GMT</span><br><span class="line">zk_avg_latency  0</span><br><span class="line">zk_max_latency  565</span><br><span class="line">zk_min_latency  0</span><br><span class="line">zk_packets_received 95353</span><br><span class="line">zk_packets_sent 95713</span><br><span class="line">zk_num_alive_connections    3</span><br><span class="line">zk_outstanding_requests 0</span><br><span class="line">zk_server_state leader</span><br><span class="line">zk_znode_count  20</span><br><span class="line">zk_watch_count  12</span><br><span class="line">zk_ephemerals_count 9</span><br><span class="line">zk_approximate_data_size    1465</span><br><span class="line">zk_open_file_descriptor_count   37</span><br><span class="line">zk_max_file_descriptor_count    65535</span><br><span class="line">zk_followers    2       - 只有leader进程才有此项输出</span><br><span class="line">zk_synced_followers 2   - 只有leader进程才有此项输出</span><br><span class="line">zk_pending_syncs    0   - 只有leader进程才有此项输出</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="http://www.programering.com/a/MTOxUjMwATI.html" target="_blank" rel="noopener">http://www.programering.com/a/MTOxUjMwATI.html</a></li><li><a href="https://zookeeper.apache.org/doc/r3.4.8/zookeeperStarted.html" target="_blank" rel="noopener">https://zookeeper.apache.org/doc/r3.4.8/zookeeperStarted.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zooKeeper常用命令介绍&lt;/p&gt;
    
    </summary>
    
      <category term="zooKeeper" scheme="http://code.skyheng.com/categories/zooKeeper/"/>
    
    
      <category term="zooKeeper" scheme="http://code.skyheng.com/tags/zooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper的安装与设置</title>
    <link href="http://code.skyheng.com/post/50164.html"/>
    <id>http://code.skyheng.com/post/50164.html</id>
    <published>2016-10-20T15:49:05.000Z</published>
    <updated>2018-03-20T14:50:32.518Z</updated>
    
    <content type="html"><![CDATA[<p>Zookeeper作为Dubbo服务的注册中心，Dubbo原先基于数据库的注册中心，没采用Zookeeper，Zookeeper一个分布式的服务框架，是树型的目录服务的数据存储，能做到集群管理数据 ，这里能很好的作为Dubbo服务的注册中心，Dubbo能与Zookeeper做到集群部署，当提供者出现断电等异常停机时，Zookeeper注册中心能自动删除提供者信息，当提供者重启时，能自动恢复注册数据，以及订阅请求。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>Zookeeper安装<ul><li>官网：<a href="http://zookeeper.apache.org/" target="_blank" rel="noopener">http://zookeeper.apache.org/</a></li><li>Zookeeper官网下载：<a href="http://www.apache.org/dyn/closer.cgi/zookeeper/" target="_blank" rel="noopener">http://www.apache.org/dyn/closer.cgi/zookeeper/</a></li><li>此时（20161020） Zookeeper最新稳定版本为：<code>zookeeper-3.4.9.tar.gz</code></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>soft</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>Zookeeper下载：<code>wget http://apache.fayea.com/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz</code></li><li>压缩包解压：<code>tar -zxvf zookeeper-3.4.9.tar.gz</code></li><li>移到解压出来文件夹到 /usr 下：<code>mv zookeeper-3.4.9/ /usr/program/</code></li><li>为了方便，修改解压目录的名字：<code>mv /usr/program/zookeeper-3.4.9/ /usr/program/zookeeper/</code></li></ul></li><li><p>在对应的zookeeper-3.4.9/conf下有一个文件zoo_sample.cfg的这个文件里面配置了监听客户端连接的端口等一些信息，Zookeeper 在启动时会找zoo.cfg这个文件作为默认配置文件,所以复制一个名称为zoo.cfg的文件</p></li><li><p>说明：</p><ul><li>clientPort：监听客户端连接的端口。</li><li>tickTime：基本事件单元，以毫秒为单位。它用来控制心跳和超时，默认情况下最小的会话超时时间为两倍的 tickTime。</li><li>我们可以对配置文件的端口等或者进行高级配置和集群配置例如：maxClientCnxns：限制连接到 ZooKeeper 的客户端的数量等</li></ul></li></ul><p>本文讲述如何安装和部署ZooKeeper。</p><h1 id="一、系统要求"><a href="#一、系统要求" class="headerlink" title="一、系统要求"></a>一、系统要求</h1><p>ZooKeeper可以运行在多种系统平台上面，表1展示了zk支持的系统平台，以及在该平台上是否支持开发环境或者生产环境。</p><p>表1：ZooKeeper支持的运行平台</p><table><thead><tr><th>系统</th><th style="text-align:center">开发环境</th><th style="text-align:center">生产环境</th></tr></thead><tbody><tr><td>Linux</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td>Solaris</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td>FreeBSD</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td>Windows</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr><tr><td>MacOS</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr></tbody></table><p>ZooKeeper是用Java编写的，运行在Java环境上，因此，在部署zk的机器上需要安装Java运行环境。为了正常运行zk，我们需要JRE1.6或者以上的版本。<br>对于集群模式下的ZooKeeper部署，3个ZooKeeper服务进程是建议的最小进程数量，而且不同的服务进程建议部署在不同的物理机器上面，以减少机器宕机带来的风险，以实现ZooKeeper集群的高可用。<br>ZooKeeper对于机器的硬件配置没有太大的要求。例如，在Yahoo!内部，ZooKeeper部署的机器其配置通常如下：双核处理器，2GB内存，80GB硬盘。</p><h1 id="二、下载"><a href="#二、下载" class="headerlink" title="二、下载"></a>二、下载</h1><p>可以从 <a href="https://zookeeper.apache.org/releases.html" target="_blank" rel="noopener">https://zookeeper.apache.org/releases.html</a> 下载ZooKeeper，目前最新的稳定版本为 3.4.8 版本，用户可以自行选择一个速度较快的镜像来下载即可。</p><h1 id="三、目录"><a href="#三、目录" class="headerlink" title="三、目录"></a>三、目录</h1><p>下载并解压ZooKeeper软件压缩包后，可以看到zk包含以下的文件和目录：</p><p><img src="http://img.blog.csdn.net/20160628193500952" alt="这里写图片描述"><br>图1：ZooKeeper软件的文件和目录</p><ul><li>bin目录<br>zk的可执行脚本目录，包括zk服务进程，zk客户端，等脚本。其中，.sh是Linux环境下的脚本，.cmd是Windows环境下的脚本。</li><li>conf目录<br>配置文件目录。zoo_sample.cfg为样例配置文件，需要修改为自己的名称，一般为zoo.cfg。log4j.properties为日志配置文件。</li><li>lib<br>zk依赖的包。</li><li>contrib目录<br>一些用于操作zk的工具包。</li><li>recipes目录<br>zk某些用法的代码示例</li></ul><h1 id="四、单机模式"><a href="#四、单机模式" class="headerlink" title="四、单机模式"></a>四、单机模式</h1><p>ZooKeeper的安装包括单机模式安装，以及集群模式安装。</p><p>单机模式较简单，是指只部署一个zk进程，客户端直接与该zk进程进行通信。<br>在开发测试环境下，通过来说没有较多的物理资源，因此我们常使用单机模式。当然在单台物理机上也可以部署集群模式，但这会增加单台物理机的资源消耗。故在开发环境中，我们一般使用单机模式。<br>但是要注意，生产环境下不可用单机模式，这是由于无论从系统可靠性还是读写性能，单机模式都不能满足生产的需求。</p><h2 id="4-1-运行配置"><a href="#4-1-运行配置" class="headerlink" title="4.1 运行配置"></a>4.1 运行配置</h2><p>上面提到，conf目录下提供了配置的样例zoo_sample.cfg，要将zk运行起来，需要将其名称修改为zoo.cfg。<br>打开zoo.cfg，可以看到默认的一些配置。</p><ul><li>tickTime<br>时长单位为毫秒，为zk使用的基本时间度量单位。例如，1 <em> tickTime是客户端与zk服务端的心跳时间，2 </em> tickTime是客户端会话的超时时间。<br>tickTime的默认值为2000毫秒，更低的tickTime值可以更快地发现超时问题，但也会导致更高的网络流量（心跳消息）和更高的CPU使用率（会话的跟踪处理）。</li><li>clientPort<br>zk服务进程监听的TCP端口，默认情况下，服务端会监听2181端口。</li><li>dataDir<br>无默认配置，必须配置，用于配置存储快照文件的目录。如果没有配置dataLogDir，那么事务日志也会存储在此目录。</li></ul><h2 id="4-2-启动"><a href="#4-2-启动" class="headerlink" title="4.2 启动"></a>4.2 启动</h2><p>在Windows环境下，直接双击zkServer.cmd即可。在Linux环境下，进入bin目录，执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./zkServer.sh start</span><br></pre></td></tr></table></figure><p>这个命令使得zk服务进程在后台进行。如果想在前台中运行以便查看服务器进程的输出日志，可以通过以下命令运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./zkServer.sh start-foreground</span><br></pre></td></tr></table></figure><p>执行此命令，可以看到大量详细信息的输出，以便允许查看服务器发生了什么。</p><p>使用文本编辑器打开zkServer.cmd或者zkServer.sh文件，可以看到其会调用zkEnv.cmd或者zkEnv.sh脚本。zkEnv脚本的作用是设置zk运行的一些环境变量，例如配置文件的位置和名称等。</p><h2 id="4-3-连接"><a href="#4-3-连接" class="headerlink" title="4.3 连接"></a>4.3 连接</h2><p>如果是连接同一台主机上的zk进程，那么直接运行bin/目录下的zkCli.cmd（Windows环境下）或者zkCli.sh（Linux环境下），即可连接上zk。<br>直接执行zkCli.cmd或者zkCli.sh命令默认以主机号 127.0.0.1，端口号 2181 来连接zk，如果要连接不同机器上的zk，可以使用 -server 参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zkCli.sh -server 192.168.0.1:2181</span><br></pre></td></tr></table></figure><h1 id="五、集群模式"><a href="#五、集群模式" class="headerlink" title="五、集群模式"></a>五、集群模式</h1><p>单机模式的zk进程虽然便于开发与测试，但并不适合在生产环境使用。在生产环境下，我们需要使用集群模式来对zk进行部署。</p><blockquote><p>注意<br>在集群模式下，建议至少部署3个zk进程，或者部署奇数个zk进程。如果只部署2个zk进程，当其中一个zk进程挂掉后，剩下的一个进程并不能构成一个<a href="http://baike.baidu.com/link?url=pqWrzgH-_VhMLnscR1iRTpPjovfyhxG-8Qs9HxGutiGi5bhnA_lX_pmabLQ-3MiDeigcHRFMYSbFg90RAYVAta" target="_blank" rel="noopener">quorum</a>的大多数。因此，部署2个进程甚至比单机模式更不可靠，因为2个进程其中一个不可用的可能性比一个进程不可用的可能性还大。</p></blockquote><h2 id="5-1-运行配置"><a href="#5-1-运行配置" class="headerlink" title="5. 1 运行配置"></a>5. 1 运行配置</h2><p>在集群模式下，所有的zk进程可以使用相同的配置文件（是指各个zk进程部署在不同的机器上面），例如如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataDir=/home/myname/zookeeper</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=192.168.229.160:2888:3888</span><br><span class="line">server.2=192.168.229.161:2888:3888</span><br><span class="line">server.3=192.168.229.162:2888:3888</span><br></pre></td></tr></table></figure><ul><li>initLimit<br>ZooKeeper集群模式下包含多个zk进程，其中一个进程为leader，余下的进程为follower。<br>当follower最初与leader建立连接时，它们之间会传输相当多的数据，尤其是follower的数据落后leader很多。initLimit配置follower与leader之间建立连接后进行同步的最长时间。</li><li>syncLimit<br>配置follower和leader之间发送消息，请求和应答的最大时间长度。</li><li>tickTime<br>tickTime则是上述两个超时配置的基本单位，例如对于initLimit，其配置值为5，说明其超时时间为 2000ms * 5 = 10秒。</li><li>server.id=host:port1:port2<br>其中id为一个数字，表示zk进程的id，这个id也是dataDir目录下myid文件的内容。<br>host是该zk进程所在的IP地址，port1表示follower和leader交换消息所使用的端口，port2表示选举leader所使用的端口。</li><li>dataDir<br>其配置的含义跟单机模式下的含义类似，不同的是集群模式下还有一个myid文件。myid文件的内容只有一行，且内容只能为1 - 255之间的数字，这个数字亦即上面介绍server.id中的id，表示zk进程的id。</li></ul><blockquote><p>注意<br>如果仅为了测试部署集群模式而在同一台机器上部署zk进程，server.id=host:port1:port2配置中的port参数必须不同。但是，为了减少机器宕机的风险，强烈建议在部署集群模式时，将zk进程部署不同的物理机器上面。</p></blockquote><h2 id="5-2-启动"><a href="#5-2-启动" class="headerlink" title="5.2 启动"></a>5.2 启动</h2><p>假如我们打算在三台不同的机器 192.168.229.160，192.168.229.161，192.168.229.162上各部署一个zk进程，以构成一个zk集群。<br>三个zk进程均使用相同的 zoo.cfg 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataDir=/home/myname/zookeeper</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=192.168.229.160:2888:3888</span><br><span class="line">server.2=192.168.229.161:2888:3888</span><br><span class="line">server.3=192.168.229.162:2888:3888</span><br></pre></td></tr></table></figure><p>在三台机器dataDir目录（ /home/myname/zookeeper 目录）下，分别生成一个myid文件，其内容分别为1，2，3。然后分别在这三台机器上启动zk进程，这样我们便将zk集群启动了起来。</p><h2 id="5-3-连接"><a href="#5-3-连接" class="headerlink" title="5.3 连接"></a>5.3 连接</h2><p>可以使用以下命令来连接一个zk集群：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zkCli.sh -server 192.168.229.160:2181,192.168.229.161:2181,192.168.229.162:2181</span><br></pre></td></tr></table></figure><p>成功连接后，可以看到如下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2016-06-28 19:29:18,074 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=192.168.229.160:2181,192.168.229.161:2181,192.168.229.162:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@770537e4</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">2016-06-28 19:29:18,146 [myid:] - INFO  [main-SendThread(192.168.229.162:2181):ClientCnxn$SendThread@975] - Opening socket connection to server 192.168.229.162/192.168.229.162:2181. Will not attempt to authenticate using SASL (unknown error)</span><br><span class="line">JLine support is enabled</span><br><span class="line">2016-06-28 19:29:18,161 [myid:] - INFO  [main-SendThread(192.168.229.162:2181):ClientCnxn$SendThread@852] - Socket connection established to 192.168.229.162/192.168.229.162:2181, initiating session</span><br><span class="line">2016-06-28 19:29:18,199 [myid:] - INFO  [main-SendThread(192.168.229.162:2181):ClientCnxn$SendThread@1235] - Session establishment complete on server 192.168.229.162/192.168.229.162:2181, sessionid = 0x3557c39d2810029, negotiated timeout = 30000</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br><span class="line">[zk: 192.168.229.160:2181,192.168.229.161:2181,192.168.229.162:2181(CONNECTED) 0]</span><br></pre></td></tr></table></figure><p>图2：客户端连接zk集群的输出日志</p><p>从日志输出可以看到，客户端连接的是192.168.229.162:2181进程（连接上哪台机器的zk进程是随机的），客户端已成功连接上zk集群。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html" target="_blank" rel="noopener">http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html</a></li><li><a href="http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html" target="_blank" rel="noopener">http://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html</a></li><li>《ZooKeeper分布式系统开发实战》课程，主讲人：玺感</li><li>《ZooKeeper分布式过程协同技术详解》，Flavio Junqueira等著，谢超等译</li><li>百度百科有关quorum的解释，<a href="http://baike.baidu.com/link?url=pqWrzgH-_VhMLnscR1iRTpPjovfyhxG-8Qs9HxGutiGi5bhnA_lX_pmabLQ-3MiDeigcHRFMYSbFg90RAYVAta" target="_blank" rel="noopener">http://baike.baidu.com/link?url=pqWrzgH-_VhMLnscR1iRTpPjovfyhxG-8Qs9HxGutiGi5bhnA_lX_pmabLQ-3MiDeigcHRFMYSbFg90RAYVAta</a></li><li>《Zookeeper 安装和配置》，<a href="http://coolxing.iteye.com/blog/1871009" target="_blank" rel="noopener">http://coolxing.iteye.com/blog/1871009</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zookeeper作为Dubbo服务的注册中心，Dubbo原先基于数据库的注册中心，没采用Zookeeper，Zookeeper一个分布式的服务框架，是树型的目录服务的数据存储，能做到集群管理数据 ，这里能很好的作为Dubbo服务的注册中心，Dubbo能与Zookeeper做到集群部署，当提供者出现断电等异常停机时，Zookeeper注册中心能自动删除提供者信息，当提供者重启时，能自动恢复注册数据，以及订阅请求。&lt;/p&gt;
    
    </summary>
    
      <category term="zooKeeper" scheme="http://code.skyheng.com/categories/zooKeeper/"/>
    
    
      <category term="zooKeeper" scheme="http://code.skyheng.com/tags/zooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>收集的国内Maven镜像地址</title>
    <link href="http://code.skyheng.com/post/4103.html"/>
    <id>http://code.skyheng.com/post/4103.html</id>
    <published>2016-10-20T03:36:58.000Z</published>
    <updated>2018-03-20T14:51:22.132Z</updated>
    
    <content type="html"><![CDATA[<p>收集些maven镜像备用</p><a id="more"></a><h2 id="什么是maven"><a href="#什么是maven" class="headerlink" title="什么是maven"></a>什么是maven</h2><p>Maven是一个项目管理工具，它包含了一个项目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。当你使用Maven的时候，你用一个明确定义的项目对象模型来描述你的项目，然后Maven可以应用横切的逻辑，这些逻辑来自一组共享的（或者自定义的）插件。</p><p>Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完成了像编译和创建一个 JAR 文件这样的工作。<br>此外，Maven能够很方便的帮你管理项目报告，生成站点，管理JAR文件，等等。</p><h2 id="maven常用命令"><a href="#maven常用命令" class="headerlink" title="maven常用命令"></a>maven常用命令</h2><ul><li>mvn archetype：create 创建Maven项目 </li><li>mvn compile 编译源代码</li><li>mvn deploy 发布项目</li><li>mvn test-compile 编译测试源代码</li><li>mvn test 运行应用程序中的单元测试</li><li>mvn site 生成项目相关信息的网站</li><li>mvn clean 清除项目目录中的生成结果</li><li>mvn package 根据项目生成的jar</li><li>mvn install 在本地Repository中安装jar</li><li>mvn eclipse:eclipse 生成eclipse项目文件</li><li>mvnjetty:run 启动jetty服务</li><li>mvntomcat:run 启动tomcat服务</li><li>mvn clean package -Dmaven.test.skip=true:清除以前的包后重新打包，跳过测试类</li></ul><h2 id="maven可用仓库URL"><a href="#maven可用仓库URL" class="headerlink" title="maven可用仓库URL"></a>maven可用仓库URL</h2><ul><li><a href="http://repository.jboss.com/maven2/" target="_blank" rel="noopener">http://repository.jboss.com/maven2/</a></li><li><a href="http://maven.aliyun.com/nexus/content/groups/public" target="_blank" rel="noopener">http://maven.aliyun.com/nexus/content/groups/public</a></li><li><a href="http://uk.maven.org/maven2/" target="_blank" rel="noopener">http://uk.maven.org/maven2/</a></li><li><a href="http://maven.springframework.org/release" target="_blank" rel="noopener">http://maven.springframework.org/release</a></li><li><a href="http://repo1.maven.org/maven2/" target="_blank" rel="noopener">http://repo1.maven.org/maven2/</a></li><li><a href="http://maven.springframework.org/milestone" target="_blank" rel="noopener">http://maven.springframework.org/milestone</a></li><li><a href="http://maven.jeecg.org/nexus/content/repositories/" target="_blank" rel="noopener">http://maven.jeecg.org/nexus/content/repositories/</a></li><li><a href="https://repository.apache.org/content/groups/public/" target="_blank" rel="noopener">https://repository.apache.org/content/groups/public/</a></li><li><a href="https://repository.jboss.org/nexus/content/repositories/releases/" target="_blank" rel="noopener">https://repository.jboss.org/nexus/content/repositories/releases/</a> </li><li><a href="http://repo.maven.apache.org/maven2" target="_blank" rel="noopener">http://repo.maven.apache.org/maven2</a></li><li><a href="https://oss.sonatype.org/content/repositories" target="_blank" rel="noopener">https://oss.sonatype.org/content/repositories</a></li><li><a href="http://repo.spring.io/release/" target="_blank" rel="noopener">http://repo.spring.io/release/</a></li><li><a href="http://repo.spring.io/snapshot/" target="_blank" rel="noopener">http://repo.spring.io/snapshot/</a><h3 id="地址二："><a href="#地址二：" class="headerlink" title="地址二："></a>地址二：</h3></li><li><a href="http://nexus.hsweb.me/content/groups/public/" target="_blank" rel="noopener">http://nexus.hsweb.me/content/groups/public/</a></li><li><a href="http://maven.aliyun.com/nexus/content/groups/public/" target="_blank" rel="noopener">http://maven.aliyun.com/nexus/content/groups/public/</a></li><li><a href="http://mvnrepo.tae.taobao.com/content/groups/public/" target="_blank" rel="noopener">http://mvnrepo.tae.taobao.com/content/groups/public/</a></li><li><a href="http://maven.mofasuidao.xyz/nexus/content/groups/public/" target="_blank" rel="noopener">http://maven.mofasuidao.xyz/nexus/content/groups/public/</a></li></ul><h2 id="配置maven仓库"><a href="#配置maven仓库" class="headerlink" title="配置maven仓库"></a>配置maven仓库</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置maven仓库地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>oschina Releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>oschina Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>mvnrepository<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mvnrepository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://mvnrepository.com/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>apache-repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>apache Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repository.apache.org/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>java-repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>java Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://download.java.net/maven/2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>springsource-repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>SpringSource Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.spring.io/release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>springsource-repo-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>SpringSource Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.spring.io/snapshot/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>jboss-repo-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Jboss Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repository.jboss.org/nexus/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Maven Repository Switchboard<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-repo1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven-repo1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sourceforge-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sourceforge Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/sourceforge-releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><ul><li>下面的代码，修改里面的仓库地址，保存为settings.xml，放到用户目录的.m2目录中(C:\Users\用户名.m2)<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor </span></span><br><span class="line"><span class="comment">    license agreements. See the NOTICE file distributed with this work for additional </span></span><br><span class="line"><span class="comment">    information regarding copyright ownership. The ASF licenses this file to </span></span><br><span class="line"><span class="comment">    you under the Apache License, Version 2.0 (the "License"); you may not use </span></span><br><span class="line"><span class="comment">    this file except in compliance with the License. You may obtain a copy of </span></span><br><span class="line"><span class="comment">    the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required </span></span><br><span class="line"><span class="comment">    by applicable law or agreed to in writing, software distributed under the </span></span><br><span class="line"><span class="comment">    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS </span></span><br><span class="line"><span class="comment">    OF ANY KIND, either express or implied. See the License for the specific </span></span><br><span class="line"><span class="comment">    language governing permissions and limitations under the License. --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- | This is the configuration file for Maven. It can be specified at two </span></span><br><span class="line"><span class="comment">    levels: | | 1. User Level. This settings.xml file provides configuration </span></span><br><span class="line"><span class="comment">    for a single user, | and is normally provided in $&#123;user.home&#125;/.m2/settings.xml. </span></span><br><span class="line"><span class="comment">    | | <span class="doctag">NOTE:</span> This location can be overridden with the CLI option: | | -s /path/to/user/settings.xml </span></span><br><span class="line"><span class="comment">    | | 2. Global Level. This settings.xml file provides configuration for all </span></span><br><span class="line"><span class="comment">    Maven | users on a machine (assuming they're all using the same Maven | installation). </span></span><br><span class="line"><span class="comment">    It's normally provided in | $&#123;maven.home&#125;/conf/settings.xml. | | <span class="doctag">NOTE:</span> This </span></span><br><span class="line"><span class="comment">    location can be overridden with the CLI option: | | -gs /path/to/global/settings.xml </span></span><br><span class="line"><span class="comment">    | | The sections in this sample file are intended to give you a running start </span></span><br><span class="line"><span class="comment">    at | getting the most out of your Maven installation. Where appropriate, </span></span><br><span class="line"><span class="comment">    the default | values (values used when the setting is not specified) are </span></span><br><span class="line"><span class="comment">    provided. | | --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- localRepository | The path to the local repository maven will use to </span></span><br><span class="line"><span class="comment">        store artifacts. | | Default: $&#123;user.home&#125;/.m2/repository </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/MAVEN<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- interactiveMode | This will determine whether maven prompts you when </span></span><br><span class="line"><span class="comment">        it needs input. If set to false, | maven will use a sensible default value, </span></span><br><span class="line"><span class="comment">        perhaps based on some other setting, for | the parameter in question. | | </span></span><br><span class="line"><span class="comment">        Default: true &lt;interactiveMode&gt;true&lt;/interactiveMode&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- offline | Determines whether maven should attempt to connect to the </span></span><br><span class="line"><span class="comment">        network when executing a build. | This will have an effect on artifact downloads, </span></span><br><span class="line"><span class="comment">        artifact deployment, and others. | | Default: false &lt;offline&gt;false&lt;/offline&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroups | This is a list of additional group identifiers that </span></span><br><span class="line"><span class="comment">        will be searched when resolving plugins by their prefix, i.e. | when invoking </span></span><br><span class="line"><span class="comment">        a command line like "mvn prefix:goal". Maven will automatically add the group </span></span><br><span class="line"><span class="comment">        identifiers | "org.apache.maven.plugins" and "org.codehaus.mojo" if these </span></span><br><span class="line"><span class="comment">        are not already contained in the list. | --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- pluginGroup | Specifies a further group identifier to use for plugin </span></span><br><span class="line"><span class="comment">            lookup. &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- proxies | This is a list of proxies which can be used on this machine </span></span><br><span class="line"><span class="comment">        to connect to the network. | Unless otherwise specified (by system property </span></span><br><span class="line"><span class="comment">        or command-line switch), the first proxy | specification in this list marked </span></span><br><span class="line"><span class="comment">        as active will be used. | --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;proxy&gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">            &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">            &lt;host&gt;127.0.0.1&lt;/host&gt;</span></span><br><span class="line"><span class="comment">            &lt;port&gt;8087&lt;/port&gt;</span></span><br><span class="line"><span class="comment">        &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- servers | This is a list of authentication profiles, keyed by the server-id </span></span><br><span class="line"><span class="comment">        used within the system. | Authentication profiles can be used whenever maven </span></span><br><span class="line"><span class="comment">        must make a connection to a remote server. | --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- server | Specifies the authentication information to use when connecting </span></span><br><span class="line"><span class="comment">            to a particular server, identified by | a unique name within the system (referred </span></span><br><span class="line"><span class="comment">            to by the 'id' attribute below). | | <span class="doctag">NOTE:</span> You should either specify username/password </span></span><br><span class="line"><span class="comment">            OR privateKey/passphrase, since these pairings are | used together. | &lt;server&gt; </span></span><br><span class="line"><span class="comment">            &lt;id&gt;deploymentRepo&lt;/id&gt; &lt;username&gt;repouser&lt;/username&gt; &lt;password&gt;repopwd&lt;/password&gt; </span></span><br><span class="line"><span class="comment">            &lt;/server&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Another sample, using keys to authenticate. &lt;server&gt; &lt;id&gt;siteServer&lt;/id&gt; </span></span><br><span class="line"><span class="comment">            &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt; &lt;passphrase&gt;optional; leave </span></span><br><span class="line"><span class="comment">            empty if not used.&lt;/passphrase&gt; &lt;/server&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mirrors | This is a list of mirrors to be used in downloading artifacts </span></span><br><span class="line"><span class="comment">        from remote repositories. | | It works like this: a POM may declare a repository </span></span><br><span class="line"><span class="comment">        to use in resolving certain artifacts. | However, this repository may have </span></span><br><span class="line"><span class="comment">        problems with heavy traffic at times, so people have mirrored | it to several </span></span><br><span class="line"><span class="comment">        places. | | That repository definition will have a unique id, so we can create </span></span><br><span class="line"><span class="comment">        a mirror reference for that | repository, to be used as an alternate download </span></span><br><span class="line"><span class="comment">        site. The mirror site will be the preferred | server for that repository. </span></span><br><span class="line"><span class="comment">        | --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mirror | Specifies a repository mirror site to use instead of a given </span></span><br><span class="line"><span class="comment">            repository. The repository that | this mirror serves has an ID that matches </span></span><br><span class="line"><span class="comment">            the mirrorOf element of this mirror. IDs are used | for inheritance and direct </span></span><br><span class="line"><span class="comment">            lookup purposes, and must be unique across the set of mirrors. | --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-osc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus osc<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://mvnrepo.tae.taobao.com/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- profiles | This is a list of profiles which can be activated in a variety </span></span><br><span class="line"><span class="comment">        of ways, and which can modify | the build process. Profiles provided in the </span></span><br><span class="line"><span class="comment">        settings.xml are intended to provide local machine- | specific paths and </span></span><br><span class="line"><span class="comment">        repository locations which allow the build to work in the local environment. </span></span><br><span class="line"><span class="comment">        | | For example, if you have an integration testing plugin - like cactus </span></span><br><span class="line"><span class="comment">        - that needs to know where | your Tomcat instance is installed, you can provide </span></span><br><span class="line"><span class="comment">        a variable here such that the variable is | dereferenced during the build </span></span><br><span class="line"><span class="comment">        process to configure the cactus plugin. | | As noted above, profiles can </span></span><br><span class="line"><span class="comment">        be activated in a variety of ways. One way - the activeProfiles | section </span></span><br><span class="line"><span class="comment">        of this document (settings.xml) - will be discussed later. Another way essentially </span></span><br><span class="line"><span class="comment">        | relies on the detection of a system property, either matching a particular </span></span><br><span class="line"><span class="comment">        value for the property, | or merely testing its existence. Profiles can also </span></span><br><span class="line"><span class="comment">        be activated by JDK version prefix, where a | value of '1.4' might activate </span></span><br><span class="line"><span class="comment">        a profile when the build is executed on a JDK version of '1.4.2_07'. | Finally, </span></span><br><span class="line"><span class="comment">        the list of active profiles can be specified directly from the command line. </span></span><br><span class="line"><span class="comment">        | | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to </span></span><br><span class="line"><span class="comment">        specifying only artifact | repositories, plugin repositories, and free-form </span></span><br><span class="line"><span class="comment">        properties to be used as configuration | variables for plugins in the POM. </span></span><br><span class="line"><span class="comment">        | | --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- profile | Specifies a set of introductions to the build process, to </span></span><br><span class="line"><span class="comment">            be activated using one or more of the | mechanisms described above. For inheritance </span></span><br><span class="line"><span class="comment">            purposes, and to activate profiles via &lt;activatedProfiles/&gt; | or the command </span></span><br><span class="line"><span class="comment">            line, profiles have to have an ID that is unique. | | An encouraged best </span></span><br><span class="line"><span class="comment">            practice for profile identification is to use a consistent naming convention </span></span><br><span class="line"><span class="comment">            | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', </span></span><br><span class="line"><span class="comment">            'user-brett', etc. | This will make it more intuitive to understand what </span></span><br><span class="line"><span class="comment">            the set of introduced profiles is attempting | to accomplish, particularly </span></span><br><span class="line"><span class="comment">            when you only have a list of profile id's for debug. | | This profile example </span></span><br><span class="line"><span class="comment">            uses the JDK version to trigger activation, and provides a JDK-specific repo. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>local private nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://mvnrepo.tae.taobao.com/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>local private nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://mvnrepo.tae.taobao.com/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- | Here is another profile, activated by the system property 'target-env' </span></span><br><span class="line"><span class="comment">            with a value of 'dev', | which provides a specific path to the Tomcat instance. </span></span><br><span class="line"><span class="comment">            To use this, your plugin configuration | might hypothetically look like: </span></span><br><span class="line"><span class="comment">            | | ... | &lt;plugin&gt; | &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt; | &lt;artifactId&gt;myplugin&lt;/artifactId&gt; </span></span><br><span class="line"><span class="comment">            | | &lt;configuration&gt; | &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt; | &lt;/configuration&gt; </span></span><br><span class="line"><span class="comment">            | &lt;/plugin&gt; | ... | | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration </span></span><br><span class="line"><span class="comment">            whenever someone set 'target-env' to | anything, you could just leave off </span></span><br><span class="line"><span class="comment">            the &lt;value/&gt; inside the activation-property. | &lt;profile&gt; &lt;id&gt;env-dev&lt;/id&gt; </span></span><br><span class="line"><span class="comment">            &lt;activation&gt; &lt;property&gt; &lt;name&gt;target-env&lt;/name&gt; &lt;value&gt;dev&lt;/value&gt; &lt;/property&gt; </span></span><br><span class="line"><span class="comment">            &lt;/activation&gt; &lt;properties&gt; &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt; </span></span><br><span class="line"><span class="comment">            &lt;/properties&gt; &lt;/profile&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- activeProfiles | List of profiles that are active for all builds. | </span></span><br><span class="line"><span class="comment">        &lt;activeProfiles&gt; &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt; &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt; </span></span><br><span class="line"><span class="comment">        &lt;/activeProfiles&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;收集些maven镜像备用&lt;/p&gt;
    
    </summary>
    
      <category term="maven" scheme="http://code.skyheng.com/categories/maven/"/>
    
    
      <category term="maven" scheme="http://code.skyheng.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Windows下git pull批处理</title>
    <link href="http://code.skyheng.com/post/47539.html"/>
    <id>http://code.skyheng.com/post/47539.html</id>
    <published>2016-10-15T06:07:08.000Z</published>
    <updated>2018-03-20T14:51:22.194Z</updated>
    
    <content type="html"><![CDATA[<p>在平时的工作中，遇到一些优秀的开源项目，如volley、picasso、okhttp等，如果想阅读它的源代码，我通常都会clone项目到本地的GitHub文件夹，这样大神们后面再提交更新的话，只需要git pull更新一下本地的项目就能做到和远程仓库的代码同步了。可是时间长了就会遇到一个问题，如果GitHub文件夹里的项目太多，更新的话每个文件夹进去执行git pull将会是一件很麻烦的事。于是，花了几分钟，写了个批量更新的脚本。还有那句话，“程序员是世界上最懒的人”。 重复劳动，我们是坚决不会做的。</p><a id="more"></a><h2 id="代码一"><a href="#代码一" class="headerlink" title="代码一"></a>代码一</h2><ul><li>update.bat<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line"><span class="keyword">for</span> /d %%i <span class="keyword">in</span> (*) <span class="keyword">do</span> <span class="keyword">if</span> not %%i==[Filter] @<span class="built_in">cd</span> %<span class="built_in">cd</span>%\%%i &amp;&amp; @git pull</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注： [Filter] – 过滤的文件夹名称</p></blockquote><h2 id="代码二"><a href="#代码二" class="headerlink" title="代码二"></a>代码二</h2><ul><li>当然，也可以这样：</li><li>update2.bat<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line"><span class="keyword">for</span> /d %%i <span class="keyword">in</span> (app1,app2,app3,...) <span class="keyword">do</span> @<span class="built_in">cd</span> %<span class="built_in">cd</span>%\%%i &amp;&amp; @git pull</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li></ul><h2 id="代码三"><a href="#代码三" class="headerlink" title="代码三"></a>代码三</h2><ul><li>update.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">for</span> dir <span class="keyword">in</span> $(ls -d */)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$dir</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"into <span class="variable">$dir</span>"</span></span><br><span class="line">  <span class="keyword">if</span> [ -d <span class="string">".git"</span> ]; <span class="keyword">then</span></span><br><span class="line">     git pull</span><br><span class="line">  <span class="keyword">elif</span> [ -d <span class="string">".svn"</span> ]; <span class="keyword">then</span></span><br><span class="line">     svn update</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">cd</span> ..</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>代码比较简单，就是遍历文件夹，发现项目目录下有.git文件夹，则执行git pull。很容易理解。<br>还加入了对svn项目的支持。命名为update.sh，放到GitHub文件夹，添加执行权限，执行./update.sh就可以了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在平时的工作中，遇到一些优秀的开源项目，如volley、picasso、okhttp等，如果想阅读它的源代码，我通常都会clone项目到本地的GitHub文件夹，这样大神们后面再提交更新的话，只需要git pull更新一下本地的项目就能做到和远程仓库的代码同步了。可是时间长了就会遇到一个问题，如果GitHub文件夹里的项目太多，更新的话每个文件夹进去执行git pull将会是一件很麻烦的事。于是，花了几分钟，写了个批量更新的脚本。还有那句话，“程序员是世界上最懒的人”。 重复劳动，我们是坚决不会做的。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://code.skyheng.com/categories/git/"/>
    
    
      <category term="git" scheme="http://code.skyheng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Git常用的操作命令</title>
    <link href="http://code.skyheng.com/post/8298.html"/>
    <id>http://code.skyheng.com/post/8298.html</id>
    <published>2016-10-15T05:48:28.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>Git常用的操作命令</p><a id="more"></a><h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><ol><li>安装后的第一步</li></ol><ul><li>安装git后，第一件事你需要设置你的名字和邮箱，因为每次提交都需要这些信息。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Some One&quot;</span><br><span class="line">$ git config --global user.email &quot;someone@gmail.com&quot;</span><br></pre></td></tr></table></figure></li></ul><ol><li>是基于指针的</li></ol><ul><li>git上的所有东西都是储存在文件里的，当你创建一次提交时，它会创建一个包含你的提交信息和相关数据（名字，邮箱，日期/时间、上一次提交等等） 的文件并连接一个树文件，而这个树文件包含了对象列表或者其他树。这上面的对象或者blob文件就是这次提交的实际内容（你可以认为这也是一个文件，尽管 并没有储存在对象里而是储存在树中）。所有的文件都以经过SHA-1计算后的文件名（译者注：经过SHA-1计算后的数，即git中的版本号）储存在上 面。</li><li>从这里可以看出，分支和标签都是包含一个指向这次提交的sha-1数（版本号）简单的文件，这样使用引用会变得更快和更灵活，创建一个新的分支是就 像创建文件一样简单，SHA – 1数（版本号）也会引用你这个分支的提交。当然，如果你使用GIT命令行工具（或者GUI）你将无法接触这些。但真的很简单。</li><li>你可能听说过HEAD引用，这是一个指向你当前提交的内容的SHA-1 数（版本号）的指针。如果你正在解决合并冲突，使用HEAD不会对你的特定分支有任何改动只会指向你当前的分支。</li><li>所有分支的指针都保存在 .git/refs/heads，HEAD指针保存在.git/HEAD，标签则保存在 .git/refs/tags，有时间就去看看吧。</li></ul><ol><li>两个母体（Parent），当然！</li></ol><ul><li>当我们在日志文件中查看合并提交信息，你会看到两个母体，第一个母体是正在进行的分支，第二个是你要合并的分支。</li></ul><ol><li>合并冲突</li></ol><ul><li>现在，我发现有合并冲突并解决了它，这是一件在我们编辑文件时很正常的事。将 &lt;&lt;&lt;&lt;, ====, &gt;&gt;&gt;&gt; 这些标记移除后，并保存你想要保存的代码。有些时候在代码被直接替代之前，能看到冲突是件挺不错的事。比如在两个冲突的分支变动之前，可以用这样的命令方 式：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git diff --merge</span><br><span class="line">diff --cc dummy.rb  </span><br><span class="line">index 5175dde,0c65895..4a00477  </span><br><span class="line">--- a/dummy.rb</span><br><span class="line">+++ b/dummy.rb</span><br><span class="line">@@@ -1,5 -1,5 +1,5 @@@</span><br><span class="line">  class MyFoo</span><br><span class="line">    def say</span><br><span class="line">-     puts &quot;Bonjour&quot;</span><br><span class="line"> -    puts &quot;Hello world&quot;</span><br><span class="line">++    puts &quot;Annyong Haseyo&quot;</span><br><span class="line">    end</span><br><span class="line">  end</span><br></pre></td></tr></table></figure><ul><li>If the file is binary, diffing files isn’t so easy… What you’ll normally want to do is to try each version of the binary file and decide which one to use (or manually copy portions over in the binary file’s editor). To pull a copy of the file from a particular branch (say you’re merging master and feature132):</li><li>如果是二进制文件（binary），区别这些文件并不容易。通常你会查看每个二进制文件的版本，再决定使用哪个（或者在二进制文件编辑器中手动复制），并将其推送至特定的分支。（比如你要合并master和feature132）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master flash/foo.fla # or...</span><br><span class="line">$ git checkout feature132 flash/foo.fla</span><br><span class="line">$ # Then...</span><br><span class="line">$ git add flash/foo.fla</span><br></pre></td></tr></table></figure><ul><li>Another way is to cat the file from git – you can do this to another filename then copy the correct file over (when you’ve decided which it is) to the normal filename:</li><li>另一个方法就是在git中cat文件，你可以将其命名为另一个文件名，然后将你决定的那个文件改为正确的文件名：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git show master:flash/foo.fla &gt; master-foo.fla</span><br><span class="line">$ git show feature132:flash/foo.fla &gt; feature132-foo.fla</span><br><span class="line">$ # Check out master-foo.fla and feature132-foo.fla</span><br><span class="line">$ # Let&apos;s say we decide that feature132&apos;s is correct</span><br><span class="line">$ rm flash/foo.fla</span><br><span class="line">$ mv feature132-foo.fla flash/foo.fla</span><br><span class="line">$ rm master-foo.fla</span><br><span class="line">$ git add flash/foo.fla</span><br></pre></td></tr></table></figure><ul><li>更新：感谢carls在原博评论中提醒我，可以使用 “git checkout —ours flash/foo.fla” 和“git checkout —theirs flash/foo.fla” 在不用考虑你需要合并的分支来检查指定版本，就我个人而言，我喜欢更明确的方法，但这也是一个选择…</li><li>记住，解决完合并冲突后要添加文件。（我之前就犯过这样的错误）</li></ul><h2 id="服务，分支和标注"><a href="#服务，分支和标注" class="headerlink" title="服务，分支和标注"></a>服务，分支和标注</h2><ol><li>远程服务</li></ol><ul><li>Git有一个非常强大的特性，就是可以有多个远程服务端（以及你运行的一个本地仓库）。你不需要总是进行访问，你可以有多个服务端并能从其中一个（合并工作）读取再写入另一个。添加一个远程服务端很简单：<br><code>`$ git remote add john git@github.com:johnsomeone/someproject.git</code></li><li>If you want to see information about your remote servers you can do:</li><li>如果你想查看远程服务端的信息你可以：</li><li>shows URLs of each remote server<br><code>$ git remote -v</code></li><li>gives more details about each<br><code>$ git remote show name</code></li><li>You can always see the differences between a local branch and a remote branch:</li><li>你总是能看到本地分支和远程分支不同的地方：<br><code>$ git diff master..john/master</code></li><li>You can also see the changes on HEAD that aren’t on that remote branch:</li><li>你同样也能看到远程分支上没有的HEAD指针的改动：<br><code>$ git log remote/branch..</code></li></ul><h3 id="Note-no-final-refspec-after"><a href="#Note-no-final-refspec-after" class="headerlink" title="Note: no final refspec after .."></a>Note: no final refspec after ..</h3><ol><li>Tagging 标签<br>在Git中有两种类型的标注：轻量级标注和注释型标注。</li></ol><p>记住第二个是Git的指针基础，两者区别很简单，轻量级标注是简单命名提交的指针，你可以将其指向另一个提交。注释型标注是一个有信息和历史并指向标注对象的名字指针，它有着自己的信息，如果需要的话，可以进行GPG标记。</p><p>创建两种类型的标签很简单（其中一个命令行有改动）</p><p>$ git tag to-be-tested<br>$ git tag -a v1.1.0 # Prompts for a tag message</p><ol><li>Creating Branches 创建分支<br>在git中创建分支是件非常简单的事情（非常快并只需要不到100byte的文件大小）。创建新分支并切换到该分支，通常是下面这样的：</li></ol><p>$ git branch feature132<br>$ git checkout feature132<br>当然，如果你想切换到该分支，最直接的方式是使用这样一条命令：</p><p>$ git checkout -b feature132<br>如果你想要重新命名本地分支，也很简单：</p><p>$ git checkout -b twitter-experiment feature132<br>$ git branch -d feature132<br>更新：或者你（Brian Palmer在原博的评论中指出的）可以使用 -m来切换到“git branch”（就像Mike指出，如果你只需要一个特定的分支，就可以重命名当前分支）</p><p>$ git branch -m twitter-experiment<br>$ git branch -m feature132 twitter-experiment<br>8.合并分支<br>以后你可能回想合并你的变动，有两种方式可以做到这一点：</p><p>$ git checkout master<br>$ git merge feature83 # Or…<br>$ git rebase feature83<br>merge和rebase的区别是，merge会尝试解决改动并创建的新的提交来融合他们。rebase则是将从你最后一次从另一个分支分离之后的 改动并入，并直接沿用另一个分支的head指针。尽管如此，在你往远端服务器上推送分支之前，不要使用rebase。这会让你混乱。</p><p>如果你不能确定哪个分支（哪些需要合并，哪些需要移除）。这里有两个git分支切换方式来帮助你：</p><h1 id="Shows-branches-that-are-all-merged-in-to-your-current-branch"><a href="#Shows-branches-that-are-all-merged-in-to-your-current-branch" class="headerlink" title="Shows branches that are all merged in to your current branch"></a>Shows branches that are all merged in to your current branch</h1><p>$ git branch –merged</p><h1 id="Shows-branches-that-are-not-merged-in-to-your-current-branch"><a href="#Shows-branches-that-are-not-merged-in-to-your-current-branch" class="headerlink" title="Shows branches that are not merged in to your current branch"></a>Shows branches that are not merged in to your current branch</h1><p>$ git branch –no-merged<br>9.远程分支<br>如果你想将本地分支放置远程服务端，你可以用这条命令进行推送：</p><p>$ git push origin twitter-experiment:refs/heads/twitter-experiment</p><h1 id="Where-origin-is-our-server-name-and-twitter-experiment-is-the-branch"><a href="#Where-origin-is-our-server-name-and-twitter-experiment-is-the-branch" class="headerlink" title="Where origin is our server name and twitter-experiment is the branch"></a>Where origin is our server name and twitter-experiment is the branch</h1><p>如果你想要从服务端删除分支：</p><p>$ git push origin :twitter-experiment<br>如果你想要查看远程分支的状态：</p><p>$ git remote show origin<br>这将列出那些曾经存在而现在不存在的远程分支，这将帮助你轻易地删除你本地多余的分支。</p><p>$ git remote prune<br>最后，如果本地追踪远程分支，常用方式是：</p><p>$ git branch –track myfeature origin/myfeature<br>$ git checkout myfeature<br>尽管这样，Git的新版本将启动自动追踪，如果你使用-b来checkout：</p><p>$ git checkout -b myfeature origin/myfeature<br>Storing Content in Stashes, Index and File System 在stash储存内容、索引和文件系统</p><ol><li>Stashing<br>在Git中你可以将当前的工作区的内容保存到Git栈中并从最近的一次提交中读取相关内容。以下是个简单的例子：</li></ol><p>$ git stash</p><h1 id="Do-something…"><a href="#Do-something…" class="headerlink" title="Do something…"></a>Do something…</h1><p>$ git stash pop<br>很多人推荐使用git stash apply来代替pop。这样子恢复后储存的stash内容并不会删除，而‘pop’恢复的同时把储存的stash内容也删了 ，使用git stash apply 就可以移除任何栈中最新的内容。</p><p><code data-language="javascript">$ git stash drop<br></code><br>git可以自动创建基于当前提交信息的指令，如果你更喜欢使用通用的信息（相当于不会对前一次提交做任何改动）</p><p><code data-language="javascript">$ git stash save “My stash message”<br></code><br>如果你想使用某个stash（不一定是最后一个），你可以这样将其列表显示出来然后使用：</p><p><code data-language="javascript">$ git stash list<br>  stash@{0}: On master: Changed to German<br>  stash@{1}: On master: Language is now Italian<br>$ git stash apply stash@{1}<br></code><br>11.添加交互<br>在svn中，如果你文件有了改动之后，然后会提交所有改动的文件，在 Git中为了能更好的提交特定的文件或者某个补丁，你需要在交互模式提交选择提交的文件的内容。</p><p>$ git add -i<br>staged     unstaged path</p><p><strong><em> Commands </em></strong><br>  1: status      2: update   3: revert   4: add untracked<br>  5: patch      6: diff     7: quit     8: help<br>What now&gt;<br>这是基于菜单的交互式提示符。您可以使用命令前的数字或进入高亮字母(如果你有高亮输入)模式。常用形式是，输入你想执行的操作前的数字。(你可以像1或1 – 4或2、4、7的格式来执行命令)。</p><p>如果你想进入补丁模式（在交互模式中输入p或5），同样也可以这样操作：</p><p>$ git add -p<br>diff –git a/dummy.rb b/dummy.rb<br>index 4a00477..f856fb0 100644<br>— a/dummy.rb<br>+++ b/dummy.rb<br>@@ -1,5 +1,5 @@<br> class MyFoo<br>   def say</p><ul><li>puts “Annyong Haseyo”</li></ul><ul><li>puts “Guten Tag”<br>end<br>end<br>Stage this hunk [y,n,q,a,d,/,e,?]?<br>如你所见，你将在选择添加改动的那部分文件的底部获得一些选项。此外，使用“？”会说明这个选项。</li></ul><ol><li>文件系统中的储存/检索<br>有些项目（比如Git自己的项目）需要直接在Git的文件系统中添加额外的并不想被检查的文件。</li></ol><p>让我们开始在Git中保存随机文件</p><p>$ echo “Foo” | git hash-object -w –stdin<br>51fc03a9bb365fae74fd2bf66517b30bf48020cb<br>比如数据库中的对象，如果你不想让一些对象被垃圾回收，最简单的方式是给它加标签：</p><p>$ git tag myfile 51fc03a9bb365fae74fd2bf66517b30bf48020cb<br>在这里我们设置myfile的标签，当我们需要检索该文件时可以这样：</p><p>$ git cat-file blob myfile<br>这对开发者可能需要的但是并不想每次都去检查的有用文件（密码，gpg键等等）很管用（特别是在生产过程中）。</p><p>Logging and What Changed? 记录日志和什么改变了？</p><ol><li>查看日志<br>在不使用“git log”的情况下，你不能查看你长期的最近提交内容，但是，仍然有一些更便于你使用的方法，比如，你可以这样查看单次提交变动的内容：</li></ol><p>$ git log -p<br>或者你只看文件变动的摘要：</p><p>$ git log –stat<br>这个很赞的别名，可以让你在一行命令下简化提交，并展示不错的图形化分支。</p><p>$ git config –global alias.lol “log –pretty=oneline –abbrev-commit –graph –decorate”<br>$ git lol</p><ul><li>4d2409a (master) Oops, meant that to be in Korean</li><li>169b845 Hello world<br>14.在日志中查找<br>如果你想根据指定的作者查找：</li></ul><p>$ git log –author=Andy<br>更新：感谢 Johannes的评论，解除了我的一些困惑，</p><p>或者你可以搜索你提交信息的内容：</p><p>$ git log –grep=”Something in the message”<br>这些强大的指令被称为pickaxe指令，来检查被移除或添加特定块的内容（比如，当他们第一次出现或者被移除），添加任何一行内容都会告诉你（但是并不包括那行内容刚刚被改动）</p><p>$ git log -S “TODO: Check for admin status”<br>如果你改动一个特定的文件会怎么样？如：lib/foo.rb</p><p>$ git log lib/foo.rb<br>如果你有feature/132 和ferature/145这两个分支，并想查看这些不在master上的分支内容。（ ^ 符号是意味着非）</p><p>$ git log feature/132 feature/145 ^master<br>你同样可以使用ActiveSupport风格的日期来缩短时间范围：</p><p>$ git log –since=2.months.ago –until=1.day.ago<br>默认会使用OR来合并查询，但你也可改用AND（如果你有不止一个条件）</p><p>$ git log –since=2.months.ago –until=1.day.ago –author=andy -S “something” –all-match<br>15.选择试图/改动的之前的版本。<br>根据你知道的信息，可以按照以下方式来找到之前的版本：</p><p>$ git show 12a86bc38 # By revision<br>$ git show v1.0.1 # By tag<br>$ git show feature132 # By branch name<br>$ git show 12a86bc38^ # Parent of a commit<br>$ git show 12a86bc38~2 # Grandparent of a commit<br>$ git show feature132@{yesterday} # Time relative<br>$ git show feature132@{2.hours.ago} # Time relative<br>注意：不像前一部分所说，在最后的插入符号意味着提交的父类，在前面的插入符号意味着不在这个分支上。</p><ol><li>选择一个方式<br>最简单的方式：</li></ol><p>$ git log origin/master..new</p><h1 id="old-new-everything-you-haven’t-pushed-yet"><a href="#old-new-everything-you-haven’t-pushed-yet" class="headerlink" title="[old]..[new] - everything you haven’t pushed yet"></a>[old]..[new] - everything you haven’t pushed yet</h1><p>你也可以省略[new]，这样将默认使用当前的HEAD指针。</p><p>Rewinding Time &amp; Fixing Mistakes 回滚和修复错误<br>17.重置更改<br>如果你没有提交你可以简单的撤销改动：</p><p>$ git reset HEAD lib/foo.rb<br>通常我们使用”unstage“这样的别名来代替:</p><p>$ git config –global alias.unstage “reset HEAD”<br>$ git unstage lib/foo.rb<br>如果你已经提交了，有两种情况：如果是最后一次提交你仅仅需要amend：</p><p>$ git commit –amend<br>这将不执行最后一次提交，恢复你原来的内容，提交信息将默认为你下次提交的信息。</p><p>如果你已经提交过不止一次了并且想完全回到之前那个记录，你可以重置分支回到指定的时间。</p><p>$ git checkout feature132<br>$ git reset –hard HEAD~2<br>如果你想将分支回滚但想要SHA1数（版本号）不一样（也许你可以将分支的HEAD指向另一个分支，或者之后的提交），你可以通过如下方式：</p><p>$ git checkout FOO<br>$ git reset –hard SHA<br>实际上还有个更快的方式（这样并不会改变你的文件复制内容，并回归到第一次FOO的状态并指向SHA）</p><p>$ git update-ref refs/heads/FOO SHA</p><ol><li>提交至错误的分支<br>好吧，假定你提交到master上了，但是你想提交的是名为experimental的主题分支上，如果想移除这个改动，你可以在当前创建一个分支并将head指针回滚再检查新的分支</li></ol><p>$ git branch experimental   # Creates a pointer to the current master state<br>$ git reset –hard master~3 # Moves the master branch pointer back to 3 revisions ago<br>$ git checkout experimental<br>如果你在分支的分支的分支进行了改动将会很麻烦，那么你需要做的就是在其他处进行分支rebase改动</p><p>$ git branch newtopic STARTPOINT<br>$ git rebase oldtopic –onto newtopic</p><ol><li>rebase的交互<br>这是个很不错的功能，我曾看过演示但一直以来并没有真正搞懂，现在我知道了，非常简单。假如你进行了三次提交，但是你想重新编辑它们（或者结合它们）。</li></ol><p>$ git rebase -i master~3<br>然后你让你的编辑器打开一些指令，你需要做的就是修改指令来选择/squash/编辑(或删除)/提交和保存/退出，编辑完使用git rebase —continue 来通过你的每一个指令。</p><p>如果你选择编辑一个，它将离开你的提交状态，所以你需要使用git commit -amend来编辑它。</p><p>注意：不要在rebase的时候提交——只能添加了之后再使用—continue, —skip 或—abort.</p><ol><li>清除<br>如果你在分支中提交了一些内容（也许是一些SVN上老的资源文件）并想从历史记录中完全移除，可以这样：</li></ol><p>$ git filter-branch –tree-filter ‘rm -f *.class’ HEAD<br>如果你已经将其推送至origin，并提交了一些垃圾内容，你同样可以推送之前在本地系统这样做：</p><p>$ git filter-branch –tree-filter ‘rm -f *.class’ origin/master..HEAD<br>Miscellaneous Tips 各种各样的技巧<br>21.你看过的前面的引用<br>如果你知道你之前看到的SHA-1数（版本号），并需要进行一些重置/回滚，可以使用reflog命令查询最近查看的sha – 1数（版本号）：</p><p>$ git reflog<br>$ git log -g # Same as above, but shows in ‘log’ format</p><ol><li>分支命名<br>一个有趣的小技巧，不要忘记分支名不仅仅限于a-z和0-9，在名字中使用/和.用于命名伪命名空间和版本控制，也是个不错的主意，例如：</li></ol><p>$ # Generate a changelog of Release 132<br>$ git shortlog release/132 ^release/131<br>$ # Tag this as v1.0.1<br>$ git tag v1.0.1 release/132</p><ol><li>找到Dunnit<br>找出谁在一个文件中改变了一行代码，简单的命令是:</li></ol><p>$ git blame FILE<br>有时候是上一个文件发生了变动(如果你合并两个文件，或者你已经转移到一个函数)，这样你就可以使用:</p><p>$ # shows which file names the content came from<br>$ git blame -C FILE<br>有时候需要通过点击来追踪来回的变动，这里有一个不错的内置gui:</p><p>$ git gui blame FILE</p><ol><li>数据库维护<br>通常Git并不需要过多的维护，它几乎可以自己搞定，尽管如此你也可以查看数据库使用的统计：</li></ol><p>$ git count-objects -v<br>如果数值过高你可以选择将你的克隆垃圾回收。这不会影响你推送内容或其他人，但它可以让你的命令运行的更快，并使用更少的空间:</p><p>$ git gc<br>它也可以在运行时进行一致性检验:</p><p>$ git fsck –full<br>你可以在后面添加-auto 参数（如果你在服务器跑定时任务时），这在统计数据时是必须的。</p><p>当检查的结果是“dangling”或“unreachable”这样的是正常的，这通常是回滚和rebase的结果。 得到“missing” 或 “sha1 mismatch” 这样的结果是不好的…你需要得到专业的帮助!</p><ol><li>恢复失去的分支<br>如果你意外的删除一个分支，可以重新创建它:</li></ol><p>$ git branch experimental SHA1_OF_HASH<br>你可以使用git reflog查看你最近访问过的SHA1数（版本号）</p><p>另一个方式就是使用 git fsck —lost-found ，悬空对象（dangling commit ）是就是失去HEAD指针的提交，（删除的分支只是失去了HEAD指针成为悬空对象）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git常用的操作命令&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://code.skyheng.com/categories/git/"/>
    
    
      <category term="git" scheme="http://code.skyheng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>python安装</title>
    <link href="http://code.skyheng.com/post/26220.html"/>
    <id>http://code.skyheng.com/post/26220.html</id>
    <published>2016-10-10T16:31:13.000Z</published>
    <updated>2018-03-20T14:51:22.241Z</updated>
    
    <content type="html"><![CDATA[<p>这个地方是写描述的地方</p><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><p>下载地址<a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a></p></li><li><p>学习网址：<a href="http://www.runoob.com/python/python-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/python/python-tutorial.html</a></p></li></ul><p><a href="http://blog.csdn.net/zs808/article/details/51611790" target="_blank" rel="noopener">http://blog.csdn.net/zs808/article/details/51611790</a></p><p><a href="http://blog.csdn.net/u013793399/article/details/51289973" target="_blank" rel="noopener">http://blog.csdn.net/u013793399/article/details/51289973</a></p><ul><li>Python3.5.2安装教程：<a href="http://jingyan.baidu.com/article/a17d5285ed78e88098c8f222.html?st=2&amp;net_type=&amp;bd_page_type=1&amp;os=0&amp;rst=&amp;word=www.10010" target="_blank" rel="noopener">http://jingyan.baidu.com/article/a17d5285ed78e88098c8f222.html?st=2&amp;net_type=&amp;bd_page_type=1&amp;os=0&amp;rst=&amp;word=www.10010</a></li><li>Windows10下搭建Python 3.5.2开发环境：<a href="http://jingyan.baidu.com/article/7f41ecec3cb637593d095caa.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/7f41ecec3cb637593d095caa.html</a></li><li>解决启动PyCharm，报错No Python interpreter selected：<a href="http://blog.csdn.net/liucheng417/article/details/49865845" target="_blank" rel="noopener">http://blog.csdn.net/liucheng417/article/details/49865845</a></li></ul><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个地方是写描述的地方&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://code.skyheng.com/categories/python/"/>
    
    
      <category term="python" scheme="http://code.skyheng.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>实例Demo之3D-Transform立方体效果</title>
    <link href="http://code.skyheng.com/post/46664.html"/>
    <id>http://code.skyheng.com/post/46664.html</id>
    <published>2016-10-09T07:28:58.000Z</published>
    <updated>2018-03-20T14:51:22.147Z</updated>
    
    <content type="html"><![CDATA[<p>实例demo之3D transform立方体效果</p><a id="more"></a><hr><style> @keyframes rotate-frame {    0% {        transform: rotateX(0deg) rotateY(0deg);    }    10% {        transform: rotateX(0deg) rotateY(180deg);    }    20% {        transform: rotateX(-180deg) rotateY(180deg);    }    30% {        transform: rotateX(-360deg) rotateY(180deg);    }    40% {        transform: rotateX(-360deg) rotateY(360deg);    }    50% {        transform: rotateX(-180deg) rotateY(360deg);    }    60% {        transform: rotateX(90deg) rotateY(180deg);    }    70% {        transform: rotateX(0) rotateY(180deg);    }    80% {        transform: rotateX(90deg) rotateY(90deg);    }    90% {        transform: rotateX(90deg) rotateY(0);    }    100% {        transform: rotateX(0) rotateY(0);    }}.my-container {    width: 62.5rem;    height: 31.25rem;    margin: 0 auto;    transform: scale(0.6) translateY(-10rem);}.rect-wrap {    position: relative;    perspective: 100rem;}.container {    width: 50rem;    height: 50rem;    transform-style: preserve-3d;    transform-origin: 50% 50% 12.5rem;    animation: rotate-frame 30s linear infinite;}.slide {    width: 25rem;    height: 25rem;    position: absolute;    box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.9) inset;}.top {    left: 12.5rem;    top: -12.5rem;    transform: rotateX(-90deg);    transform-origin: bottom;    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img1.jpeg) no-repeat;    background-size: 100% 100%;}.bottom {    left: 12.5rem;    bottom: -12.5rem;    transform: rotateX(90deg);    transform-origin: top;    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img2.jpeg) no-repeat;    background-size: 100% 100%;}.left {    left: -12.5rem;    top: 12.5rem;    transform: rotateY(90deg);    transform-origin: right;    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img3.jpeg) no-repeat;    background-size: 100% 100%;}.right {    left: 37.5rem;    top: 12.5rem;    transform: rotateY(-90deg);    transform-origin: left;    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img4.jpeg) no-repeat;    background-size: 100% 100%;}.front {    left: 12.5rem;    top: 12.5rem;    transform: translateZ(25rem);    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img5.jpeg) no-repeat;    background-size: 100% 100%;}.back {    left: 12.5rem;    top: 12.5rem;    transform: translateZ(0);    background: url(http://7xtawy.com1.z0.glb.clouddn.com/img6.jpeg) no-repeat;    background-size: 100% 100%;}</style><div class="my-container"><br>    <div class="rect-wrap"><br>        <div class="container"><br>            <div class="top slide"></div><br>            <div class="bottom slide"></div><br>            <div class="left slide"></div><br>            <div class="right slide"></div><br>            <div class="front slide"></div><br>            <div class="back slide"></div><br>        </div><br>    </div><br></div><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实例demo之3D transform立方体效果&lt;/p&gt;
    
    </summary>
    
      <category term="rect" scheme="http://code.skyheng.com/categories/rect/"/>
    
    
      <category term="rect" scheme="http://code.skyheng.com/tags/rect/"/>
    
      <category term="css3" scheme="http://code.skyheng.com/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>Redis在Linux下的安装和配置</title>
    <link href="http://code.skyheng.com/post/51910.html"/>
    <id>http://code.skyheng.com/post/51910.html</id>
    <published>2016-09-30T07:27:15.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>这个地方是写描述的地方</p><a id="more"></a><h2 id="Redis-安装"><a href="#Redis-安装" class="headerlink" title="Redis 安装"></a>Redis 安装</h2><ul><li>Redis 安装<ul><li>官网：<a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a></li><li>官网下载：<a href="http://redis.io/download" target="_blank" rel="noopener">http://redis.io/download</a></li><li>官网 Github 地址：<a href="https://github.com/redis" target="_blank" rel="noopener">https://github.com/redis</a></li><li>此时（20160930） Redis 最新稳定版本为：<strong>3.2.4</strong></li><li>官网帮助中心：<a href="http://redis.io/documentation" target="_blank" rel="noopener">http://redis.io/documentation</a></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>setups</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>Redis 下载：<code>wget http://download.redis.io/releases/redis-3.2.4.tar.gz</code> （大小：1.5 M）<ul><li>安装依赖包：<code>yum install -y gcc-c++ tcl</code></li><li>解压：<code>tar zxvf redis-3.2.4.tar.gz</code></li><li>移动到我个人安装目录：<code>mv redis-3.2.4/ /usr/program/</code></li><li>进入解压后目录：<code>cd /usr/program/redis-3.2.4/</code></li><li>编译：<code>make</code></li><li>编译安装：<code>make install</code><ul><li>安装完之后会在：<code>/usr/local/bin</code> 目录下生成好几个 redis 相关的文件</li></ul></li><li>复制配置文件：<code>cp /usr/program/redis-3.2.4/redis.conf /etc/</code></li><li>修改配置：<code>vim /etc/redis.conf</code><ul><li>把旧值：<code>daemonize no</code> </li><li>改为新值：<code>daemonize yes</code> </li></ul></li><li>启动：<code>/usr/local/bin/redis-server /etc/redis.conf</code></li><li>查看是否启动：<code>ps -ef | grep redis</code></li><li>进入客户端：<code>redis-cli</code></li><li>关闭客户端：<code>redis-cli shutdown</code></li><li>开机启动配置：<code>echo &quot;/usr/local/bin/redis-server /etc/redis.conf&quot; &gt;&gt; /etc/rc.local</code></li><li>开放防火墙端口：<ul><li>添加规则：<code>sudo iptables -I INPUT -p tcp -m tcp --dport 6379 -j ACCEPT</code></li><li>保存规则：<code>sudo /etc/rc.d/init.d/iptables save</code></li><li>重启 iptables：<code>sudo service iptables restart</code></li></ul></li></ul></li></ul></li></ul><h2 id="Redis-配置"><a href="#Redis-配置" class="headerlink" title="Redis 配置"></a>Redis 配置</h2><ul><li>编辑配置文件：<code>vim /usr/program/redis-3.2.4/redis.conf</code></li><li>Redis 默认的配置文件内容：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否以后台daemon方式运行，默认是 no，一般我们会改为 yes</span></span><br><span class="line">daemonize no</span><br><span class="line">pidfile /var/run/redis.pid</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 0</span><br><span class="line">loglevel notice</span><br><span class="line">logfile ""</span><br><span class="line"><span class="comment"># 开启数据库的数量，Redis 是有数据库概念的，默认是 16 个，数字从 0 ~ 15</span></span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename "appendonly.aof"</span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events ""</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="Redis-常用命令"><a href="#Redis-常用命令" class="headerlink" title="Redis 常用命令"></a>Redis 常用命令</h2><ul><li>命令是不区分大小写的，但是这里为了方便和后面的 key value 进行区分所以我全部写大写，你也可以用小写。<ul><li>但是需要注意的是：key 是完全区分大小写的，比如 key=codeBlog 和 key=codeblog 是两个键值</li></ul></li><li>官网命令列表：<a href="http://redis.io/commands" target="_blank" rel="noopener">http://redis.io/commands</a></li><li><code>SET key value</code>，设值。eg：<code>SET myblog www.skyheng.com</code></li><li><code>GET key</code>，取值</li><li><code>INCR key</code>，递增数字</li><li><code>DECR key</code>，递减数字</li><li><code>KEYS *</code>，查看当前数据库下所有的 key</li><li><code>APPEND key value</code>，给尾部追加内容，如果要追加的 key 不存在，则相当于 SET key value</li><li><code>STRLEN key</code>，返回键值的长度，如果键不存在则返回 0</li><li><code>MSET key1 value1 key2 value2</code>，同时设置多值</li><li><code>MGET key1 value1 key2 value2</code>，同时取多值</li><li><code>EXPIRE key 27</code>，设置指定键的生存时间，27 的单位是秒</li><li><code>TTL key</code>，查看键的剩余生存时间<ul><li>返回 -2，表示不存在，过了生存时间后被删除</li><li>返回 -1，表示没有生存时间，永久存储</li><li>返回正整数，表示还剩下对应的生存时间</li></ul></li><li><code>PERSIST key</code>，清除生成时间，重新变成永久存储（重新设置 key 的值也可以起到清除生存时间的效果）</li><li><code>FLUSHDB</code>，清空当前数据库所有键值</li><li><code>FLUSHALL</code>，清空所有数据库的所有键值</li></ul><h2 id="Redis-客户端"><a href="#Redis-客户端" class="headerlink" title="Redis 客户端"></a>Redis 客户端</h2><ul><li>Java：<a href="http://redis.io/clients#java" target="_blank" rel="noopener">http://redis.io/clients#java</a><ul><li>Jedis 官网：<a href="https://github.com/xetorthio/jedis" target="_blank" rel="noopener">https://github.com/xetorthio/jedis</a></li></ul></li></ul><h2 id="Redis-GUI-管理工具"><a href="#Redis-GUI-管理工具" class="headerlink" title="Redis GUI 管理工具"></a>Redis GUI 管理工具</h2><ul><li>Redis Desktop Manager<ul><li>官网：<a href="http://redisdesktop.com/" target="_blank" rel="noopener">http://redisdesktop.com/</a></li><li>官网下载：<a href="http://redisdesktop.com/download" target="_blank" rel="noopener">http://redisdesktop.com/download</a></li><li>效果如下图：</li><li><img src="images/Redis-GUI-a-1.jpg" alt="Redis Desktop Manager"></li></ul></li></ul><h2 id="Redis-主从（主从从）配置"><a href="#Redis-主从（主从从）配置" class="headerlink" title="Redis 主从（主从从）配置"></a>Redis 主从（主从从）配置</h2><h3 id="Redis-主从架构"><a href="#Redis-主从架构" class="headerlink" title="Redis 主从架构"></a>Redis 主从架构</h3><ul><li>假设有两台服务器，一台做主，一台做从<ul><li>Redis 主信息：<ul><li>IP：<strong>12.168.1.114</strong>=</li><li>端口：<strong>6379</strong></li></ul></li><li>Redis 从信息：<ul><li>IP：<strong>12.168.1.115</strong></li><li>端口：<strong>6379</strong></li></ul></li></ul></li><li>编辑从机的 Redis 配置文件，找到 210 行（大概），默认这一行应该是注释的：<code># slaveof &lt;masterip&gt; &lt;masterport&gt;</code></li><li>我们需要去掉该注释，并且填写我们自己的主机的 IP 和 端口，比如：<code>slaveof 192.168.1.114 6379</code></li><li>配置完成后重启从机 Redis 服务</li><li>重启完之后，进入主机的 redis-cli 状态下，输入：<code>INFO replication</code><ul><li>可以查询到当前主机的 redis 处于什么角色，有哪些从机已经连上主机。</li></ul></li><li>此时已经完成了主从配置，我们可以测试下：<ul><li>我们进入主机的 redis-cli 状态，然后 set 某个值，比如：<code>set myblog skyheng.com</code></li></ul></li><li>我们切换进入从机的 redis-cli 的状态下，获取刚刚设置的值看是否存在：<code>get myblog</code>，此时，我们可以发现是可以获取到值的。</li><li>但是有一个需要注意的：从库不具备写入数据能力，不然会报错。 从库只有只读能力。</li></ul><h3 id="Redis主从从架构"><a href="#Redis主从从架构" class="headerlink" title="Redis主从从架构"></a>Redis主从从架构</h3><ul><li>Redis 主从从的意思：看桌面上的截图。</li><li>优点，除了减少主库连接的压力，还有可以关掉主库的持久化功能，把持久化的功能交给从库进行处理。</li><li>第一个从库配置的信息是连上主库，后面的第二个从库配置的连接信息是连上第一个从库， 假如还有第三个从库的话，我们可以把第三个从库的配置信息连上第二个从库上，以此类推。</li></ul><ul><li>插入图片示例</li><li><img src="XXX-XXXX-XXXX/XXXX.png" alt="JRebel"></li></ul><h3 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h3><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://yanshisan.blog.51cto.com/7879234/1377992" target="_blank" rel="noopener">http://yanshisan.blog.51cto.com/7879234/1377992</a></li><li><a href="https://segmentfault.com/a/1190000002685224" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002685224</a></li><li><a href="http://itbilu.com/linux/management/4kB2ninp.html" target="_blank" rel="noopener">http://itbilu.com/linux/management/4kB2ninp.html</a></li><li><a href="http://keenwon.com/1335.html" target="_blank" rel="noopener">http://keenwon.com/1335.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个地方是写描述的地方&lt;/p&gt;
    
    </summary>
    
      <category term="redis" scheme="http://code.skyheng.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://code.skyheng.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat7优化配置参数</title>
    <link href="http://code.skyheng.com/post/20294.html"/>
    <id>http://code.skyheng.com/post/20294.html</id>
    <published>2016-09-26T14:28:56.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>Tomcat在使用的过程中会遇到很多报错，有些是程序的报错，但还有一部分是tomcat本身的报错，我们可以通过优化tomcat的初始配置来提高tomcat的性能。Tomcat的优化主要体现在两方面：内存、并发连接数。 1、内存优化： 优化内存，主要是在bin/catalina.bat/sh 配置文件<br><a id="more"></a></p><blockquote><p>Tomcat在使用的过程中会遇到很多报错，有些是程序的报错，但还有一部分是tomcat本身的报错，<br>我们可以通过优化tomcat的初始配置来提高tomcat的性能。Tomcat的优化主要体现在两方面：内存、并发连接数。</p></blockquote><p><img src="http://img.skyheng.com/picture/2016/tomcat.png" alt="Tomcat"></p><h2 id="1、内存优化："><a href="#1、内存优化：" class="headerlink" title="1、内存优化："></a>1、内存优化：</h2><ul><li>优化内存，主要是在<code>bin/catalina.bat/sh</code> 配置文件中进行。linux上，在<code>catalina.sh</code>中添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;-server -Xms1G -Xmx2G -Xss256K -Djava.awt.headless=true -Dfile.encoding=utf-8 -XX:MaxPermSize=256m -XX:PermSize=128M -XX:MaxPermSize=256M&quot;</span><br></pre></td></tr></table></figure></li></ul><p>其中：<br>• -server：启用jdk的server版本。<br>• -Xms：虚拟机初始化时的最小堆内存。<br>• -Xmx：虚拟机可使用的最大堆内存。 #-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落<br>• -XX:PermSize：设置非堆内存初始值,默认是物理内存的1/64。<br>• -XX:MaxNewSize：新生代占整个堆内存的最大值。<br>• -XX:MaxPermSize：Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域。</p><h3 id="1）错误提示：java-lang-OutOfMemoryError-Java-heap-space"><a href="#1）错误提示：java-lang-OutOfMemoryError-Java-heap-space" class="headerlink" title="1）错误提示：java.lang.OutOfMemoryError:Java heap space"></a>1）错误提示：java.lang.OutOfMemoryError:Java heap space</h3><ul><li>Tomcat默认可以使用的内存为128MB，在较大型的应用项目中，这点内存是不够的，有可能导致系统无法运行。常见的问题是报Tomcat内存溢出错误，Outof Memory(系统内存不足)的异常，从而导致客户端显示500错误，一般调整Tomcat的-Xms和-Xmx即可解决问题，通常将-Xms和-Xmx设置成一样，堆的最大值设置为物理可用内存的最大值的80%。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set JAVA_OPTS=-Xms512m-Xmx512m</span><br></pre></td></tr></table></figure></li></ul><h3 id="2）错误提示：java-lang-OutOfMemoryError-PermGenspace"><a href="#2）错误提示：java-lang-OutOfMemoryError-PermGenspace" class="headerlink" title="2）错误提示：java.lang.OutOfMemoryError: PermGenspace"></a>2）错误提示：java.lang.OutOfMemoryError: PermGenspace</h3><ul><li>PermGenspace的全称是Permanent Generationspace,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGenspace中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGenspace进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行precompile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。解决方法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setJAVA_OPTS=-XX:PermSize=128M</span><br></pre></td></tr></table></figure></li></ul><h3 id="3）"><a href="#3）" class="headerlink" title="3）"></a>3）</h3><p>在使用-Xms和-Xmx调整tomcat的堆大小时，还需要考虑垃圾回收机制。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5 秒。如果垃圾收集成为瓶颈，那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。</p><h2 id="2、连接数优化："><a href="#2、连接数优化：" class="headerlink" title="2、连接数优化："></a>2、连接数优化：</h2><p>优化连接数，主要是在conf/server.xml配置文件中进行修改。</p><h3 id="2-1、优化线程数"><a href="#2-1、优化线程数" class="headerlink" title="2.1、优化线程数"></a>2.1、优化线程数</h3><p>找到<code>Connectorport=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</code>，增加maxThreads和acceptCount属性（使acceptCount大于等于maxThreads），如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connectorport="8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span><span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span><span class="attr">acceptCount</span>=<span class="string">"500"</span> <span class="attr">maxThreads</span>=<span class="string">"400"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>其中：</p><ul><li>maxThreads：tomcat可用于请求处理的最大线程数，默认是200</li><li>minSpareThreads：tomcat初始线程数，即最小空闲线程数</li><li>maxSpareThreads：tomcat最大空闲线程数，超过的会被关闭</li><li>acceptCount：当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理.默认100<h3 id="2-2、使用线程池"><a href="#2-2、使用线程池" class="headerlink" title="2.2、使用线程池"></a>2.2、使用线程池</h3>在server.xml中增加executor节点，然后配置connector的executor属性，如下：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Executorname="tomcatThreadPool"</span> <span class="attr">namePrefix</span>=<span class="string">"req-exec-"</span><span class="attr">maxThreads</span>=<span class="string">"1000"</span> <span class="attr">minSpareThreads</span>=<span class="string">"50"</span><span class="attr">maxIdleTime</span>=<span class="string">"60000"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connectorport="8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span><span class="attr">executor</span>=<span class="string">"tomcatThreadPool"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>其中：</p><ul><li>namePrefix：线程池中线程的命名前缀</li><li>maxThreads：线程池的最大线程数</li><li>minSpareThreads：线程池的最小空闲线程数</li><li>maxIdleTime：超过最小空闲线程数时，多的线程会等待这个时间长度，然后关闭</li><li>threadPriority：线程优先级</li></ul><blockquote><p>注：当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄，这时会报<code>java.net.SocketException:Too many open files</code>错误。可使用下面步骤检查：</p></blockquote><ul><li><code>ps -ef |grep tomcat</code> # 查看tomcat的进程ID，记录ID号，假设进程ID为10001</li><li><code>lsof -p 10001|wc -l</code> # 查看当前进程id为10001的 文件操作数</li><li>使用命令：<code>ulimit -a</code> # 查看每个用户允许打开的最大文件数</li></ul><h2 id="3、Tomcat-Connector三种运行模式（BIO-NIO-APR）"><a href="#3、Tomcat-Connector三种运行模式（BIO-NIO-APR）" class="headerlink" title="3、Tomcat Connector三种运行模式（BIO, NIO, APR）"></a>3、Tomcat Connector三种运行模式（BIO, NIO, APR）</h2><h3 id="3-1、三种模式比较："><a href="#3-1、三种模式比较：" class="headerlink" title="3.1、三种模式比较："></a>3.1、三种模式比较：</h3><ol><li>BIO：一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下在Linux系统中默认使用这种方式。</li><li><p>NIO：利用Java的异步IO处理，可以通过少量的线程处理大量的请求。Tomcat8在Linux系统中默认使用这种方式。Tomcat7必须修改Connector配置来启动（conf/server.xml配置文件）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connectorport=&quot;8080&quot;protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; connectionTimeout=&quot;20000&quot;redirectPort=&quot;8443&quot;/&gt;</span><br></pre></td></tr></table></figure></li><li><p>APR(Apache Portable Runtime)：从操作系统层面解决io阻塞问题。Linux如果安装了apr和native，Tomcat直接启动就支持apr。</p></li></ol><h3 id="3-2、apr模式"><a href="#3-2、apr模式" class="headerlink" title="3.2、apr模式"></a>3.2、apr模式</h3><ul><li>安装apr以及tomcat-native</li><li><code>yum -y install apr apr-devel</code><br>进入tomcat/bin目录，比如：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/<span class="built_in">local</span>/tomcat/bin/</span><br><span class="line">tar xzfv tomcat-native.tar.gz</span><br><span class="line"><span class="built_in">cd</span> tomcat-native-1.1.32-src/jni/native</span><br><span class="line">./configure --with-apr=/usr/bin/apr-1-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意最新版本的tomcat自带tomcat-native.war.gz，不过其版本相对于yum安装的apr过高，configure的时候会报错。</p></blockquote><p>解决：yum remove apr apr-devel –y,卸载yum安装的apr和apr-devel,下载最新版本的apr源码包，编译安装;或者下载低版本的tomcat-native编译安装</p><p>安装成功后还需要对tomcat设置环境变量，方法是在catalina.sh文件中增加1行：</p><pre><code>CATALINA_OPTS=&quot;-Djava.library.path=/usr/local/apr/lib&quot;</code></pre><ul><li>apr下载地址：<a href="http://apr.apache.org/download.cgi" target="_blank" rel="noopener">http://apr.apache.org/download.cgi</a></li><li>tomcat-native下载地址：<a href="http://tomcat.apache.org/download-native.cgi" target="_blank" rel="noopener">http://tomcat.apache.org/download-native.cgi</a></li><li>修改8080端对应的conf/server.xml</li><li><code>protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">"tomcatThreadPool"</span></span></span><br><span class="line"><span class="tag"><span class="attr">port</span>=<span class="string">"8080"</span></span></span><br><span class="line"><span class="tag"><span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11AprProtocol"</span></span></span><br><span class="line"><span class="tag"><span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">enableLookups</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag"><span class="attr">redirectPort</span>=<span class="string">"8443"</span></span></span><br><span class="line"><span class="tag"><span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PS-启动以后查看日志-显示如下表示开启-apr-模式"><a href="#PS-启动以后查看日志-显示如下表示开启-apr-模式" class="headerlink" title="PS:启动以后查看日志 显示如下表示开启 apr 模式"></a>PS:启动以后查看日志 显示如下表示开启 apr 模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sep 19, 2016 3:46:21 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [&quot;http-apr-8081&quot;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tomcat在使用的过程中会遇到很多报错，有些是程序的报错，但还有一部分是tomcat本身的报错，我们可以通过优化tomcat的初始配置来提高tomcat的性能。Tomcat的优化主要体现在两方面：内存、并发连接数。 1、内存优化： 优化内存，主要是在bin/catalina.bat/sh 配置文件&lt;br&gt;
    
    </summary>
    
      <category term="tomcat" scheme="http://code.skyheng.com/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="http://code.skyheng.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>一些好的技术博客,追随牛逼的人,让自己更牛逼</title>
    <link href="http://code.skyheng.com/post/56640.html"/>
    <id>http://code.skyheng.com/post/56640.html</id>
    <published>2016-09-18T03:23:12.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些大牛的博客及技术文章，宁可十年不将军,不可一日不拱卒，所以勤奋学习技术，跟随牛逼的人脚步“忍辱负屈”，要成为一名大牛，养兵10年，有朝一日定当所向披靡，使旁人闻风丧胆，你都不去逼下自己，怎么会知道自己有多厉害，要定个小目标，例如先写写博客。</p><a id="more"></a><h2 id="心诉"><a href="#心诉" class="headerlink" title="心诉"></a>心诉</h2><p>一个人不可能一下子成功，更不可能一步登天，所有成功与荣耀的背后是无尽的心酸。所以要想有多大的成功，那么在背后你一定要付出千倍百倍的努力才可以。我们没有理由去羡慕别人，因为同样的事你也可以做到，只不过你从一开始就没有尝试，没有努力，那么你又凭什么羡慕嫉妒别人。<br>当然，当一个人取得成功时，你会嫉妒是可以原谅的，毕竟我们不是圣人，当面对一个强大的人的时候，我们本能的会有害怕.嫉妒.这都是正常的，但如果你想要成功，光有嫉妒是不行的，是没有用的。那只会让你沉在无边的不甘中。正确的做法就是付出更多的努力，拼命地追赶那个让你嫉妒的人，<br>最后你才有可能获得成功。世上没有什么不可能，不要找借口，任何借口都不行，如果你真的这么做，不要说别人，自己也会鄙视自己。相信自己，以前进为目标，以成功为坐标，永不止步的前进。终有一天，你不会再羡慕别人，只会让别人羡慕你。</p><h1 id="一、技术网站"><a href="#一、技术网站" class="headerlink" title="一、技术网站"></a>一、技术网站</h1><p>腾讯Web前端团队：<a href="http://www.alloyteam.com/" target="_blank" rel="noopener">http://www.alloyteam.com/</a></p><h1 id="二、技术博客"><a href="#二、技术博客" class="headerlink" title="二、技术博客"></a>二、技术博客</h1><h2 id="BAT等技术团队博客"><a href="#BAT等技术团队博客" class="headerlink" title="BAT等技术团队博客"></a>BAT等技术团队博客</h2><ul><li>阿里中间件团队博客: 地址：<a href="http://jm.taobao.org/" target="_blank" rel="noopener">http://jm.taobao.org/</a></li><li>淘宝前端团队：地址：<a href="http://www.taobaofed.org/" target="_blank" rel="noopener">http://www.taobaofed.org/</a></li><li></li><li>美团技术团队博客：     地址： <a href="http://tech.meituan.com/" target="_blank" rel="noopener">http://tech.meituan.com/</a></li><li>腾讯社交用户体验设计(ISUX)    地址：<a href="http://isux.tencent.com/" target="_blank" rel="noopener">http://isux.tencent.com/</a></li><li>京东设计中心    地址：<a href="http://jdc.jd.com" target="_blank" rel="noopener">http://jdc.jd.com</a></li><li>QQ游戏设计中心    地址：<a href="http://gdc.qq.com" target="_blank" rel="noopener">http://gdc.qq.com</a></li><li>百度搜索用户体验中心    地址：<a href="http://ued.baidu.com/" target="_blank" rel="noopener">http://ued.baidu.com/</a></li><li>一淘UX    地址：<a href="http://ux.etao.com" target="_blank" rel="noopener">http://ux.etao.com</a></li><li>腾讯CDC    地址：<a href="http://cdc.tencent.com" target="_blank" rel="noopener">http://cdc.tencent.com</a></li><li>腾讯ISUX    地址：<a href="http://isux.tencent.com" target="_blank" rel="noopener">http://isux.tencent.com</a></li><li>腾讯MXD移动互联网设计中心    地址：<a href="http://mxd.tencent.com" target="_blank" rel="noopener">http://mxd.tencent.com</a></li><li>UXDC 2011体验设计峰会    地址：<a href="http://www.uxdc.org" target="_blank" rel="noopener">http://www.uxdc.org</a></li><li>视觉同盟    地址：<a href="http://www.visionunion.com" target="_blank" rel="noopener">http://www.visionunion.com</a></li><li>Tencent TG ideas    地址：<a href="http://tgideas.qq.com" target="_blank" rel="noopener">http://tgideas.qq.com</a></li><li>Tencent AlloyTeam    地址：<a href="http://www.alloyteam.com" target="_blank" rel="noopener">http://www.alloyteam.com</a></li><li>QQ客户端团队博客    地址：<a href="http://impd.tencent.com/" target="_blank" rel="noopener">http://impd.tencent.com/</a></li><li>阿里巴巴（中文站）UED    地址：<a href="http://www.aliued.cn" target="_blank" rel="noopener">http://www.aliued.cn</a></li><li>支付宝官方Blog    地址：<a href="http://blog.alipay.com" target="_blank" rel="noopener">http://blog.alipay.com</a> （不过进去是支付宝）</li><li>Taobao UED    地址：<a href="http://ued.taobao.com/blog/" target="_blank" rel="noopener">http://ued.taobao.com/blog/</a></li><li>阿里巴巴国际站UED    地址：<a href="http://www.aliued.com" target="_blank" rel="noopener">http://www.aliued.com</a></li><li>百度MUX    地址：<a href="http://mux.baidu.com" target="_blank" rel="noopener">http://mux.baidu.com</a></li><li>微博UDC    地址：<a href="http://udc.weibo.com" target="_blank" rel="noopener">http://udc.weibo.com</a></li><li>搜狗UED    地址：<a href="http://ued.sogou.com" target="_blank" rel="noopener">http://ued.sogou.com</a></li><li>搜狐MUED    地址：<a href="http://mued.sohu.com" target="_blank" rel="noopener">http://mued.sohu.com</a></li><li>搜狐畅游VC 地址：<a href="http://vc.changyou.com/index.shtml" target="_blank" rel="noopener">http://vc.changyou.com/index.shtml</a></li><li>网易用户体验设计中心    地址：<a href="http://uedc.163.com/" target="_blank" rel="noopener">http://uedc.163.com/</a></li></ul><h3 id="taobao"><a href="#taobao" class="headerlink" title="taobao"></a>taobao</h3><ul><li>测试团队：<a href="http://www.taobaotesting.com/" target="_blank" rel="noopener">http://www.taobaotesting.com/</a></li><li>淘宝UED团队：<a href="http://ued.taobao.org/blog/" target="_blank" rel="noopener">http://ued.taobao.org/blog/</a></li><li>阿里妈妈UED团队：<a href="http://ued.alimama.com/" target="_blank" rel="noopener">http://ued.alimama.com/</a></li><li>阿里数据平台：<a href="http://www.alidata.org/archives" target="_blank" rel="noopener">http://www.alidata.org/archives</a></li><li>阿里巴巴数据库团队：<a href="http://www.taobaodba.com/" target="_blank" rel="noopener">http://www.taobaodba.com/</a></li><li>阿里中间件团队：<a href="http://jm.taobao.org/" target="_blank" rel="noopener">http://jm.taobao.org/</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>专注于分布式存储&amp;计算技术及其应用: <a href="http://www.nosqlnotes.net/" target="_blank" rel="noopener">http://www.nosqlnotes.net/</a></li></ul><h2 id="csdn"><a href="#csdn" class="headerlink" title="csdn"></a>csdn</h2><p>博客名称：java爸爸的专栏<br>博客地址：<a href="http://blog.csdn.net/javadaddy/" target="_blank" rel="noopener">http://blog.csdn.net/javadaddy/</a></p><p>博客名称：曹胜欢<br>博客地址：<a href="http://blog.csdn.net/csh624366188" target="_blank" rel="noopener">http://blog.csdn.net/csh624366188</a></p><p>博客名称：borntofight<br>博客地址：<a href="http://blog.csdn.net/tengdazhang770960436" target="_blank" rel="noopener">http://blog.csdn.net/tengdazhang770960436</a></p><h2 id="sina"><a href="#sina" class="headerlink" title="sina"></a>sina</h2><p>博客名称：最后的战役的博客<br>博客地址：<a href="http://blog.sina.com.cn/learnwar/" target="_blank" rel="noopener">http://blog.sina.com.cn/learnwar/</a></p><h2 id="iteye"><a href="#iteye" class="headerlink" title="iteye"></a>iteye</h2><p>博客名称：赵磊的博客<br>博客地址：<a href="http://elf8848.iteye.com/" target="_blank" rel="noopener">http://elf8848.iteye.com/</a></p><h2 id="优秀blog"><a href="#优秀blog" class="headerlink" title="优秀blog"></a>优秀blog</h2><p>Sina App Engine Blog：</p><p>并发编程网：</p><p>结构之法 算法之道：</p><p>dokuWiki示例：</p><p>服务器运维架构|Linux运维|云计算大数据：<a href="http://www.ha97.com" target="_blank" rel="noopener">http://www.ha97.com</a></p><p>jQuery EasyUI 中文API教程</p><h1 id="三、技术文章"><a href="#三、技术文章" class="headerlink" title="三、技术文章"></a>三、技术文章</h1><h2 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h2><p>MINA,xSocket同样的性能缺陷及陷阱,Grizzly better<br><a href="http://www.blogjava.net/adapterofcoms/articles/314560.html" target="_blank" rel="noopener">http://www.blogjava.net/adapterofcoms/articles/314560.html</a></p><p>Java连接池评估报告<br><a href="http://duzc2.iteye.com/blog/pdf" target="_blank" rel="noopener">http://duzc2.iteye.com/blog/pdf</a></p><p>mina vs. yanf4j 性能比较—庄周梦蝶<br><a href="http://www.blogjava.net/killme2008/archive/2009/06/26/284342.html" target="_blank" rel="noopener">http://www.blogjava.net/killme2008/archive/2009/06/26/284342.html</a></p><p>Grizzly和Netty以及Mina简单性能对比—阿里梁飞<br><a href="http://javatar.iteye.com/blog/1126171" target="_blank" rel="noopener">http://javatar.iteye.com/blog/1126171</a></p><p>HTTPS的七个误解<br><a href="http://ijavagos.iteye.com/blog/916029" target="_blank" rel="noopener">http://ijavagos.iteye.com/blog/916029</a></p><p>动态代理方案性能对比—阿里梁飞<br><a href="http://javatar.iteye.com/blog/814426" target="_blank" rel="noopener">http://javatar.iteye.com/blog/814426</a></p><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><p>浅谈CSRF攻击方式<br><a href="http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html" target="_blank" rel="noopener">http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html</a></p><p>一次被黑经历与反思<br><a href="http://hoodlum.blog.51cto.com/4075497/890405/" target="_blank" rel="noopener">http://hoodlum.blog.51cto.com/4075497/890405/</a></p><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>iteye中关于shiro的博客列表<br><a href="http://www.iteye.com/blogs/tag/shiro" target="_blank" rel="noopener">http://www.iteye.com/blogs/tag/shiro</a></p><p>让Apache Shiro保护你的应用<br><a href="http://www.infoq.com/cn/articles/apache-shiro" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/apache-shiro</a></p><p>将 Shiro 作为应用的权限基础<br><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-shiro/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/opensource/os-cn-shiro/</a></p><p>Spring 3.x企业实用开发实战<br><a href="http://www.iteye.com/blogs/subjects/Spring_3" target="_blank" rel="noopener">http://www.iteye.com/blogs/subjects/Spring_3</a> .</p><p>Hibernate4实战最佳实践<br><a href="http://jenmhdn.iteye.com/blog/1627262" target="_blank" rel="noopener">http://jenmhdn.iteye.com/blog/1627262</a></p><p>加速你的Hibernate引擎（上）(InfoQ)<br><a href="http://www.infoq.com/cn/articles/hibernate_tuning" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/hibernate_tuning</a></p><p>加速你的Hibernate引擎（下）(InfoQ)<br><a href="http://www.infoq.com/cn/articles/hibernate_tuning-ii" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/hibernate_tuning-ii</a></p><p>JdbcTemplate学习笔记<br><a href="http://www.iteye.com/topic/53526" target="_blank" rel="noopener">http://www.iteye.com/topic/53526</a></p><p>Spring 事务管理高级应用难点剖析: 第 1 部分<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts1/index.html?ca=drs" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts1/index.html?ca=drs</a></p><p>Spring 事务管理高级应用难点剖析: 第 2 部分<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts2/index.html?ca=dat-cn-0325" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts2/index.html?ca=dat-cn-0325</a></p><p>Spring 事务管理高级应用难点剖析: 第 3 部分<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts3/index.html?ca=drs" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-spring-ts3/index.html?ca=drs</a></p><p>Spring 让 LOB 数据操作变得简单易行<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-spring-lob/index.html?ca=drs-cn" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-spring-lob/index.html?ca=drs-cn</a></p><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>企业级WebLogic实战揭秘（连载，有PDF文档，18章已发布）<br><a href="http://www.iteye.com/topic/1112292" target="_blank" rel="noopener">http://www.iteye.com/topic/1112292</a></p><p>应用 WebSphere MQ V6 来构建企业信息总线的行业示例<br><a href="http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0803_wangql/?S_TACT=105AGX52&amp;S_CMP=NL&amp;ca=dnl-cn-04022008" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0803_wangql/?S_TACT=105AGX52&amp;S_CMP=NL&amp;ca=dnl-cn-04022008</a></p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>ibm dw上的“java多线程与并发编程专题”<br><a href="https://www.ibm.com/developerworks/cn/java/j-concurrent/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/j-concurrent/</a></p><p>一个博客文章总结 java多线程编程总结<br><a href="http://lavasoft.blog.51cto.com/62575/27069/" target="_blank" rel="noopener">http://lavasoft.blog.51cto.com/62575/27069/</a></p><p>ThreadLocal与synchronized在解决多线程并发访问时的区别<br><a href="http://271072008-qq-com.iteye.com/blog/1086373" target="_blank" rel="noopener">http://271072008-qq-com.iteye.com/blog/1086373</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>Apache Commons工具集简介<br><a href="http://www.cnblogs.com/jackyrong/archive/2006/10/15/529599.html" target="_blank" rel="noopener">http://www.cnblogs.com/jackyrong/archive/2006/10/15/529599.html</a></p><p>spring里的工具类,摘自spring3.0.5版本<br><a href="http://wen66.iteye.com/blog/830719" target="_blank" rel="noopener">http://wen66.iteye.com/blog/830719</a></p><p>——————————XXXX——————————<br>IE浏览器下同一网页多图片显示的瓶颈与优化[原创]<br><a href="http://blog.s135.com/post/332/" target="_blank" rel="noopener">http://blog.s135.com/post/332/</a></p><p>MAC下安装与配置MySQL<br><a href="http://www.cnblogs.com/macro-cheng/archive/2011/10/25/mysql-001.html" target="_blank" rel="noopener">http://www.cnblogs.com/macro-cheng/archive/2011/10/25/mysql-001.html</a></p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>人人网移动开发架构<br><a href="http://www.infoq.com/cn/articles/renren-mobile-arch" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/renren-mobile-arch</a></p><p>2010年InfoQ中文站高性能架构内容回顾：在路上<br><a href="http://www.infoq.com/cn/news/2011/01/infoq-2010-high-performance-sum" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2011/01/infoq-2010-high-performance-sum</a></p><p>百万级访问量网站的技术准备工作 (InfoQ)<br><a href="http://www.infoq.com/cn/articles/lzy-million-visits-site-technical-preparations" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/lzy-million-visits-site-technical-preparations</a></p><p>Java深度历险（一）——Java字节代码的操纵 (InfoQ)<br><a href="http://www.infoq.com/cn/articles/cf-java-byte-code" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/cf-java-byte-code</a></p><p>又拍网的网站技术架构<br><a href="http://www.dbanotes.net/arch/yupoo_arch.html" target="_blank" rel="noopener">http://www.dbanotes.net/arch/yupoo_arch.html</a></p><p>又拍网架构中的分库设计<br><a href="http://www.infoq.com/cn/articles/yupoo-partition-database" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/yupoo-partition-database</a></p><p>豆瓣网技术架构变迁<br><a href="http://www.infoq.com/cn/presentations/hongqn-douban" target="_blank" rel="noopener">http://www.infoq.com/cn/presentations/hongqn-douban</a></p><p>豆瓣网架构-国内python语言网站的王者之路<br><a href="http://www.bopor.com/?p=661" target="_blank" rel="noopener">http://www.bopor.com/?p=661</a></p><p>大型网站架构演变和知识体系<br><a href="http://www.blogjava.net/BlueDavy/archive/2008/09/03/226749.html" target="_blank" rel="noopener">http://www.blogjava.net/BlueDavy/archive/2008/09/03/226749.html</a></p><p>JSON 入门指南 (廖 雪峰 , 撰稿人) IBM<br><a href="http://www.ibm.com/developerworks/cn/web/wa-lo-json/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/web/wa-lo-json/</a></p><p>网站架构收集(csdn)<br><a href="http://blog.csdn.net/Damon_King/archive/2008/06/06/2517554.aspx" target="_blank" rel="noopener">http://blog.csdn.net/Damon_King/archive/2008/06/06/2517554.aspx</a></p><p>Spring操作blob和clob<br><a href="http://hi.baidu.com/sunjoe/blog/item/10251a33ae4871fd1a4cff33.html" target="_blank" rel="noopener">http://hi.baidu.com/sunjoe/blog/item/10251a33ae4871fd1a4cff33.html</a></p><p>调查：您的开发团队用什么项目管理软件<br><a href="http://www.cnblogs.com/cmt/archive/2011/01/10/1931861.html" target="_blank" rel="noopener">http://www.cnblogs.com/cmt/archive/2011/01/10/1931861.html</a></p><p>企业服务总线解决方案剖析，第 1 部分: 企业服务总线的基本概念<br><a href="http://www.ibm.com/developerworks/cn/webservices/ws-esb1/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/webservices/ws-esb1/</a></p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>JQuery 使用讲课PDF<br><a href="http://wenku.baidu.com/view/3a3637ebe009581b6bd9eb76.html" target="_blank" rel="noopener">http://wenku.baidu.com/view/3a3637ebe009581b6bd9eb76.html</a></p><p>web前端技术——几个比较有用的Js库<br><a href="http://home.koudai.me/space-54-do-blog-id-5713.html" target="_blank" rel="noopener">http://home.koudai.me/space-54-do-blog-id-5713.html</a></p><p>Google Web Toolkit 入门<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-gwt-intro/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-gwt-intro/index.html</a></p><p>欢迎讨论 GWT , GWT-EXT , MyGWT 等的比较–我的个人看法<br><a href="http://www.iteye.com/topic/168967" target="_blank" rel="noopener">http://www.iteye.com/topic/168967</a></p><h2 id="J2EE"><a href="#J2EE" class="headerlink" title="J2EE"></a>J2EE</h2><p>JDBC 3.0 有什么新特性<br><a href="http://www.ibm.com/developerworks/cn/java/j-jdbcnew/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-jdbcnew/</a></p><p>Servlet 3.0 实战：异步 Servlet 与 Comet 风格应用程序 IBM<br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-comet/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-comet/index.html</a></p><p>JSP/Servlet 中的汉字编码问题 IBM<br><a href="http://www.ibm.com/developerworks/cn/java/jsp_dbcsz/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/jsp_dbcsz/index.html</a></p><p>JavaScript 中的函数式编程实践 IBM<br><a href="http://www.ibm.com/developerworks/cn/web/1006_qiujt_jsfunctional/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/web/1006_qiujt_jsfunctional/index.html</a></p><p>web.xml 中的listener、 filter、servlet 加载顺序及其详解1<br><a href="http://apps.hi.baidu.com/share/detail/33614288" target="_blank" rel="noopener">http://apps.hi.baidu.com/share/detail/33614288</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些大牛的博客及技术文章，宁可十年不将军,不可一日不拱卒，所以勤奋学习技术，跟随牛逼的人脚步“忍辱负屈”，要成为一名大牛，养兵10年，有朝一日定当所向披靡，使旁人闻风丧胆，你都不去逼下自己，怎么会知道自己有多厉害，要定个小目标，例如先写写博客。&lt;/p&gt;
    
    </summary>
    
      <category term="学习方法" scheme="http://code.skyheng.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="学习方法" scheme="http://code.skyheng.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>国内外知名IT科技博客（强烈推荐）</title>
    <link href="http://code.skyheng.com/post/37438.html"/>
    <id>http://code.skyheng.com/post/37438.html</id>
    <published>2016-09-17T07:19:56.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些大牛的博客及技术文章，宁可十年不将军,不可一日不拱卒，所以勤奋学习技术，跟随牛逼的人脚步“忍辱负屈”，要成为一名大牛，养兵10年，有朝一日定当所向披靡，使旁人闻风丧胆，你都不去逼下自己，怎么会知道自己有多厉害，要定个小目标，例如先写写博客</p><a id="more"></a><h2 id="心诉"><a href="#心诉" class="headerlink" title="心诉"></a>心诉</h2><p>一个人不可能一下子成功，更不可能一步登天，所有成功与荣耀的背后是无尽的心酸。所以要想有多大的成功，那么在背后你一定要付出千倍百倍的努力才可以。我们没有理由去羡慕别人，因为同样的事你也可以做到，只不过你从一开始就没有尝试，没有努力，那么你又凭什么羡慕嫉妒别人。<br>当然，当一个人取得成功时，你会嫉妒是可以原谅的，毕竟我们不是圣人，当面对一个强大的人的时候，我们本能的会有害怕，嫉妒，这都是正常的，但如果你想要成功，光有嫉妒是不行的，是没有用的。那只会让你沉在无边的不甘中。正确的做法就是付出更多的努力，拼命地追赶那个让你嫉妒的人，<br>最后你才有可能获得成功。世上没有什么不可能，不要找借口，任何借口都不行，如果你真的这么做，不要说别人，自己也会鄙视自己。相信自己，以前进为目标，以成功为坐标，永不止步的前进。终有一天，你不会再羡慕别人，只会让别人羡慕你。</p><h2 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h2><h3 id="1、-36氪"><a href="#1、-36氪" class="headerlink" title="1、 36氪"></a>1、 <strong>36氪</strong></h3><ul><li>地址：<a href="http://www.36kr.com" target="_blank" rel="noopener">http://www.36kr.com</a></li><li>介绍：目前国内做的最风生水起的科技博客，以介绍国内外互联网创业新闻为主的博客网站，自己建立有36Tree互联网创业融投资社区。36氪的名字源于元素周期 表的第36号元素“氪”，化学符号为Kr。传说中的氪星是超人的故乡。除了为创业者免费提供新闻报道，他们主办的“36氪开放日”为早期互联网创业公司初创产品发布，提供了非常不错的平台，每月在全国各大城市举办。</li></ul><h3 id="2、Tech2IPO"><a href="#2、Tech2IPO" class="headerlink" title="2、Tech2IPO"></a>2、<strong>Tech2IPO</strong></h3><ul><li>地址：<a href="http://www.tech2ipo.com" target="_blank" rel="noopener">http://www.tech2ipo.com</a></li><li>介绍：tech2ipo 自己定位于“科技创新创业媒体”，Tech2IPO是Technology to IPO的缩写，旨在报道早期创业型公司，寻找创新性创业企业，在关注创 业企业、创业信息、创业经验的同时，还为创业者提供找人、找钱、找宣传的一条龙服务。</li></ul><h3 id="3、-互联网那点事"><a href="#3、-互联网那点事" class="headerlink" title="3、 互联网那点事"></a>3、 <strong>互联网那点事</strong></h3><ul><li>地址：<a href="http://www.alibuybuy.com" target="_blank" rel="noopener">http://www.alibuybuy.com</a></li><li>介绍：聚焦互联网前沿资讯，网络精华内容，交流产品心得！这就是互联网那点事网站的主题，这个定位还是比较宽的，不像前两个定位在创业公司新闻报道，互联网那点 事，定位在关注IT行业，互联网行业发生的新闻，关注互联网产品的设计、用户体验、营销、模式等更加实用的东西，让互联网从业人员在这里都能找到自己想要 的东西。</li></ul><h3 id="4、分享网络2-0"><a href="#4、分享网络2-0" class="headerlink" title="4、分享网络2.0"></a>4、<strong>分享网络2.0</strong></h3><ul><li>地址：<a href="http://www.showeb20.com" target="_blank" rel="noopener">http://www.showeb20.com</a></li><li>介绍：关注最具有Web2.0气质的早期创业项目，同样也是关注创业项目的科技博客，但聚焦在分享网络2.0博客上的项目，基本上都具有Web2.0气质，即更注重用户创造价值。但整个博客网站和前面几个比起来，略显单薄。</li></ul><h3 id="5、i黑马"><a href="#5、i黑马" class="headerlink" title="5、ｉ黑马"></a>5、<strong>ｉ黑马</strong></h3><ul><li>地址：<a href="http://www.iheima.com" target="_blank" rel="noopener">http://www.iheima.com</a></li><li>介绍：2012 年2月6日上线刚刚上线的一个网站平台，他一出生就有着《创业家》杂志的背景，更有着黑马基金雄厚实力作为背景，从项目发现到项目创新，再到项目报道、项 目诊断、经验分享一应俱全，最后也是最直接的，他可以向合适的团队融资，含着金钥匙出生的ｉ黑马注定要成为科技博客界的黑马，他不需要被收购，他只需要认 准了去收购其他人就可以了。</li></ul><h3 id="6、动点科技"><a href="#6、动点科技" class="headerlink" title="6、动点科技"></a>6、<strong>动点科技</strong></h3><ul><li>地址：<a href="http://cn.technode.com" target="_blank" rel="noopener">http://cn.technode.com</a></li><li>介绍：主要报道中国和亚洲的最 新科技新闻，创业公司、投资动态以及行业趋势发展，同时动点科技也非常关注也旨在引领前沿技术和商业模式，如社会化媒体，移动互联网，电子商务和增强现实 等等，动点科技不仅仅是报道，还是个很实在的招人的平台，分享的平台、不定期举行的各种会议更是创业企业不可多得的现场沟通的平台。</li></ul><h3 id="7、商业不靠谱"><a href="#7、商业不靠谱" class="headerlink" title="7、商业不靠谱"></a>7、<strong>商业不靠谱</strong></h3><ul><li>地址：<a href="http://www.bukop.com" target="_blank" rel="noopener">http://www.bukop.com</a></li><li>介绍：虽说起名叫不靠谱，但是内容还是比较靠谱的，它所报道的所有的创新性应用，都是具体分配到每个应用场景类别中去的，从政府应用到环保应用，再到零售行业， 分门别类一目了然，商业不靠谱相比较其他的关注创业的科技博客，他们更加注重创业的点子，每个报道都是点子，而对于创业公司管理、产品设计等很少问津，对 于寻找创意还是很有帮助的。</li></ul><h3 id="8、科技娲母"><a href="#8、科技娲母" class="headerlink" title="8、科技娲母"></a>8、<strong>科技娲母</strong></h3><ul><li>地址：<a href="http://www.techwom.com" target="_blank" rel="noopener">http://www.techwom.com</a></li><li>介绍：这个名字比较有特点，娲母：女娲，人类女神，科技娲母，意指孕育科技的女神。科技娲母主要关注移动互联网，从移动互联网的内容、模式、运营到产品开发管理，一应俱全，关注移动互联网的童鞋可以去看看。</li></ul><h3 id="9、雷锋网"><a href="#9、雷锋网" class="headerlink" title="9、雷锋网"></a>9、<strong>雷锋网</strong></h3><ul><li>地址：<a href="http://leiphone.com" target="_blank" rel="noopener">http://leiphone.com</a></li><li>介绍：由一群移动互联网的信徒建立，他们中有投资人，有观察者，有产品经理，有资深玩家，还有创业者。我们将客观敏锐地记录移动互联网的每一天。他的“专题”栏目，是相当有看头，用了相当的心思的。</li></ul><h3 id="10、爱范儿"><a href="#10、爱范儿" class="headerlink" title="10、爱范儿"></a>10、<strong>爱范儿</strong></h3><ul><li>地址：<a href="http://www.ifanr.com" target="_blank" rel="noopener">http://www.ifanr.com</a></li><li>介绍：爱范儿创建比较早，08年10月就上线了，09年就拿了搜狐优秀独立博客奖，目前关注移动互联网、集中报道创业团队，最潮的智能手持及最酷的互联网应用， 对业界生态、智能产品及移动应用有着深刻的理解。有一个比较有特色的栏目就是“现场”，报道各种各样发布会，现场会的动向。</li></ul><h3 id="11、月光博客"><a href="#11、月光博客" class="headerlink" title="11、月光博客"></a>11、<strong>月光博客</strong></h3><ul><li>地址：<a href="http://www.williamlong.info" target="_blank" rel="noopener">http://www.williamlong.info</a></li><li>介绍：月光这个典型性科技博客一定不能漏掉的，个人建博客赚到第一桶金的典范，是一个以讨论电脑技术和互联网科技为主的个人IT评论博客，专注于互联网络和搜索引擎行业的原创IT评论博客。</li></ul><h3 id="12、分享网络"><a href="#12、分享网络" class="headerlink" title="12、分享网络"></a>12、<strong>分享网络</strong></h3><ul><li>地址：<a href="http://shareweb.me" target="_blank" rel="noopener">http://shareweb.me</a></li><li>介绍：又一个关注互联网创业的科技博客。关注最好看，最好玩，最好用，最好听，最新奇的网站和免费信息！最大的特点是，他们只报道应用和产品，每篇文章只介绍一个网站产品，也是一个截取创意和业内动态的好去处。</li></ul><h3 id="13、网站分析在中国"><a href="#13、网站分析在中国" class="headerlink" title="13、网站分析在中国"></a>13、<strong>网站分析在中国</strong></h3><ul><li>地址：<a href="http://www.chinawebanalytics.cn" target="_blank" rel="noopener">http://www.chinawebanalytics.cn</a></li><li>介绍：关注点很有特色也很具体，是一个只关注网站分析的科技博客，网站分析的经验、工具、方法、培训一应俱全，想要了解网站分析方面的内容，可以去他们博客看看。</li></ul><h3 id="14、天涯海阁"><a href="#14、天涯海阁" class="headerlink" title="14、天涯海阁"></a>14、<strong>天涯海阁</strong></h3><ul><li>地址：<a href="http://Web20share.com" target="_blank" rel="noopener">http://Web20share.com</a></li><li>介绍：是一个关注国内外创新互联网、移动互联网初创企业的博客。致力于提供一个展示优秀互联网、移动互联网初创企业的平台。以报道新新应用为特点，唯一美中不足的是，关注２.０，但自己的博客网站设计的不那么的2.0。</li></ul><h3 id="15、小众软件"><a href="#15、小众软件" class="headerlink" title="15、小众软件"></a>15、<strong>小众软件</strong></h3><ul><li>地址：<a href="http://www.appinn.com" target="_blank" rel="noopener">http://www.appinn.com</a></li><li>介绍：聚焦于分享免费、小巧、实用、有趣、绿色的软件，很实用的一个小站点，为大家找实惠的，不用搞创业那么厚重，也不用创新那么辛苦，就是发现好用的软件，大家拿来直接用就好了。</li></ul><h3 id="16、善用佳软"><a href="#16、善用佳软" class="headerlink" title="16、善用佳软"></a>16、<strong>善用佳软</strong></h3><ul><li>地址：<a href="http://xbeta.info" target="_blank" rel="noopener">http://xbeta.info</a></li><li>介绍：善用佳软=(善意+善于)应用优秀软件。目标是分享“替代盗版，提升效率”的经验，整个博客页面看起来不像是博客网站，更像是字典网站，阅读体验不是很好，但是分类确实很细，能很快找到自己想要的软件。</li></ul><h3 id="17、Mobile-2-0"><a href="#17、Mobile-2-0" class="headerlink" title="17、Mobile 2.0"></a>17、<strong>Mobile 2.0</strong></h3><ul><li>地址：<a href="http://www.mobile20.com.cn" target="_blank" rel="noopener">http://www.mobile20.com.cn</a></li><li>介绍：创建于2008年6月，是国内一批最早关注移动互联网的科技博客。从建立之初的以Mobile Web 2.0为中心逐步转向更全面的Mobile 2.0领域。手机应用的题材均有涉及。</li></ul><h3 id="18、软件街"><a href="#18、软件街" class="headerlink" title="18、软件街"></a>18、<strong>软件街</strong></h3><ul><li>地址：<a href="http://www.softjie.cn" target="_blank" rel="noopener">http://www.softjie.cn</a></li><li>介绍：软件街-最新最全软件资讯共享平台。每天专注发布软件的最新版本更新信息，以及收录新出品软件，分享、推荐优秀软件、常用软件等。</li></ul><h3 id="19、谷奥"><a href="#19、谷奥" class="headerlink" title="19、谷奥"></a>19、<strong>谷奥</strong></h3><ul><li>地址：<a href="http://www.guao.hk" target="_blank" rel="noopener">http://www.guao.hk</a></li><li>介绍：谷奥是一个报道Google及其相关产品的资讯，提供Google产品技巧，以及Google周边新闻的专题网站，网站内90%的内容为谷奥原创编译。</li></ul><h3 id="20、黑番茄"><a href="#20、黑番茄" class="headerlink" title="20、黑番茄"></a>20、<strong>黑番茄</strong></h3><ul><li>地址：<a href="http://www.blacktomato.cn" target="_blank" rel="noopener">http://www.blacktomato.cn</a></li><li>介绍：：黑番茄专注于移动互联网创业前沿资讯，是互联网行业发展的风向标，是创业者寻找灵感的港湾，是草根创业者展示创业成果的舞台，是投资人寻觅创业项目的平台。</li></ul><h3 id="21、同步控"><a href="#21、同步控" class="headerlink" title="21、同步控"></a>21、<strong>同步控</strong></h3><ul><li>地址：<a href="http://www.syncoo.com" target="_blank" rel="noopener">http://www.syncoo.com</a></li><li>介绍：同步控是一个关注同步（Sync）技术的主题网站，专注范围涵盖：PC端同步移动设备、本地同步网络、多系统同步、多人协作、移动办公、社交网络同步等。</li></ul><h3 id="22、我爱水煮鱼"><a href="#22、我爱水煮鱼" class="headerlink" title="22、我爱水煮鱼"></a>22、<strong>我爱水煮鱼</strong></h3><ul><li>地址：<a href="http://fairyfish.net" target="_blank" rel="noopener">http://fairyfish.net</a></li><li>介绍：我爱水煮鱼是一个关注WordPress开源博客平台应用和互联网的IT博客。</li></ul><h3 id="23、IT生活笔记网"><a href="#23、IT生活笔记网" class="headerlink" title="23、IT生活笔记网"></a>23、<strong>IT生活笔记网</strong></h3><ul><li>地址：<a href="http://www.55ln.com" target="_blank" rel="noopener">http://www.55ln.com</a></li><li>介绍：IT生活笔记网主要致力于分享互联网相关技术，主要涉及网站建设、网站推广、网络营销及网络安全相关内容。</li></ul><h2 id="国外"><a href="#国外" class="headerlink" title="国外"></a>国外</h2><h3 id="1、TechCrunch"><a href="#1、TechCrunch" class="headerlink" title="1、TechCrunch"></a>1、TechCrunch</h3><ul><li>地址：<a href="http://www.techcrunch.com" target="_blank" rel="noopener">http://www.techcrunch.com</a></li><li>介绍：由大名鼎鼎的迈克尔-阿灵顿（MichaelArrington）主办，主要关注高科技，尤其是Web2.0领域的创业企业。TechCrunch本质上是一家为创业企业服务的网站。有评论认为，阿灵顿的一篇文章能够成就一家企业，或是毁掉一家企业。另一方面，阿灵顿也一直在向大公司兜售TechCrunch，曾有传言称AOL和MySpace希望收购该博客，市场对该博客的估值也达到上千万美元。从博客价值来看，TechCrunch已成为独立博客的典范，其知名撰稿人还包括ErickSchonfeld等人。</li></ul><h3 id="2、Read-Write-Web"><a href="#2、Read-Write-Web" class="headerlink" title="2、Read Write Web"></a>2、Read Write Web</h3><ul><li>地址：<a href="http://www.readwriteweb.com" target="_blank" rel="noopener">http://www.readwriteweb.com</a></li><li>介绍：由另一名知名技术博客理查德-迈克马努斯（RichardMacManus）主办。该博客通常刊登深度分析类文章，而较少消息类文章。文章范围包括互联网技术、产品、趋势及大公司动态等。相对于其他美国科技博客，该博客近来对中国互联网的关注力度明显较大。例如，该博客在较早的时候就已经提出校内、海内和开心等中国SNS网站与Facebook之间可能的冲突。</li></ul><h3 id="3、Silicon-Alley-Insider"><a href="#3、Silicon-Alley-Insider" class="headerlink" title="3、Silicon Alley Insider"></a>3、Silicon Alley Insider</h3><ul><li>地址：<a href="http://www.alleyinsider.com" target="_blank" rel="noopener">http://www.alleyinsider.com</a></li><li>介绍：相对TechCrunch和Read Write Web，Silicon AlleyInsider的创办时间较晚，为2007年7月上线。不过，既然号称“硅谷内幕者”，该博客必有自己的独到之处，即内幕和独家新闻。该博客网站上的爆料类消息明显多于同类博客，在微软收购雅虎风波等一系列大型事件中都曾有“语不惊人死不休”的表现。该博客的创办者为Kevin Ryan、DwightMerriman和Henry Blodget等三人。</li></ul><h3 id="4、O’Reilly-Radar"><a href="#4、O’Reilly-Radar" class="headerlink" title="4、O’Reilly Radar"></a>4、O’Reilly Radar</h3><ul><li>地址：<a href="http://radar.oreilly.com" target="_blank" rel="noopener">http://radar.oreilly.com</a></li><li>介绍：由“Web2.0之父”蒂姆-奥莱利（Tim O’Reilly）主办。奥莱利本人目前是O’Reilly Media公司首席执行官，近年来全力推动开源技术的发展。该博客文章并不太关注大型IT公司或产品，而是主要关注IT领域的新趋势。</li></ul><h3 id="5、GigaOm"><a href="#5、GigaOm" class="headerlink" title="5、GigaOm"></a>5、GigaOm</h3><ul><li>地址：<a href="http://gigaom.com" target="_blank" rel="noopener">http://gigaom.com</a></li><li>介绍：博客主为知名知名科技行业记者和“企业2.0”专家Om Malik。该博客主要关注新技术的发展，企业如何使用Web2.0，以及技术对经济的影响。该博客目前需代理才可访问。</li></ul><h3 id="6、ValleyWag"><a href="#6、ValleyWag" class="headerlink" title="6、ValleyWag"></a>6、ValleyWag</h3><ul><li>地址：<a href="http://valleywag.com" target="_blank" rel="noopener">http://valleywag.com</a></li><li>介绍：为Gawker媒体网络旗下博客，关注有关硅谷企业和知名人物的流言和新闻。该博客的文章风格也备受争议，其中一些不实的传言或过于尖刻的评论给企业或硅谷高管带来困扰。例如，该博客近期连续刊登文章，猛烈抨击Facebook首席运营官谢丽尔-桑德伯格。</li></ul><h3 id="7、VentureBeat"><a href="#7、VentureBeat" class="headerlink" title="7、VentureBeat"></a>7、VentureBeat</h3><ul><li>地址：<a href="http://venturebeat.com" target="_blank" rel="noopener">http://venturebeat.com</a></li><li>介绍：创办者为《圣何塞信使报》前记者MattMarshall。该博客主要跟踪全球风险投资，尤其是互联网创业企业获得风险投资的情况。该博客对中国风投市场也多有涉猎。由于《圣何塞信使报》本身就具有浓厚的硅谷气息，因此Marshall在建立VentureBeat的过程中占得先机。此外，Marshall的记者经历使该博客的文章十分类似新闻。</li></ul><h2 id="大网站旗下博客"><a href="#大网站旗下博客" class="headerlink" title="大网站旗下博客"></a>大网站旗下博客</h2><h3 id="1、BoomTown"><a href="#1、BoomTown" class="headerlink" title="1、BoomTown"></a>1、BoomTown</h3><ul><li>地址：<a href="http://kara.allthingsd.com" target="_blank" rel="noopener">http://kara.allthingsd.com</a></li><li>介绍：《华尔街日报》记者KaraSwisher的博客（也是其个人专栏）。Swisher从1997年开始就为《华尔街日报》旧金山分部工作，并与WaltMossberg一起主办了在IT业界影响力广泛的“D: All ThingsDigita”大会。Swisher与许多硅谷高管关系良好，有人将其称作Facebook首席运营官桑德伯格的“闺中密友”。Swisher的博客主要关注微软、Google、雅虎、亚马逊、eBay等大公司动态，她在微软雅虎并购战中发布了大量内幕消息，不过Swisher本人明显厌恶雅虎首席执行官杨致远。</li></ul><h3 id="2、Bits"><a href="#2、Bits" class="headerlink" title="2、Bits"></a>2、Bits</h3><ul><li>地址：<a href="http://bits.blogs.nytimes.com" target="_blank" rel="noopener">http://bits.blogs.nytimes.com</a></li><li>介绍：《纽约时报》旗下博客。较为关注IT企业在数字时代中的发展、盈利情况。报道范围包括创业企业、大型企业、政府政策，以及技术在全球市场的应用。</li></ul><h3 id="3、The-Tech-Beat"><a href="#3、The-Tech-Beat" class="headerlink" title="3、The Tech Beat"></a>3、The Tech Beat</h3><ul><li>地址：<a href="http://www.businessweek.com/the_thread/techbeat" target="_blank" rel="noopener">http://www.businessweek.com/the_thread/techbeat</a></li><li>介绍：《商业周刊》旗下博客，由多名《商业周刊》记者联合撰稿。关注科技新闻事件背后的真相，以及对新闻事件的分析。该博客是主流的媒体技术博客之一，报道范围包括苹果、Google、英特尔等市场领头羊动态，以及Facebook等新兴领袖。</li></ul><h3 id="4、Between-the-Lines"><a href="#4、Between-the-Lines" class="headerlink" title="4、Between the Lines"></a>4、Between the Lines</h3><ul><li>地址：<a href="http://blogs.zdnet.com/BTL" target="_blank" rel="noopener">http://blogs.zdnet.com/BTL</a></li><li>介绍：ZDNet旗下博客，主要关注大公司的动态，例如微软、英特尔、苹果等。三名撰稿人分别是Larry Dignan、Sam Diaz和TomSteinert-Threlkeld。其中，Dignan是ZDNet总编辑，Diaz是ZDNet高级编辑，而Steinert-Threlkeld是拥有20多年经验的IT行业记者。这也使得该博客文章拥有相当的权威性。</li></ul><h3 id="5、The-Social"><a href="#5、The-Social" class="headerlink" title="5、The Social"></a>5、The Social</h3><ul><li>地址：<a href="http://news.cnet.com/the-social" target="_blank" rel="noopener">http://news.cnet.com/the-social</a></li><li>介绍：CNET旗下博客，博客主为纽约人Caroline McCarthy。McCarthy认为网络应当能够帮助人们的日常生活，因此Twitter、Facebook等社区网站是该博客的关注重点。她同样关注纽约当地独特的互联网文化。</li></ul><h3 id="6、Beyond-Binary"><a href="#6、Beyond-Binary" class="headerlink" title="6、Beyond Binary"></a>6、Beyond Binary</h3><ul><li>地址：<a href="http://news.cnet.com/beyond-binary" target="_blank" rel="noopener">http://news.cnet.com/beyond-binary</a></li><li>介绍：同样为CNET旗下博客，博客主为CNET编辑Ina Fried。在CNET任职期间，Fried曾做过变性手术。该博客主要关注技术如何改变生活，并且尤其关注微软的动态。</li></ul><h2 id="半新闻网站半博客"><a href="#半新闻网站半博客" class="headerlink" title="半新闻网站半博客"></a>半新闻网站半博客</h2><h3 id="1、ArsTechnica"><a href="#1、ArsTechnica" class="headerlink" title="1、ArsTechnica"></a>1、ArsTechnica</h3><ul><li>地址：<a href="http://arstechnica.com/index.ars" target="_blank" rel="noopener">http://arstechnica.com/index.ars</a></li><li>介绍：该网站名是一个拉丁文词组，意味“科技的艺术”。该网站致力于原创性的IT新闻和评论，以及对科技趋势的深度分析。ArsTechnica创立于1998年，创始人为Ken Fisher。该网站于今年5月被媒体公司Condé Nast Publications收购。</li></ul><h3 id="2、The-Register"><a href="#2、The-Register" class="headerlink" title="2、The Register"></a>2、The Register</h3><ul><li>地址：<a href="http://www.theregister.co.uk" target="_blank" rel="noopener">http://www.theregister.co.uk</a></li><li>介绍：一家英国的科技新闻网站，其新闻类似于博客。该网站于1994年由John Lettice 和Mike Magee两人创建，最初通过电子邮件提供科技新闻通讯。该网站的文章充满英国式的讽刺色彩，例如经常将Google称为“全球最大的文字广告代理商”。</li></ul><h3 id="3、WebProNews"><a href="#3、WebProNews" class="headerlink" title="3、WebProNews"></a>3、WebProNews</h3><ul><li>地址：<a href="http://www.webpronews.com" target="_blank" rel="noopener">http://www.webpronews.com</a></li><li>介绍：WebProNews是一家主要关注互联网商务和搜索引擎的网站，内容包括搜索引擎优化、搜索引擎营销、社会媒体营销、广告和网络品牌等。值得一提的是，该网站常常会援引来自各个研究机构的互联网市场发展报告，并对报告进行分析。不过，该网站在许多日常新闻的报道方面时效性较差。</li></ul><h3 id="4、Techdirt"><a href="#4、Techdirt" class="headerlink" title="4、Techdirt"></a>4、Techdirt</h3><ul><li>地址：<a href="http://www.techdirt.com" target="_blank" rel="noopener">http://www.techdirt.com</a></li><li>介绍：该网站创建于1997年。据Techdirt自己的介绍，该网站雇佣了一批来自科技、通信和媒体等行业的分析师，提供信息时代一切有用的资讯。作为互联网泡沫的幸存者，Techdirt还保留着Web1.0时代的许多特征。实际上，该网站更像是一个IT论坛，其上的文章通常不会太长，感情色彩明显。其文章主题范围很广。</li></ul><h3 id="5、Search-Engine-Land"><a href="#5、Search-Engine-Land" class="headerlink" title="5、Search Engine Land"></a>5、Search Engine Land</h3><ul><li>地址：<a href="http://searchengineland.com" target="_blank" rel="noopener">http://searchengineland.com</a></li><li>介绍：致力于报道搜索引擎领域发展的博客，博客主为拥有11年搜索引擎报道经验的记者Danny Sullivan。该博客内容包括搜索引擎营销、搜索相关问题及搜索引擎产业等。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些大牛的博客及技术文章，宁可十年不将军,不可一日不拱卒，所以勤奋学习技术，跟随牛逼的人脚步“忍辱负屈”，要成为一名大牛，养兵10年，有朝一日定当所向披靡，使旁人闻风丧胆，你都不去逼下自己，怎么会知道自己有多厉害，要定个小目标，例如先写写博客&lt;/p&gt;
    
    </summary>
    
      <category term="学习方法" scheme="http://code.skyheng.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="学习方法" scheme="http://code.skyheng.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse常用插件安装</title>
    <link href="http://code.skyheng.com/post/59806.html"/>
    <id>http://code.skyheng.com/post/59806.html</id>
    <published>2016-08-29T08:47:43.000Z</published>
    <updated>2018-03-20T14:51:22.147Z</updated>
    
    <content type="html"><![CDATA[<p>在java开发过程中会使用到很多的eclipse的插件，在你下载一个新的eclipse版本后，你会去增强你的eclipse的功能，会去安装插件，但是每次安装起插件来都是在网上到处找链接，还有很多的链接是失效的，在这里我记录一些我安装插件过程中的一些链接及介绍。</p><a id="more"></a><p><img src="http://img.skyheng.com/picture/2016/eclipse.jpg" alt="eclipse"></p><h2 id="Eclipse插件"><a href="#Eclipse插件" class="headerlink" title="Eclipse插件"></a>Eclipse插件</h2><p>开发过程中的常用Eclipse插件，按字母排序：</p><h3 id="1-AmaterasUML"><a href="#1-AmaterasUML" class="headerlink" title="(1)AmaterasUML"></a>(1)AmaterasUML</h3><ul><li>介绍：Eclipse的UML插件，支持UML活动图，class图，sequence图，usecase图等；支持与Java class/interface之间的相互导入导出。</li><li>官方网站：<a href="http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=AmaterasUML" target="_blank" rel="noopener">http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=AmaterasUML</a></li><li>插件下载URL：<a href="http://sourceforge.jp/projects/amateras/downloads/56447/AmaterasUML_1.3.4.zip/" target="_blank" rel="noopener">http://sourceforge.jp/projects/amateras/downloads/56447/AmaterasUML_1.3.4.zip/</a>  （目前最新版本）</li><li>注：安装时需要GEF插件的支持。</li></ul><h3 id="2-Bravo-JSP"><a href="#2-Bravo-JSP" class="headerlink" title="(2)Bravo JSP"></a>(2)Bravo JSP</h3><ul><li>介绍：Bravo JSP编辑器是一款WYSIWYG（所见即所得的）JSP/html页面编辑器。Code Editor(代码编辑器)与Eclipse Web Tools的JSP编辑器相同，所以支持代码建议，代码模板和其它相同的功能。可视化部分：支持CSS样式、图片、JSP表达式/标签库/标签文件、外部included的文件。改变HTML/CSS/JSP代码可以立即看到效果。提供DOM查找/替换对话框。JSTL的变量查看功能。</li><li>官方网站：<a href="http://bravo.comxa.com/index.php" target="_blank" rel="noopener">http://bravo.comxa.com/index.php</a></li><li>Eclipse在线安装URL：<a href="http://bravo.comxa.com/update" target="_blank" rel="noopener">http://bravo.comxa.com/update</a></li></ul><h3 id="3-Checkstyle"><a href="#3-Checkstyle" class="headerlink" title="(3)Checkstyle"></a>(3)Checkstyle</h3><ul><li>介绍：CheckStyle是SourceForge下的一个项目，提供了一个帮助JAVA开发人员遵守某些编码规范的工具。它能够自动化代码规范检查过程，从而使得开发人员从这项重要，但是枯燥的任务中解脱出来。CheckStyle检验的主要内容有：Javadoc注释、命名约定、标题、import语句、体积大小、空白、修饰符、块、代码问题、类设计以及混合检查（包括一些有用的比如非必须的System.out和printstackTrace）等。</li><li>官方网站：<a href="http://checkstyle.sourceforge.net/" target="_blank" rel="noopener">http://checkstyle.sourceforge.net/</a></li><li>Eclipse在线安装URL：<a href="http://eclipse-cs.sourceforge.net/update/" target="_blank" rel="noopener">http://eclipse-cs.sourceforge.net/update/</a></li></ul><h3 id="4-Easy-Explorer"><a href="#4-Easy-Explorer" class="headerlink" title="(4)Easy Explorer"></a>(4)Easy Explorer</h3><ul><li>介绍：如果你经常需要在Eclipse里打开相关资源文件所在的文件夹，比较麻烦，要右键，属性，在Location一栏中把所在的文件夹拷贝一下，然后再去资源管理器里输入这个路径，回车，然后打开它，比较麻烦。Easy Explorer是一个Eclipse的小插件，它能直接打开选中文件所在的目录，很方便好用.</li><li>官方网站：<a href="http://sourceforge.net/projects/easystruts/" target="_blank" rel="noopener">http://sourceforge.net/projects/easystruts/</a></li></ul><h3 id="5-EasySQL"><a href="#5-EasySQL" class="headerlink" title="(5)EasySQL"></a>(5)EasySQL</h3><ul><li>介绍：EasySQL:Eclipse SQL插件。包含SQL编辑器和执行器,表格编辑器，数据导出工具。EasySQL设计成易于与其它插件相集成。如果在你的项目中需要数据库<br>操作功能，可以考虑该插件。</li><li>官方网站：<a href="http://easysql.sourceforge.net/" target="_blank" rel="noopener">http://easysql.sourceforge.net/</a></li><li>插件下载URL：<a href="http://sourceforge.net/projects/easysql/files/latest/download?source=files" target="_blank" rel="noopener">http://sourceforge.net/projects/easysql/files/latest/download?source=files</a></li></ul><h3 id="6-EclEmma"><a href="#6-EclEmma" class="headerlink" title="(6)EclEmma"></a>(6)EclEmma</h3><ul><li>介绍：提到 EclEmma 首先就要说到著名的 Java 覆盖测试工具 Emma。从某种程度上说，EclEmma 可以看作是 Emma 的一个图形界面。EclEmma的出现弥补了 Emma 用户一个大的遗憾 —- 缺乏图形界面以及对集成开发环境的支持。将 Eclipse 和 Emma 这两个在各自领域最为优秀的工具结合起来，这就是 EclEmma 为我们提供的。</li><li>官方网站：<a href="http://www.eclemma.org/" target="_blank" rel="noopener">http://www.eclemma.org/</a></li><li>Eclipse在线安装URL：<a href="http://update.eclemma.org/" target="_blank" rel="noopener">http://update.eclemma.org/</a></li></ul><h3 id="7-Eclipse-SWT-Designer-Plugin"><a href="#7-Eclipse-SWT-Designer-Plugin" class="headerlink" title="(7)Eclipse SWT Designer Plugin"></a>(7)Eclipse SWT Designer Plugin</h3><ul><li>介绍：Eclipse SWT Designer Plugin是一个用于快速构建J2SE的桌面化GUI开发的Eclipse插件。</li><li>官方网站：<a href="http://sourceforge.net/projects/eclipsedesigner/" target="_blank" rel="noopener">http://sourceforge.net/projects/eclipsedesigner/</a></li><li>插件下载URL：<a href="http://sourceforge.net/projects/eclipsedesigner/files/latest/download" target="_blank" rel="noopener">http://sourceforge.net/projects/eclipsedesigner/files/latest/download</a></li></ul><h3 id="8-FindBugs"><a href="#8-FindBugs" class="headerlink" title="(8)FindBugs"></a>(8)FindBugs</h3><ul><li>介绍：Findbugs 是一个静态分析工具，它检查类或者 JAR 文件，将字节码与一组缺陷模式进行对比以发现可能的问题。了静态分析工具，就可以在不实际运行程序的情况对软件进行分析。它可以帮助改进代码的质量。它是寻找代码缺陷的，很多我们写的不好的地方，可以优化的地方，它都能检查出来。例如：未关闭的数据库连接，缺少必要的null check，多余的 null check，多余的if后置条件，相同的条件分支，重复的代码块，错误的使用了”==”，不同数据类型的比较，建议使用StringBuffer代替字符串连加等等。</li><li>官方网站：<a href="http://findbugs.sourceforge.net/" target="_blank" rel="noopener">http://findbugs.sourceforge.net/</a></li><li>Eclipse在线安装URL：<a href="http://findbugs.cs.umd.edu/eclipse" target="_blank" rel="noopener">http://findbugs.cs.umd.edu/eclipse</a> </li></ul><h3 id="9-FreeMarker-IDE"><a href="#9-FreeMarker-IDE" class="headerlink" title="(9)FreeMarker IDE"></a>(9)FreeMarker IDE</h3><p>介绍：FreeMarker IDE是一个FreeMarker(模板引擎)感知编辑器，支持：语法高亮显示(Syntax Hilighting)、内容辅助(Content Assist)、大纲视图(Outline View)。其主页上提供了如何使用该插件进行开发的Flash视频。FreeMarker还有另外一个插件FreeMarker Eclipse Plugin。<br>官方网站：<a href="http://freemarker-ide.sourceforge.net/" target="_blank" rel="noopener">http://freemarker-ide.sourceforge.net/</a><br>插件下载URL：<a href="http://sourceforge.net/projects/freemarker-ide/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/freemarker-ide/files/</a></p><h3 id="10-Spket"><a href="#10-Spket" class="headerlink" title="(10)Spket"></a>(10)Spket</h3><ul><li>介绍：Spket IDE是功能强大的JavaScript 和XML开发工具包。这个强大的编辑器可以进行JavaScript、XUL/XBL以及Yahoo! Widget开发。其中JavaScript编辑器具有代码完成（code completion）、语法标记以及内容概览等功能，协助开发人员创建高效的JavaScript代码。</li><li>官方网站：<a href="http://www.spket.com" target="_blank" rel="noopener">http://www.spket.com</a></li><li>Eclipse在线安装URL：<a href="http://www.agpad.com/update" target="_blank" rel="noopener">http://www.agpad.com/update</a></li></ul><h3 id="11-JadClipse"><a href="#11-JadClipse" class="headerlink" title="(11)JadClipse"></a>(11)JadClipse</h3><ul><li>介绍：JadClipse是一个Eclipse插件,无缝地集成了Jad(快速Java反编译器)与Eclipse。通常,当打开一个类文件，类文件查看器将显示一个简短的API类的轮廓。如果你安装这个插件,JadClipse类文件查看器将替换类文件查看器并显示了类的反编译源代码。这个任务可以通过在后台使用Jad反编译相应的类文件来完成。可以支持正常的Java语法高亮以及大纲视图。</li><li>官方网站：<a href="http://sourceforge.net/projects/jadclipse/" target="_blank" rel="noopener">http://sourceforge.net/projects/jadclipse/</a></li><li>Eclipse在线安装URL：<a href="http://feeling.sourceforge.net/update" target="_blank" rel="noopener">http://feeling.sourceforge.net/update</a></li></ul><h3 id="12-Javascript-Debug-Toolkit"><a href="#12-Javascript-Debug-Toolkit" class="headerlink" title="(12)Javascript Debug Toolkit"></a>(12)Javascript Debug Toolkit</h3><ul><li>介绍：JSDT(Javascript Debug Toolkit)是一个用于javascript调试的Eclipse 插件，用于调试javascript。JSDT可以跨浏览器调试，支持在IE,Firefox,Safari,Chrome等主流浏览器中调试javascript。JSDT支持设置断点，单步调试等调试工具的基本特性。</li><li>官方网站：<a href="http://code.google.com/p/jsdt/" target="_blank" rel="noopener">http://code.google.com/p/jsdt/</a></li><li>Eclipse在线安装URL：<a href="http://jsdt.googlecode.com/svn/trunk/org.ayound.js.debug.update" target="_blank" rel="noopener">http://jsdt.googlecode.com/svn/trunk/org.ayound.js.debug.update</a></li></ul><h3 id="13-Mybatis-Editor"><a href="#13-Mybatis-Editor" class="headerlink" title="(13)Mybatis Editor"></a>(13)Mybatis Editor</h3><ul><li>介绍：MyBatis Editor是一个Eclipse的插件，用来编辑MyBatis的配置文件。</li><li>官方网站：<a href="http://code.google.com/a/eclipselabs.org/p/mybatiseditor/" target="_blank" rel="noopener">http://code.google.com/a/eclipselabs.org/p/mybatiseditor/</a></li><li>Eclipse在线安装URL：<a href="http://mybatiseditor.eclipselabs.org.codespot.com/git/org.eclipselabs.mybatiseditor.updatesite" target="_blank" rel="noopener">http://mybatiseditor.eclipselabs.org.codespot.com/git/org.eclipselabs.mybatiseditor.updatesite</a></li></ul><h3 id="14-MAT"><a href="#14-MAT" class="headerlink" title="(14)MAT"></a>(14)MAT</h3><ul><li>介绍：Eclipse Memory Analyzer（MAT）是著名的跨平台集成开发环境 Eclipse Galileo 版本的 33 个组成项目中之一，它是一个功能丰富的JAVA 堆转储文件分析工具，可以帮助你发现内存漏洞和减少内存消耗。对于大型 JAVA 应用程序来说，再精细的测试也难以堵住所有的漏洞，即便我们在测试阶段进行了大量卓有成效的工作，很多问题还是会在生产环境下暴露出来，并且很难在测试环境中进行重现。JVM 能够记录下问题发生时系统的部分运行状态，并将其存储在堆转储 (Heap Dump) 文件中，从而为我们分析和诊断问题提供了重要的依据。</li><li>官方网站：<a href="http://www.eclipse.org/mat/" target="_blank" rel="noopener">http://www.eclipse.org/mat/</a></li><li>Eclipse在线安装URL：<a href="http://download.eclipse.org/mat/1.2/update-site/" target="_blank" rel="noopener">http://download.eclipse.org/mat/1.2/update-site/</a></li></ul><h3 id="15-m2eclipse"><a href="#15-m2eclipse" class="headerlink" title="(15)m2eclipse"></a>(15)m2eclipse</h3><ul><li>介绍：这是一个在Eclipse环境中集成的Maven插件。 </li><li>官方网站：<a href="http://www.sonatype.org/m2eclipse/" target="_blank" rel="noopener">http://www.sonatype.org/m2eclipse/</a></li><li>Eclipse在线安装URL： <a href="http://m2eclipse.sonatype.org/sites/m2e" target="_blank" rel="noopener">http://m2eclipse.sonatype.org/sites/m2e</a></li><li>m2eclipse最新可用地址：<a href="http://download.eclipse.org/technology/m2e/releases" target="_blank" rel="noopener">http://download.eclipse.org/technology/m2e/releases</a></li></ul><h3 id="16-PatternBox"><a href="#16-PatternBox" class="headerlink" title="(16)PatternBox"></a>(16)PatternBox</h3><ul><li>介绍：PatternBox是一个Java设计模式编辑器。它提供一个基于模板的代码生成器。这个基于XML的模板机制使得你能够定义自己的代码模板。PatternBox当前能够为16种GoF设计模式生成代码。</li><li>官方网站：<a href="http://www.patternbox.com/" target="_blank" rel="noopener">http://www.patternbox.com/</a></li><li>插件下载URL：<a href="http://www.patternbox.com/eclipse-plugin.html" target="_blank" rel="noopener">http://www.patternbox.com/eclipse-plugin.html</a></li></ul><h3 id="17-PMD"><a href="#17-PMD" class="headerlink" title="(17)PMD"></a>(17)PMD</h3><ul><li>介绍：PMD是一种开源分析Java代码错误的工具。与其他分析工具不同的是，PMD通过静态分析获知代码错误。也就是说，在不运行Java程序的情况下报告错误。PMD附带了许多可以直接使用的规则，利用这些规则可以找出Java源程序的许多问题。此外，用户还可以自己定义规则，检查Java代码是否符合某些特定的编码规范。PMD是一款采用BSD协议发布的Java程序代码检查工具。该工具可以做到检查Java代码中是否含有未使用的变量、是否含有空的抓取块、是否含有不必要的对象等。该软件功能强大，扫描效率高，是Java程序员debug的好帮手。 </li><li>官方网站：<a href="http://pmd.sourceforge.net/" target="_blank" rel="noopener">http://pmd.sourceforge.net/</a></li><li>Eclipse在线安装URL：<a href="http://pmd.sf.net/eclipse" target="_blank" rel="noopener">http://pmd.sf.net/eclipse</a></li></ul><h3 id="18-Properties-Editor"><a href="#18-Properties-Editor" class="headerlink" title="(18)Properties Editor"></a>(18)Properties Editor</h3><ul><li>介绍：Properties Editor 编辑java的属性文件，并可以自动存盘为Unicode格式。</li><li>官方网站：<a href="http://propedit.sourceforge.jp/index_en.html" target="_blank" rel="noopener">http://propedit.sourceforge.jp/index_en.html</a></li><li>Eclipse在线安装URL：<a href="http://propedit.sourceforge.jp/eclipse/updates/" target="_blank" rel="noopener">http://propedit.sourceforge.jp/eclipse/updates/</a></li></ul><h3 id="19-Regex-Util"><a href="#19-Regex-Util" class="headerlink" title="(19)Regex Util"></a>(19)Regex Util</h3><ul><li>介绍：正则表达式测试插件。它能够高亮显示正则表达式语法、括号匹配、错误检测。能够提醒正则表达式的功能详细描述等。</li><li>官方网站：<a href="http://myregexp.com/eclipsePlugin.html" target="_blank" rel="noopener">http://myregexp.com/eclipsePlugin.html</a></li><li>Eclipse在线安装URL：<a href="http://regex-util.sourceforge.net/update/" target="_blank" rel="noopener">http://regex-util.sourceforge.net/update/</a></li></ul><h3 id="20-Smelly"><a href="#20-Smelly" class="headerlink" title="(20)Smelly"></a>(20)Smelly</h3><ul><li>介绍：Smelly这个插件能够自动探测Java代码中的Bad Smells。Smelly在软件开发中非常有用，它当前能够探测以下这些Bad Smells：</li></ul><ol><li>Data Class(纯数据类)：Class只有fields或get/set属性，没有任何行为。</li><li>Large Class(庞大的类)：单一类做过多的事情。</li><li>Long Method(过长的Method)：过长的代码会使得Method难以理解和维护，应该将该Method分解成多个独立功能的Method。</li><li>High Comment Density(过多的注释)：注释过多意味着该段代码难于理解。</li><li>Long Parameters List(过长的参数列表)：一个Method中传入过长的参数列表，使得参数列难以理解。修改参数列时将会使得参数前后不一致。</li><li>Switch Statements(Switch语句)：同样的Switch语句出现在不同的方法或不同的Class中，这样当需要增加新的CASE分支或者修改CASE分支内语句时，就必须找到所有的地方，然后进行修改。 </li></ol><ul><li>官方网站：<a href="http://smelly.sourceforge.net/english.html" target="_blank" rel="noopener">http://smelly.sourceforge.net/english.html</a></li><li>插件下载URL：<a href="http://smelly.sourceforge.net/download2.html" target="_blank" rel="noopener">http://smelly.sourceforge.net/download2.html</a></li></ul><h3 id="21-SpringIDE"><a href="#21-SpringIDE" class="headerlink" title="(21)SpringIDE"></a>(21)SpringIDE</h3><ul><li>介绍：Spring IDE是一系列Eclipse插件，目的开发基于Spring的应用。Spring IDE增强了普通Eclipse IDE自带工具构建基于Spring的应用程序的能力。它使你的Eclipse IDE能够感知Spring，并给各种不同类型的Spring相关构件（Spring配置文件，Spring注解等）添加代码完成，验证，内容辅助，快速修复等功能。它也包含了对重构、Spring自动装配、Spring AOP和AspectJ、Spring Batch、Spring集成、Spring Security以及Spring WebFlow的支持，并集成了Eclipse Mylyn。它同时还包含了Spring UAA（用户代理分析），帮助我们收集一些使用数据的一个可选组件。这是完全匿名的，并且有助于我们更好地理解如何使用工具，如何在未来改进它。它还附带了SpringSource面板这个可选组件，可以给你带来有关SpringSource相关项目的最新信息以及一个易于使用的扩展安装来为Eclipse集成像VMware vFabric TC Server或Cloud Foundry这样的额外的工具附加组件。</li><li>官方网站：<a href="https://github.com/SpringSource/spring-ide" target="_blank" rel="noopener">https://github.com/SpringSource/spring-ide</a></li><li>Eclipse在线安装URL：</li><li><a href="http://dist.springsource.com/release/TOOLS/update/e4.2" target="_blank" rel="noopener">http://dist.springsource.com/release/TOOLS/update/e4.2</a> (for Eclipse Juno 4.2)</li><li><a href="http://dist.springsource.com/release/TOOLS/update/e3.7" target="_blank" rel="noopener">http://dist.springsource.com/release/TOOLS/update/e3.7</a> (for Eclipse Indigo 3.7)</li><li><a href="http://dist.springsource.com/release/TOOLS/update/e3.6" target="_blank" rel="noopener">http://dist.springsource.com/release/TOOLS/update/e3.6</a> (for Eclipse Helios 3.6) </li></ul><h3 id="22-StrutsIDE"><a href="#22-StrutsIDE" class="headerlink" title="(22)StrutsIDE"></a>(22)StrutsIDE</h3><ul><li>介绍：Struts开发辅助工具。提供struts-config.xml的图形编辑界面；提供Action, ActionForm, JSP等的创建向导。</li><li>官方网站：<a href="http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=StrutsIDE" target="_blank" rel="noopener">http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=StrutsIDE</a></li><li>插件下载URL：<a href="http://sourceforge.jp/projects/amateras/downloads/48176/tk.eclipse.plugin.struts_2.0.7.jar/" target="_blank" rel="noopener">http://sourceforge.jp/projects/amateras/downloads/48176/tk.eclipse.plugin.struts_2.0.7.jar/</a></li></ul><h3 id="23-Subclipse"><a href="#23-Subclipse" class="headerlink" title="(23)Subclipse"></a>(23)Subclipse</h3><ul><li>介绍：Subclipse 是一个为 Eclipse IDE 添加 Subversion 支持的项目。支持几乎所有版本的Eclipse。</li><li>官方网站：<a href="http://subclipse.stage.tigris.org/" target="_blank" rel="noopener">http://subclipse.stage.tigris.org/</a></li><li>Eclipse在线安装URL：</li><li><a href="http://subclipse.tigris.org/update_1.6.x" target="_blank" rel="noopener">http://subclipse.tigris.org/update_1.6.x</a></li><li><a href="http://subclipse.tigris.org/update_1.8.x" target="_blank" rel="noopener">http://subclipse.tigris.org/update_1.8.x</a> (支持Subversion 1.7.x)</li><li><a href="http://subclipse.tigris.org/update_1.10.x" target="_blank" rel="noopener">http://subclipse.tigris.org/update_1.10.x</a></li></ul><h3 id="24-XMLBuddy"><a href="#24-XMLBuddy" class="headerlink" title="(24)XMLBuddy"></a>(24)XMLBuddy</h3><ul><li>介绍：一个XML的Eclipse插件，支持XML，DTD，XML Schema，XSLT等。XMLBuddy分了2个版本，一个是免费的，XMLBuddy Pro是收费的。</li><li>官方网站：<a href="http://www.xmlbuddy.com/" target="_blank" rel="noopener">http://www.xmlbuddy.com/</a>  </li></ul><h3 id="25-ER-Master"><a href="#25-ER-Master" class="headerlink" title="(25)ER Master"></a>(25)ER Master</h3><ul><li>介绍：ER Master 是一个用于设计ER模型图的Eclipse插件。提供的功能包括：从数据库导入关系生成ER图，导出设计图，导出DDL数据定义语句等。目前完整支持的数据库包括 MySQL、PostgreSQL 和Oracle (developing)、DB2 (developing)、HSQLDB (developing)、SQLITE (developing)、SQLServer (developing)</li><li>官方网站：<a href="http://ermaster.sourceforge.net/" target="_blank" rel="noopener">http://ermaster.sourceforge.net/</a></li><li>插件下载URL：<a href="http://ermaster.sourceforge.net/update-site/" target="_blank" rel="noopener">http://ermaster.sourceforge.net/update-site/</a></li><li>ERMaster下载地址：<a href="http://sourceforge.net/projects/ermaster/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/ermaster/files/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在java开发过程中会使用到很多的eclipse的插件，在你下载一个新的eclipse版本后，你会去增强你的eclipse的功能，会去安装插件，但是每次安装起插件来都是在网上到处找链接，还有很多的链接是失效的，在这里我记录一些我安装插件过程中的一些链接及介绍。&lt;/p&gt;
    
    </summary>
    
      <category term="eclipse" scheme="http://code.skyheng.com/categories/eclipse/"/>
    
      <category term="plugin" scheme="http://code.skyheng.com/categories/eclipse/plugin/"/>
    
    
      <category term="eclipse" scheme="http://code.skyheng.com/tags/eclipse/"/>
    
      <category term="plugin" scheme="http://code.skyheng.com/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse安装JRebel6.4.8热部署插件教程</title>
    <link href="http://code.skyheng.com/post/33906.html"/>
    <id>http://code.skyheng.com/post/33906.html</id>
    <published>2016-08-25T15:19:19.000Z</published>
    <updated>2018-03-20T14:51:22.257Z</updated>
    
    <content type="html"><![CDATA[<p>我们用eclipse开发时经常遇到一个麻烦的问题是修改类文件后需重启tomcat才能生效，即使使用一些tomcat插件，有时修改了方法名或添加了类，也需要重启。使用获得jolt大奖的作品jrebel，就能轻松实现 jvm热部署，Rebel 可快速实现Tomcat的热部署，最为强大的是支持Spring注解的热部署，这样就能节省大量的服务器重启时间，提高了个人开发效率。JRebel支持Eclipse和IntelliJ IDEA，下面分别从两个IDE介绍JRebel的安装方法，如有错误或遗漏，欢迎指出。PS: 改properties\xml无效，这是要手动重启的。 </p><a id="more"></a><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><h3 id="1-Eclipse安装JRebel"><a href="#1-Eclipse安装JRebel" class="headerlink" title="1.Eclipse安装JRebel"></a>1.Eclipse安装JRebel</h3><ul><li>JRebel官网地址：<a href="https://manuals.zeroturnaround.com/jrebel/index.html" target="_blank" rel="noopener">https://manuals.zeroturnaround.com/jrebel/index.html</a></li><li>Eclipse插件在线安装地址：<a href="http://update.zeroturnaround.com/update-site/" target="_blank" rel="noopener">http://update.zeroturnaround.com/update-site/</a></li><li>添加插件在线安装地址到Eclipse，然后选择安装  JRebel for Java EE，重启之后设置里会出现  Jrebel的选项，说明安装成功。<h4 id="破解：Crack"><a href="#破解：Crack" class="headerlink" title="破解：Crack:"></a>破解：Crack:</h4></li></ul><ol><li>使用授权服务器：Help &gt; JRebel Activation &gt; I already have a license &gt; Connect to License Server</li></ol><ul><li>Group URL 填写：<a href="http://idea.lanyus.com/{username}" target="_blank" rel="noopener">http://idea.lanyus.com/{username}</a>  (用任意用户名替换 {username})，Email 随意。</li></ul><ol><li>手动：打开Eclipse目录：plugins/org.zeroturnaround.eclipse.embedder_*<br>分别替换 jrebel，jr6/jrebel 文件夹里的jar文件为破解后的jar文件，将证书放到用户文件夹的 .jrebel 文件夹下，例如 ~/.jrebel/。<br>回到Eclipse，选择Help -&gt; JRebel Configuration 打开jrebel的配置中心，到Advance里设置JRebel agent为JRebel 6 Agent。<br>如果Jrebel提示没激活，请手动选择一下注册证书的路径。<br>设置好之后，在已有项目上右键 -&gt; Jrebel -&gt; Add Jrebel Nature，然后源码目录就会生成一个  rebel.xml 文件，设置成功。</li></ol><h3 id="2-IntelliJ-IDEA安装JRebel插件："><a href="#2-IntelliJ-IDEA安装JRebel插件：" class="headerlink" title="2.IntelliJ IDEA安装JRebel插件："></a>2.IntelliJ IDEA安装JRebel插件：</h3><p>以下步骤基于IntelliJ IDEA 16，其他版本大同小异。</p><ul><li>File -&gt; Settings -&gt; Plugins -&gt; Browse repositories…查找 JRebel for Intellij 并安装。<h4 id="破解：Crack-1"><a href="#破解：Crack-1" class="headerlink" title="破解：Crack:"></a>破解：Crack:</h4></li></ul><ol><li>使用第三方授权服务器：</li></ol><ul><li><img src="http://img.skyheng.com/picture/2016/jrebel/jrebel.png" alt="JRebel"></li><li>还是那句话，如果JRebel给你节约了大量时间，而你又的确喜欢这款软件，请买正版支持一下。</li></ul><ol><li>手动：<br>打开插件目录：C:/Users/&lt;当前用户&gt;/.IntelliJIdea16/config/plugins/jr-ide-idea/lib，或者 ~/.IntelliJIdea16/config/plugins/jr-ide-idea/lib。<br>分别替换 jrebel 和 jrebel6 里边的jar文件为破解后的jar文件，并将注册证书放到 C:/Users/&lt;当前用户&gt;/.jrebel/ 文件夹下，或者 ~/.jrebel/。<br>回到IntelliJ IDEA：File -&gt; Settings -&gt; JRebel，确认一下注册状态，然后到 Advanced 选择JRebel 6 Agent。</li></ol><ul><li>使用方法：在当前项目上右键 -&gt; JRebel -&gt; rebel.xml 来生成 rebel.xml 文件，或者在IntelliJ左下角，选择JRebel选项卡，将第一个勾上即可。（不做这步也可以）</li><li><img src="http://img.skyheng.com/picture/2016/jrebel/jrebel-modules.png" alt="JRebel"></li><li>Run -&gt; Edit Configurations…，设置On ‘Update action’ 和 On firame deactivation。</li><li><img src="http://img.skyheng.com/picture/2016/jrebel/run-jrebel.png" alt="JRebel"></li></ul><blockquote><p>PS:官方文档里边给出的是分别设置为“Restart server”和“Do nothing”，但是需要手动编译才能自动部署。我推荐设置为如下图，当IDEA失去焦点的时候会自动编译并重新部署，更方便。</p><ul><li>IntelliJ安装JRebel官方教程：<a href="http://manuals.zeroturnaround.com/jrebel/ide/intellij.html" target="_blank" rel="noopener">http://manuals.zeroturnaround.com/jrebel/ide/intellij.html</a></li><li><img src="http://img.skyheng.com/picture/2016/jrebel/run-configurations.png" alt="JRebel"></li></ul></blockquote><h2 id="配置讲解"><a href="#配置讲解" class="headerlink" title="配置讲解"></a>配置讲解</h2><h3 id="1-使用方法"><a href="#1-使用方法" class="headerlink" title="1.使用方法"></a>1.使用方法</h3><ul><li>总体的思路就是：下载官方的Eclipse插件  然后再指定javaagent等于破解版的jrebel.java路径</li></ul><ol><li>下载官方的Eclipse插件 在eclipse marketplace 里面下载 jrebel  我下载的是 6.几  忘了，直接下最近版的就Ok了  里面包含了三个基本的插件</li><li>破解版的jrebel.jar 网上自己搜索 很多 。解压后的目录为D:\jrebel</li><li>指定javaagent的值  看图  在就rebel config center 里面 在overview plug-ins advanced 一栏中 点击advanced 就会看到jrebel agent 选择other jrebel.jar 选择破解版jrebel.jar的位置</li></ol><ul><li><img src="http://img.skyheng.com/picture/2016/jrebel/jrebel-setting.png" alt="JRebel"></li><li>这一步还有另外一种更方便的思路，直接替换eclipse的plugins目录下，org.zeroturnaround.eclipse.embedder_6.4.1.RELEASE 这个目录下的所有jrebel.jar 这样就不用设置代理了，后面的路径也不用配置了，因为直接用的是默认的。</li></ul><ol><li>在overview中 选择好服务器类型 勾选服务器</li></ol><ul><li><img src="http://img.skyheng.com/picture/2016/jrebel/jrebel-configuration.png" alt="JRebel"></li></ul><ol><li>在server中可以选择这两个选项，同时在tomcat的conf/server.xml 中将context的reloadable设为false。为true的时候 就是重启tomcat，这就会很不爽。<blockquote><p>这里标注一下，以前我在网上看到别人都是说要把这个never publish sutomatically选择的，可是在我本机选择不自动发布后修改jsp页就不能重新加载了，选上Automatically<br>publish when resources change后jsp就可以和以前一样热加载了</p></blockquote></li></ol><ul><li><img src="http://img.skyheng.com/picture/2016/jrebel/tomcat-setting.png" alt="JRebel"></li></ul><ol><li>tomcat启动时 参数的传入中设置tomcat 7的配置里叫做 Open launch configuration。！！！！</li></ol><ul><li><img src="http://img.skyheng.com/picture/2016/jrebel/arguments-setting.png" alt="JRebel"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;jrebel_args&#125;</span> </span><br><span class="line">-Drebel.generate.show=<span class="literal">true</span></span><br><span class="line">-Drebel.spring_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.aspectj_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.cxf_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.logback_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.mybatis_plugin=<span class="literal">true</span></span><br><span class="line">-javaagent:D:\Software\jrebel6\jrebel.jar</span><br><span class="line">-noverify -XX:PermSize=128M -XX:MaxPermSize=512M</span><br><span class="line">-Drebel.log=d\:\\jrebel\\jrebel.log</span><br><span class="line">-Xms512m -Xmx1024m</span><br></pre></td></tr></table></figure></li></ul><h3 id="也可以这样配置"><a href="#也可以这样配置" class="headerlink" title="也可以这样配置"></a>也可以这样配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-noverify</span><br><span class="line">-Djavaagent:C:\jrebel6\jrebel.jar</span><br><span class="line">-DXbootclasspath/p:D:\jrebel6\rebelboot.jar</span><br><span class="line">-Drebel.generate.show=<span class="literal">true</span></span><br><span class="line">-Drebel.spring_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.aspectj_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.cxf_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.logback_plugin=<span class="literal">true</span></span><br><span class="line">-Drebel.mybatis_plugin=<span class="literal">true</span></span><br><span class="line">-Xdebug -Djava.compiler=NONE -DXrunjdwp:transport=dt_socket,address=8787,server=y,<span class="built_in">suspend</span>=n</span><br><span class="line">-Drebel.dirs=E:\workspace\shop-server\mmarket-server\target\classes</span><br><span class="line">-Dmmarket-server.root=E:\workspace\shop-server\mmarket-server</span><br><span class="line">-Drebel.disable_update=<span class="literal">true</span></span><br><span class="line">-XX:PermSize=128M -XX:MaxPermSize=512M -Xms512m -Xmx1024m</span><br></pre></td></tr></table></figure><ol><li>将特定的project添加jrebel nature选中project 右击 选择jrebel  选择 <code>add jrebel nature</code>  就会生成一个文件rebel.xml 里面配置着 jrebel对当前project监控的路径 然后里面有${}包含的参数 这个是在jrebel config center 里面 查看</li></ol><h3 id="2-注意"><a href="#2-注意" class="headerlink" title="2.注意"></a>2.注意</h3><ul><li>tomcat需配置自动加载资源, 最好以debug方式启动</li><li>当一个项目使用maven多模块开发时通过上面的配置, 只能自动加载webapp所在的模块, 若想改动其他模块的代码也要自动加载, 需在项目的跟pom中加入下面的配置: <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.zeroturnaround<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jrebel-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">addResourcesDirToRebelXml</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResourcesDirToRebelXml</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">alwaysGenerate</span>&gt;</span>true<span class="tag">&lt;/<span class="name">alwaysGenerate</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">showGenerated</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showGenerated</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">executions</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-rebel-xml<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">phase</span>&gt;</span>process-resources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">goals</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">goals</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">executions</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-JRebel使用说明"><a href="#3-JRebel使用说明" class="headerlink" title="3.JRebel使用说明"></a>3.JRebel使用说明</h3><ul><li>项目下的src/rebel.xml文件配置的是JRebel的监控路径，如果使用不正常，请确认一下这个文件里边配置的路径是否正确。<br>启动项目，如果提示类似以下信息，说明JRebel运行正常：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">2016-08-29 15:05:09 JRebel:  <span class="comment">#############################################################</span></span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  JRebel Agent 6.4.8 (201608161142)</span><br><span class="line">2016-08-29 15:05:09 JRebel:  (c) Copyright ZeroTurnaround AS, Estonia, Tartu.</span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  Over the last 1 days JRebel prevented</span><br><span class="line">2016-08-29 15:05:09 JRebel:  at least 25 redeploys/restarts saving you about 0.4 hours.</span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  License acquired from License Server: http://idea.lanyus.com</span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  Licensed to skyheng.</span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  </span><br><span class="line">2016-08-29 15:05:09 JRebel:  <span class="comment">#############################################################</span></span><br></pre></td></tr></table></figure><h3 id="在Maven下使用"><a href="#在Maven下使用" class="headerlink" title="在Maven下使用"></a>在Maven下使用</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置 maven 的 jetty 插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mortbay.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>7.2.2.v20101205<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">webAppConfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">contextPath</span>&gt;</span>/$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">contextPath</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定 root context 在这里指定为$&#123;project.artifactId&#125; 即 jetty， 那么访问时就用http://localized:8080/jetty </span></span><br><span class="line"><span class="comment">访问， 如果指定梶为test 就用http://localized:8080/test访问，更多信息，请查看jetty 插件官方文档 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置其他项目extraClasspath，多个用";"隔开 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">extraClasspath</span>&gt;</span>../data-service/target/classes<span class="tag">&lt;/<span class="name">extraClasspath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">webAppConfig</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">scanTargets</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;scanTarget&gt;../data-service/target/classes&lt;/scanTarget&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scanTargets</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定额外需要监控变化的文件或文件夹，主要用于热部署中的识别文件更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scanTargetPatterns</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scanTargetPattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.java<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;excludes&gt;</span></span><br><span class="line"><span class="comment"> &lt;exclude&gt;**/*.xml&lt;/exclude&gt;</span></span><br><span class="line"><span class="comment">&lt;exclude&gt;**/myspecial.properties&lt;/exclude&gt; </span></span><br><span class="line"><span class="comment">&lt;/excludes&gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scanTargetPattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scanTargetPatterns</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>0<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span><span class="comment">&lt;!-- 指定监控的扫描时间间隔，0为关闭jetty自身的热部署，主要是为了使用jrebel --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">webAppSourceDirectory</span>&gt;</span>$&#123;basedir&#125;/src/main/webapp<span class="tag">&lt;/<span class="name">webAppSourceDirectory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定web页面的文件夹 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jerebel maven 插件，用于生成jrebel.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.zeroturnaround<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jrebel-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-rebel-xml<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">phase</span>&gt;</span>process-resources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rebelXmlDirectory</span>&gt;</span>$&#123;basedir&#125;/src/main/webapp/WEB-INF/classes<span class="tag">&lt;/<span class="name">rebelXmlDirectory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定生成的jrebel.xml放在哪里， 要求放在web应用的 classpath下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;basedir&#125;/src/main/webapp/WEB-INF/classes<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">指定编译后文件的存放路径，因为jetty默认src/main/webapp为 web应用的根目录而 maven compile 目标后的默认classpath </span></span><br><span class="line"><span class="comment">在target文件夹下，就造成jrebel.xml无法兼顾 jetty 默认的是webapp中的classes为 web 应用的根目录， 而maven </span></span><br><span class="line"><span class="comment">默认是target 目录所以需要修改该maven的默认classes目录。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Maven插件"><a href="#Maven插件" class="headerlink" title="Maven插件"></a>Maven插件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.zeroturnaround<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jrebel-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-rebel-xml<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">phase</span>&gt;</span>process-resources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>generate<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>插件地址：<a href="http://manuals.zeroturnaround.com/jrebel/standalone/maven.html" target="_blank" rel="noopener">http://manuals.zeroturnaround.com/jrebel/standalone/maven.html</a></li></ul><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><ul><li>JRebel免安装版本下载地址，不是IDE插件，可直接挂载到Tomcat：<code>&lt;https://zeroturnaround.com/software/jrebel/download/thank-you/?file=jrebel-6.4.8-nosetup.zip&gt;</code></li><li>链接：<a href="http://pan.baidu.com/s/1qWOnH7I" target="_blank" rel="noopener">http://pan.baidu.com/s/1qWOnH7I</a> 密码：ynyq</li><li>来源 ：<a href="http://download.csdn.net/user/cock333" target="_blank" rel="noopener">http://download.csdn.net/user/cock333</a></li><li>6.4.3 以上暂无，请使用激活服务器。</li><li>Jrebel从6.5.1版开始封了idea.lanyus.com，目前还可以用idea.qinxi1992.cn激活，现在Jrebel限制切换离线最多只能离线半年。</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>扩软博客：<a href="https://blog.kuoruan.com/62.html" target="_blank" rel="noopener">https://blog.kuoruan.com/62.html</a></li><li>IDEA下安装JRebel热部署：<a href="http://www.cnblogs.com/winner-0715/p/5263422.html" target="_blank" rel="noopener">http://www.cnblogs.com/winner-0715/p/5263422.html</a></li><li>JRebel使用：<a href="http://truemylife.iteye.com/blog/1140921" target="_blank" rel="noopener">http://truemylife.iteye.com/blog/1140921</a></li><li>安装eclipse的JRebel6.4.3的插件：<a href="http://blog.csdn.net/paincupid/article/details/52226014" target="_blank" rel="noopener">http://blog.csdn.net/paincupid/article/details/52226014</a></li><li><a href="http://she.iteye.com/blog/1493669" target="_blank" rel="noopener">http://she.iteye.com/blog/1493669</a></li><li>错误解决：<a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#104;&#x74;&#116;&#x70;&#x3a;&#47;&#47;&#x62;&#x6c;&#x6f;&#x67;&#46;&#49;&#54;&#x33;&#x2e;&#x63;&#111;&#x6d;&#47;&#x6f;&#x6c;&#102;&#x7a;&#x70;&#x70;&#64;&#x31;&#x32;&#x36;&#47;&#98;&#108;&#x6f;&#103;&#47;&#115;&#116;&#97;&#116;&#105;&#99;&#x2f;&#49;&#57;&#x37;&#x36;&#x36;&#57;&#54;&#56;&#x32;&#x30;&#49;&#48;&#x33;&#x31;&#50;&#x35;&#x32;&#49;&#x32;&#56;&#x33;&#53;&#x31;&#47;">&#104;&#x74;&#116;&#x70;&#x3a;&#47;&#47;&#x62;&#x6c;&#x6f;&#x67;&#46;&#49;&#54;&#x33;&#x2e;&#x63;&#111;&#x6d;&#47;&#x6f;&#x6c;&#102;&#x7a;&#x70;&#x70;&#64;&#x31;&#x32;&#x36;&#47;&#98;&#108;&#x6f;&#103;&#47;&#115;&#116;&#97;&#116;&#105;&#99;&#x2f;&#49;&#57;&#x37;&#x36;&#x36;&#57;&#54;&#56;&#x32;&#x30;&#49;&#48;&#x33;&#x31;&#50;&#x35;&#x32;&#49;&#x32;&#56;&#x33;&#53;&#x31;&#47;</a></li><li>jrebel eclipse/tomcat：<a href="http://www.xuebuyuan.com/2169652.html" target="_blank" rel="noopener">http://www.xuebuyuan.com/2169652.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们用eclipse开发时经常遇到一个麻烦的问题是修改类文件后需重启tomcat才能生效，即使使用一些tomcat插件，有时修改了方法名或添加了类，也需要重启。使用获得jolt大奖的作品jrebel，就能轻松实现 jvm热部署，Rebel 可快速实现Tomcat的热部署，最为强大的是支持Spring注解的热部署，这样就能节省大量的服务器重启时间，提高了个人开发效率。JRebel支持Eclipse和IntelliJ IDEA，下面分别从两个IDE介绍JRebel的安装方法，如有错误或遗漏，欢迎指出。PS: 改properties\xml无效，这是要手动重启的。 &lt;/p&gt;
    
    </summary>
    
      <category term="eclipse" scheme="http://code.skyheng.com/categories/eclipse/"/>
    
      <category term="jrebel" scheme="http://code.skyheng.com/categories/eclipse/jrebel/"/>
    
    
      <category term="eclipse" scheme="http://code.skyheng.com/tags/eclipse/"/>
    
      <category term="jrebel" scheme="http://code.skyheng.com/tags/jrebel/"/>
    
  </entry>
  
  <entry>
    <title>JQuery的eval解析JSON中的注意点介绍</title>
    <link href="http://code.skyheng.com/post/8028.html"/>
    <id>http://code.skyheng.com/post/8028.html</id>
    <published>2016-08-22T10:51:02.000Z</published>
    <updated>2018-03-20T14:51:22.163Z</updated>
    
    <content type="html"><![CDATA[<p>在JS中将JSON的字符串解析成JSON数据格式，一般有两种方式：使用eval()函数、使用Function对象来进行返回解析，下面有个示例，在使用ajax请求后台数据的时候会出现missing ] after element list的问题，今天出现这个问题所以我就探究了下</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>在JS中将JSON的字符串解析成JSON数据格式，一般有两种方式： </li></ul><ol><li>一种为使用eval()函数。 </li><li>使用Function对象来进行返回解析。 </li></ol><ul><li>使用eval函数来解析，并且使用jquery的each方法来遍历 </li><li>用jquery解析JSON数据的方法,作为jquery异步请求的传输对象，jquery请求后返回的结果是json对象,这里考虑的都是服务器返回JSON形式的字符串的形式，对于利用JSONObject等插件封装的JSON对象，与此亦是大同小异，这里不再做说明。</li></ul><h2 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h2><ol><li>对于服务器返回的JSON字符串，如果jquery异步请求没做类型说明，或者以字符串方式接受，那么需要做一次对象化处理，方式不是太麻烦，就是将该字符串放于eval()中执行一次。这种方式也适合以普通javascipt方式获取json对象</li></ol><h3 id="JSON字符串集"><a href="#JSON字符串集" class="headerlink" title="JSON字符串集"></a>JSON字符串集</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var data="&#123; </span><br><span class="line">  root: [ </span><br><span class="line">&#123;name:'1',value:'0'&#125;, </span><br><span class="line">&#123;name:'6101',value:'北京市'&#125;, </span><br><span class="line">&#123;name:'6102',value:'天津市'&#125;, </span><br><span class="line">&#123;name:'6103',value:'上海市'&#125;, </span><br><span class="line">&#123;name:'6104',value:'重庆市'&#125;, </span><br><span class="line">&#123;name:'6105',value:'渭南市'&#125;, </span><br><span class="line">&#123;name:'6106',value:'延安市'&#125;, </span><br><span class="line">&#123;name:'6107',value:'汉中市'&#125;, </span><br><span class="line">&#123;name:'6108',value:'榆林市'&#125;, </span><br><span class="line">&#123;name:'6109',value:'安康市'&#125;, </span><br><span class="line">&#123;name:'6110',value:'商洛市'&#125; </span><br><span class="line">] </span><br><span class="line">&#125;";</span><br></pre></td></tr></table></figure><ul><li>这里以jquery异步获取的数据类型——json对象和字符串为依据，分别介绍两种方式获取到的结果处理方式。 </li><li>var dataObj=eval(“(“+data+”)”);//转换为json对象</li><li>问题：eval函数解析json数据时为什加上圆括号<code>eval(&quot;(&quot;+data+&quot;)&quot;)</code></li></ul><blockquote><p>原因在于：eval本身的问题。 由于json是以”{}”的方式来开始以及结束的，在JS中，它会被当成一个语句块来处理，所以必须强制性的将它转换成一种表达式。<br>加上圆括号的目的是迫使eval函数在处理JavaScript代码的时候强制将括号内的表达式（expression）转化为对象，而不是作为语句（statement）来执行。举一个例子，例如对象字面量{}，如若不加外层的括号，那么eval会将大括号识别为JavaScript代码块的开始和结束标记，那么{}将会被认为是执行了一句空语句。所以下面两个执行结果是不同的：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="built_in">eval</span>(<span class="string">"&#123;&#125;"</span>); <span class="comment">// return undefined </span></span><br><span class="line">alert(<span class="built_in">eval</span>(<span class="string">"(&#123;&#125;)"</span>);<span class="comment">// return object[Object]</span></span><br></pre></td></tr></table></figure><ul><li>对于这种写法，在JS中，可以到处看到。如: (function()) {}(); 做闭包操作时等。 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alert(dataObj.root.length); <span class="comment">//输出root的子对象数量 </span></span><br><span class="line">$.each(dataObj.root, fucntion(idx, item) &#123;</span><br><span class="line">    <span class="keyword">if</span> (idx == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出每个root子对象的名称和值 </span></span><br><span class="line">    alert(<span class="string">"name:"</span> + item.name + <span class="string">",value:"</span> + item.value);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注</strong>：对于一般的js生成json对象，只需要将$.each()方法替换为for语句即可，其他不变。 </p><h2 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h2><ol><li>对于服务器返回的JSON字符串，如果jquery异步请求将type（一般为这个配置属性）设为“json”，或者利用$.getJSON()方法获得服务器返回，那么就不需要eval（）方法了，因为这时候得到的结果已经是json对象了，只需直接调用该对象即可，这里以$.getJSON方法为例说明数据处理方法</li></ol><h3 id="错误注意"><a href="#错误注意" class="headerlink" title="错误注意"></a>错误注意</h3><ul><li>使用 result = eval(“ (“+data+”) “);时报如下错误</li><li>错误： <code>SyntaxError: missing ] after element list</code></li><li>解决方案：不使用eval转，而直接使用data。</li><li>原因：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.ajax( &#123;</span><br><span class="line">  type : <span class="string">"post"</span>,</span><br><span class="line">  dataType : <span class="string">"json"</span>, <span class="comment">//这里已经定义数据格式</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>jquery调用时会检测到，从而直接把返回格式当做json处理，所以再转化会报错。</p></blockquote><h3 id="后台返回数据的java代码"><a href="#后台返回数据的java代码" class="headerlink" title="后台返回数据的java代码"></a>后台返回数据的java代码</h3><ul><li>在这里<code>application/json;charset=UTF-8</code>已经定义了返回的格式当做json处理。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/queryCitysById"</span>, produces = &#123;<span class="string">"application/json;charset=UTF-8"</span>&#125;)</span><br><span class="line"><span class="meta">@ResponseBody</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">queryCitysById</span><span class="params">(HttpServletRequest request, String tagId, String brandCode)</span> </span>&#123;</span><br><span class="line">    List &lt; ProductTagCity &gt; tagCities = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        tagCities = productTagManager.queryCitysById(tagId, brandCode);</span><br><span class="line">        logger.info(<span class="string">"queryCitysById ：tagCities="</span> + JSONObject.toJSONString(tagCities));</span><br><span class="line">    &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> JSONObject.toJSONString(tagCities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回的json数据"><a href="#返回的json数据" class="headerlink" title="返回的json数据"></a>返回的json数据</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    <span class="attr">"brandCode"</span>: <span class="string">"MB01"</span>,</span><br><span class="line">    <span class="attr">"businessCityName"</span>: <span class="string">"吉林"</span>,</span><br><span class="line">    <span class="attr">"businessCityNo"</span>: <span class="string">"M0253"</span>,</span><br><span class="line">    <span class="attr">"createTime"</span>: <span class="number">1471835277000</span>,</span><br><span class="line">    <span class="attr">"createUser"</span>: <span class="string">"admin"</span>,</span><br><span class="line">    <span class="attr">"isValid"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"orgCodeLong"</span>: <span class="string">"C-P06-A004-M0253"</span>,</span><br><span class="line">    <span class="attr">"tagCityId"</span>: <span class="string">"ff80808156b038080156b03808220000"</span>,</span><br><span class="line">    <span class="attr">"tagId"</span>: <span class="string">"2c914eb456b038010156b03801660000"</span>,</span><br><span class="line">    <span class="attr">"updateTime"</span>: <span class="number">1471835277000</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"brandCode"</span>: <span class="string">"MB01"</span>,</span><br><span class="line">    <span class="attr">"businessCityName"</span>: <span class="string">"四平"</span>,</span><br><span class="line">    <span class="attr">"businessCityNo"</span>: <span class="string">"M0274"</span>,</span><br><span class="line">    <span class="attr">"createTime"</span>: <span class="number">1471835277000</span>,</span><br><span class="line">    <span class="attr">"createUser"</span>: <span class="string">"admin"</span>,</span><br><span class="line">    <span class="attr">"isValid"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"orgCodeLong"</span>: <span class="string">"C-P06-A004-M0274"</span>,</span><br><span class="line">    <span class="attr">"tagCityId"</span>: <span class="string">"ff80808156b038080156b03808220001"</span>,</span><br><span class="line">    <span class="attr">"tagId"</span>: <span class="string">"2c914eb456b038010156b03801660000"</span>,</span><br><span class="line">    <span class="attr">"updateTime"</span>: <span class="number">1471835277000</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"brandCode"</span>: <span class="string">"MB01"</span>,</span><br><span class="line">    <span class="attr">"businessCityName"</span>: <span class="string">"长春"</span>,</span><br><span class="line">    <span class="attr">"businessCityNo"</span>: <span class="string">"M0118"</span>,</span><br><span class="line">    <span class="attr">"createTime"</span>: <span class="number">1471835277000</span>,</span><br><span class="line">    <span class="attr">"createUser"</span>: <span class="string">"admin"</span>,</span><br><span class="line">    <span class="attr">"isValid"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"orgCodeLong"</span>: <span class="string">"C-P01-A004-M0118"</span>,</span><br><span class="line">    <span class="attr">"tagCityId"</span>: <span class="string">"ff80808156b038080156b03808220002"</span>,</span><br><span class="line">    <span class="attr">"tagId"</span>: <span class="string">"2c914eb456b038010156b03801660000"</span>,</span><br><span class="line">    <span class="attr">"updateTime"</span>: <span class="number">1471835277000</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h3><ul><li>这里<code>var orgs = data;</code>直接使用了，此时的data就是一个会解析成一个 json对象了，不再使用eval，才是正确的写法，不然就会报错<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取关联城市数据（正确的）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCityDataFunction</span>(<span class="params">tagId, brandCode</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> marketPath = $(<span class="string">"#marketPath"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> params = &#123;&#125;;</span><br><span class="line">    params[<span class="string">'tagId'</span>] = tagId;</span><br><span class="line">    params[<span class="string">'brandCode'</span>] = brandCode;</span><br><span class="line">    $.post(marketPath + <span class="string">"/product_tag/queryCitysById.do"</span>, params,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> orgs = data;</span><br><span class="line">        <span class="keyword">if</span> (!orgs || orgs.length == <span class="number">0</span>) &#123;</span><br><span class="line">            $(<span class="string">"#tagCityView-text"</span>).html(<span class="string">"生效的城市列表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> orghtml = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; orgs.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) orghtml = orghtml + <span class="string">","</span> + orgs[i].businessCityName;</span><br><span class="line">            <span class="keyword">else</span> orghtml = orghtml + orgs[i].businessCityName;</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">"#tagCityView-text"</span>).html(orghtml);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>注意</strong>：这里使用了<code>eval(&quot;(&quot; + data + &quot;)&quot;)</code>就会报错，用法重复了<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取关联城市数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCityDataFunction</span>(<span class="params">tagId, brandCode</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> marketPath = $(<span class="string">"#marketPath"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> params = &#123;&#125;;</span><br><span class="line">    params[<span class="string">'tagId'</span>] = tagId;</span><br><span class="line">    params[<span class="string">'brandCode'</span>] = brandCode;</span><br><span class="line">    $.post(marketPath + <span class="string">"/product_tag/queryCitysById.do"</span>, params,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> orgs = <span class="built_in">eval</span>(<span class="string">"("</span> + data + <span class="string">")"</span>);</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">        <span class="keyword">if</span> (!orgs || orgs.length == <span class="number">0</span>) &#123;</span><br><span class="line">            $(<span class="string">"#tagCityView-text"</span>).html(<span class="string">"生效的城市列表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> orghtml = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; orgs.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) orghtml = orghtml + <span class="string">","</span> + orgs[i].businessCityName;</span><br><span class="line">            <span class="keyword">else</span> orghtml = orghtml + orgs[i].businessCityName;</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">"#tagCityView-text"</span>).html(orghtml);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>JavaScript eval() 函数:<a href="http://www.w3school.com.cn/jsref/jsref_eval.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/jsref/jsref_eval.asp</a></li><li>博客参考：<a href="http://blog.csdn.net/ypb455360299/article/details/8216722" target="_blank" rel="noopener">http://blog.csdn.net/ypb455360299/article/details/8216722</a></li><li>博客参考：<a href="http://www.jb51.net/article/40842.htm" target="_blank" rel="noopener">http://www.jb51.net/article/40842.htm</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在JS中将JSON的字符串解析成JSON数据格式，一般有两种方式：使用eval()函数、使用Function对象来进行返回解析，下面有个示例，在使用ajax请求后台数据的时候会出现missing ] after element list的问题，今天出现这个问题所以我就探究了下&lt;/p&gt;
    
    </summary>
    
      <category term="ajax" scheme="http://code.skyheng.com/categories/ajax/"/>
    
      <category term="javascript" scheme="http://code.skyheng.com/categories/ajax/javascript/"/>
    
      <category term="jquery" scheme="http://code.skyheng.com/categories/ajax/javascript/jquery/"/>
    
    
      <category term="ajax" scheme="http://code.skyheng.com/tags/ajax/"/>
    
      <category term="javascript" scheme="http://code.skyheng.com/tags/javascript/"/>
    
      <category term="jquery" scheme="http://code.skyheng.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>关于分布式一致性的探究</title>
    <link href="http://code.skyheng.com/post/28651.html"/>
    <id>http://code.skyheng.com/post/28651.html</id>
    <published>2016-08-08T15:21:25.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>随着大型网站的各种高并发访问、海量数据处理等场景越来越多，如何实现网站的高可用、易伸缩、可扩展、安全等目标就显得越来越重要。<br>为了解决这样一系列问题，大型网站的架构也在不断发展。提高大型网站的高可用架构，不得不提的就是分布式。<br>在初识分布式系统一文中简单介绍了分布式的基本概念，本文将在上篇文章的基础上继续学习分布式的一致性问题。<br>主要介绍分布式一致性的基本概念、重要性、一致性模型等。</p><a id="more"></a><h2 id="一致性的重要性"><a href="#一致性的重要性" class="headerlink" title="一致性的重要性"></a>一致性的重要性</h2><p>分布式领域CAP理论告诉我们，任何一个分布式系统都无法同时满足Consistency(一致性),Availability(可用性), Partition tolerance(分区容错性) 这三个基本需求。最多只能满足其中两项。 但是，一个分布式系统无论在CAP三者之间如何权衡，都无法彻底放弃一致性（Consistency），如果真的放弃一致性，那么就说明这个系统中的数据根本不可信，数据也就没有意义，那么这个系统也就没有任何价值可言。所以，无论如何，分布式系统的一致性问题都需要重点关注。(分布式系统的CAP理论、分布式系统的BASE理论)</p><blockquote><p>这里先简单提一下，由于一个分布式系统不可能放弃一致性，那么为什么有的架构师还说在某些场景中可以牺牲一致性呢？通常这里说的放弃一致性指的是放弃数据的强一致性（后文介绍什么是强一致性）。</p></blockquote><p>通常情况下，我们所说的分布式一致性问题通常指的是数据一致性问题。那么我们就先来了解一下什么是数据一致性。</p><h2 id="数据一致性"><a href="#数据一致性" class="headerlink" title="数据一致性"></a>数据一致性</h2><ul><li>数据一致性其实是数据库系统中的概念。我们可以简单的把一致性理解为正确性或者完整性，那么数据一致性通常指关联数据<br>之间的逻辑关系是否正确和完整。我们知道，在数据库系统中通常用事务（访问并可能更新数据库中各种数据项的一个程序执行单元）<br>来保证数据的一致性和完整性。而在分布式系统中，数据一致性往往指的是由于数据的复制，不同数据节点中的数据内容是否完整并且相同。<br>​- 比如在集中式系统中，有一些关键的配置信息，可以直接保存在服务器的内存中，但是在分布式系统中，如何保存这些配置信息，<br>又如何保证所有机器上的配置信息都保持一致，又如何保证修改一个配置能够把这次修改同步到所有机器中呢？</li><li>再比如，在集中式系统中，进行一个同步操作要写同一个数据的时候，可以直接使用事务+锁来管理保证数据的ACID。但是，<br>在分布式系统中如何保证多台机器不会同时写同一条数据呢？</li></ul><h3 id="为什么会有数据一致性问题"><a href="#为什么会有数据一致性问题" class="headerlink" title="为什么会有数据一致性问题"></a>为什么会有数据一致性问题</h3><p>在初识分布式系统中我们介绍过，虽然分布式系统有着诸多优点，但是由于采用多机器进行分布式部署的方式提供服务，必然存在着数据的复制。分布式系统的数据复制需求主要来源于以下两个原因：</p><blockquote><p>可用性。将数据复制到分布式部署的多台机器中，可以消除单点故障。防止系统由于某台（些）机器宕机导致的不可用。</p><p>性能。通过负载均衡技术，能够让分布在不同地方的数据副本全都对外提供服务。有效提高系统性能。</p></blockquote><p>在分布式系统引入复制机制后，不同的数据节点之间由于网络延时等原因很容易产生数据不一致的情况。复制机制的目的是为了保证数据的一致性。但是数据复制面临的主要难题也是如何保证多个副本之间的数据一致性。</p><p>假设有这样的场景，有两个人同时去两个不同的火车站买票（A去A火车站，B去B火车站），为了保证合理的卖票，需要在A火车站和B火车站之间共享关于剩余票数的数据。但是A和B要买的票只剩下一张。一张票当然只能卖给一个人。 如果为了保证系统性能，那么A和B在买票的时候应该都可以买票成功（因为他们在买票过程中余票数据都显示还有一张余票）。两人在买完票之后，系统在做数据复制时发现一张票被卖出了两次，这时就要让A和B两人其中一人手中得票作废掉。这时就要花费很大的力气来通知后买到这张票的人这个消息。。。 如果为了保证数据一致性，那么就需要在A买票的过程中，B只能等着。等A买票结束，并且把余票结果同步到B火车站的售票窗口。然后B才能知道还有没有余票可以购买。</p><p>上面的例子可以简单的说明一个系统如果想保证数据一致性很有可能影响其性能。因为并发的写请求需要在前一个写请求结束之后才能进行。</p><p>因此，如何能既保证数据一致性，又保证系统的性能，是每一个分布式系统都需要重点考虑和权衡的。一致性模型可以在做这些权衡的时候给我们很多借鉴和思考。</p><h2 id="一致性模型"><a href="#一致性模型" class="headerlink" title="一致性模型"></a>一致性模型</h2><h3 id="强一致性"><a href="#强一致性" class="headerlink" title="强一致性"></a>强一致性</h3><p>当更新操作完成之后，任何多个后续进程或者线程的访问都会返回最新的更新过的值。这种是对用户最友好的，就是用户上一次写什么，下一次就保证能读到什么。但是这种实现对性能影响较大。</p><h3 id="弱一致性"><a href="#弱一致性" class="headerlink" title="弱一致性"></a>弱一致性</h3><p>系统并不保证续进程或者线程的访问都会返回最新的更新过的值。系统在数据写入成功之后，不承诺立即可以读到最新写入的值，也不会具体的承诺多久之后可以读到。但会尽可能保证在某个时间级别（比如秒级别）之后，可以让数据达到一致性状态。</p><h3 id="最终一致性"><a href="#最终一致性" class="headerlink" title="最终一致性"></a>最终一致性</h3><p>弱一致性的特定形式。系统保证在没有后续更新的前提下，系统最终返回上一次更新操作的值。在没有故障发生的前提下，不一致窗口的时间主要受通信延迟，系统负载和复制副本的个数影响。DNS是一个典型的最终一致性系统。</p><h3 id="最终一致性模型的变种"><a href="#最终一致性模型的变种" class="headerlink" title="最终一致性模型的变种"></a>最终一致性模型的变种</h3><ol><li><p>因果一致性：如果A进程在更新之后向B进程通知更新的完成，那么B的访问操作将会返回更新的值。如果没有因果关系的C进程将会遵循最终一致性的规则。</p></li><li><p>读己所写一致性：因果一致性的特定形式。一个进程总可以读到自己更新的数据。</p></li><li><p>会话一致性：读己所写一致性的特定形式。进程在访问存储系统同一个会话内，系统保证该进程读己之所写。</p></li><li><p>单调读一致性：如果一个进程已经读取到一个特定值，那么该进程不会读取到该值以前的任何值。</p></li><li><p>单调写一致性：系统保证对同一个进程的写操作串行化。</p></li></ol><p>上述最终一致性的不同方式可以进行组合，例如单调读一致性和读己之所写一致性就可以组合实现。并且从实践的角度来看，这两者的组合，读取自己更新的 数据，和一旦读取到最新的版本不会再读取旧版本，对于此架构上的程序开发来说，会少很多额外的烦恼。</p><p>为了解决分布式的一致性问题，在长期的研究探索过程中，涌现出了一大批经典的一致性协议和算法，其中比较著名的有二阶段提交协议，三阶段提交协议和Paxos算法。 下一篇文章将介绍这些和分布式一致性相关的协议和算法。</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>注：本文转载自<a href="http://www.hollischuang.com/archives/663" target="_blank" rel="noopener">http://www.hollischuang.com/archives/663</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着大型网站的各种高并发访问、海量数据处理等场景越来越多，如何实现网站的高可用、易伸缩、可扩展、安全等目标就显得越来越重要。&lt;br&gt;为了解决这样一系列问题，大型网站的架构也在不断发展。提高大型网站的高可用架构，不得不提的就是分布式。&lt;br&gt;在初识分布式系统一文中简单介绍了分布式的基本概念，本文将在上篇文章的基础上继续学习分布式的一致性问题。&lt;br&gt;主要介绍分布式一致性的基本概念、重要性、一致性模型等。&lt;/p&gt;
    
    </summary>
    
      <category term="分布式" scheme="http://code.skyheng.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="dubbo" scheme="http://code.skyheng.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/dubbo/"/>
    
    
      <category term="分布式" scheme="http://code.skyheng.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="dubbo" scheme="http://code.skyheng.com/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>初识分布式系统</title>
    <link href="http://code.skyheng.com/post/5101.html"/>
    <id>http://code.skyheng.com/post/5101.html</id>
    <published>2016-08-08T09:38:39.000Z</published>
    <updated>2018-03-08T15:48:24.867Z</updated>
    
    <content type="html"><![CDATA[<p>随着大型网站的各种高并发访问、海量数据处理等场景越来越多，如何实现网站的高可用、易伸缩、可扩展、安全等目标就显得越来越重要。<br>为了解决这样一系列问题，大型网站的架构也在不断发展。提高大型网站的高可用架构，不得不提的就是分布式。本文主要简单介绍了分布式系统的概念、<br>分布式系统的特点、常用的分布式方案以及分布式和集群的区别等。</p><a id="more"></a><h2 id="一、集中式系统"><a href="#一、集中式系统" class="headerlink" title="一、集中式系统"></a>一、集中式系统</h2><ul><li>在学习分布式之前，先了解一下与之相对应的集中式系统是什么样的。</li><li>集中式系统用一句话概括就是：一个主机带多个终端。终端没有数据处理能力，仅负责数据的录入和输出。而运算、存储等全部在主机上进行。现在的银行系统，大部分都是这种集中式的系统，<br>此外，在大型企业、科研单位、军队、政府等也有分布。集中式系统，主要流行于上个世纪。</li></ul><ul><li>集中式系统的最大的特点就是部署结构非常简单，底层一般采用从IBM、HP等厂商购买到的昂贵的大型主机。因此无需考虑如何对服务进行多节点的部署，也就不用考虑各节点之间的分布式协作问题。<br>但是，由于采用单机部署。很可能带来系统大而复杂、难于维护、发生单点故障（单个点发生故障的时候会波及到整个系统或者网络，从而导致整个系统或者网络的瘫痪）、扩展性差等问题。</li></ul><h2 id="二、分布式系统-distributed-system"><a href="#二、分布式系统-distributed-system" class="headerlink" title="二、分布式系统(distributed system)"></a>二、分布式系统(distributed system)</h2><ul><li>在《分布式系统概念与设计》一书中，对分布式系统做了如下定义：<blockquote><p>分布式系统是一个硬件或软件组件分布在不同的网络计算机上，彼此之间仅仅通过消息传递进行通信和协调的系统</p></blockquote></li><li>简单来说就是一群独立计算机集合共同对外提供服务，但是对于系统的用户来说，就像是一台计算机在提供服务一样。分布式意味着可以采用更多的普通计算机（相对于昂贵的大型机）<br>组成分布式集群对外提供服务。计算机越多，CPU、内存、存储资源等也就越多，能够处理的并发访问量也就越大。</li><li>从分布式系统的概念中我们知道，各个主机之间通信和协调主要通过网络进行，所以，分布式系统中的计算机在空间上几乎没有任何限制，这些计算机可能被放在不同的机柜上，<br>也可能被部署在不同的机房中，还可能在不同的城市中，对于大型的网站甚至可能分布在不同的国家和地区。但是，无论空间上如何分布，一个标准的分布式系统应该具有以下几个主要特征：</li></ul><h3 id="1、分布性"><a href="#1、分布性" class="headerlink" title="1、分布性"></a>1、分布性</h3><ul><li>分布式系统中的多台计算机之间在空间位置上可以随意分布，系统中的多台计算机之间没有主、从之分，即没有控制整个系统的主机，也没有受控的从机。</li></ul><h3 id="2、透明性"><a href="#2、透明性" class="headerlink" title="2、透明性"></a>2、透明性</h3><ul><li>系统资源被所有计算机共享。每台计算机的用户不仅可以使用本机的资源，还可以使用本分布式系统中其他计算机的资源(包括CPU、文件、打印机等)。</li></ul><h3 id="3、同一性"><a href="#3、同一性" class="headerlink" title="3、同一性"></a>3、同一性</h3><ul><li>系统中的若干台计算机可以互相协作来完成一个共同的任务，或者说一个程序可以分布在几台计算机上并行地运行。</li></ul><h3 id="4、通信性"><a href="#4、通信性" class="headerlink" title="4、通信性"></a>4、通信性</h3><ul><li>系统中任意两台计算机都可以通过通信来交换信息。</li><li>和集中式系统相比，分布式系统的性价比更高、处理能力更强、可靠性更高、也有很好的扩展性。但是，分布式在解决了网站的高并发问题的同时也带来了一些其他问题。<br>首先，分布式的必要条件就是网络，这可能对性能甚至服务能力造成一定的影响。其次，一个集群中的服务器数量越多，服务器宕机的概率也就越大。另外，由于服务在集群中分布是部署，<br>用户的请求只会落到其中一台机器上，所以，一旦处理不好就很容易产生数据一致性问题。</li></ul><h2 id="常用的分布式方案"><a href="#常用的分布式方案" class="headerlink" title="常用的分布式方案"></a>常用的分布式方案</h2><h3 id="1、分布式应用和服务"><a href="#1、分布式应用和服务" class="headerlink" title="1、分布式应用和服务"></a>1、分布式应用和服务</h3><ul><li>将应用和服务进行分层和分割，然后将应用和服务模块进行分布式部署。这样做不仅可以提高并发访问能力、减少数据库连接和资源消耗，还能使不同应用复用共同的服务，使业务易于扩展。</li></ul><h3 id="2、分布式静态资源"><a href="#2、分布式静态资源" class="headerlink" title="2、分布式静态资源"></a>2、分布式静态资源</h3><ul><li>对网站的静态资源如JS、CSS、图片等资源进行分布式部署可以减轻应用服务器的负载压力，提高访问速度。</li></ul><h3 id="3、分布式数据和存储"><a href="#3、分布式数据和存储" class="headerlink" title="3、分布式数据和存储"></a>3、分布式数据和存储</h3><ul><li>大型网站常常需要处理海量数据，单台计算机往往无法提供足够的内存空间，可以对这些数据进行分布式存储。</li></ul><h3 id="4、分布式计算"><a href="#4、分布式计算" class="headerlink" title="4、分布式计算"></a>4、分布式计算</h3><ul><li>随着计算技术的发展，有些应用需要非常巨大的计算能力才能完成，如果采用集中式计算，需要耗费相当长的时间来完成。分布式计算将该应用分解成许多小的部分，分配给多台计算机进行处理。这样可以节约整体计算时间，大大提高计算效率。</li></ul><h2 id="分布式与集群"><a href="#分布式与集群" class="headerlink" title="分布式与集群"></a>分布式与集群</h2><ul><li>分布式（distributed）是指在多台不同的服务器中部署不同的服务模块，通过远程调用协同工作，对外提供服务。</li><li>集群（cluster）是指在多台不同的服务器中部署相同应用或服务模块，构成一个集群，通过负载均衡设备对外提供服务。</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>注：本文转载自<a href="http://www.hollischuang.com/archives/655" target="_blank" rel="noopener">http://www.hollischuang.com/archives/655</a></li><li><a href="http://www.hollischuang.com/archives/655" target="_blank" rel="noopener">http://www.hollischuang.com/archives/655</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着大型网站的各种高并发访问、海量数据处理等场景越来越多，如何实现网站的高可用、易伸缩、可扩展、安全等目标就显得越来越重要。&lt;br&gt;为了解决这样一系列问题，大型网站的架构也在不断发展。提高大型网站的高可用架构，不得不提的就是分布式。本文主要简单介绍了分布式系统的概念、&lt;br&gt;分布式系统的特点、常用的分布式方案以及分布式和集群的区别等。&lt;/p&gt;
    
    </summary>
    
      <category term="分布式" scheme="http://code.skyheng.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="dubbo" scheme="http://code.skyheng.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/dubbo/"/>
    
    
      <category term="分布式" scheme="http://code.skyheng.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="dubbo" scheme="http://code.skyheng.com/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>用Excel生成和管理Markdown表格</title>
    <link href="http://code.skyheng.com/post/13879.html"/>
    <id>http://code.skyheng.com/post/13879.html</id>
    <published>2016-08-02T16:03:33.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown作为一种轻量级的标记语言，用来进行简单的文本排版，确实方便快捷。但Markdown标记语言的属性，也使得其在表格处理上略显繁琐且不直观。而Excel几乎就是表格的代名词，借助Excel，可以改善我们在Markdown中使用表格的体验。下文将简单介绍怎么使用Excel生成和管理可用于Markdown文章的表格。</p><a id="more"></a><h2 id="填写表格"><a href="#填写表格" class="headerlink" title="填写表格"></a>填写表格</h2><p>在 Excel 中正常填写你的表格内容，之后在标题行下插入一行，要居中的填入 <strong><code>:-:</code></strong>，要右对齐的填<strong><code>-:</code></strong>，其它全部填上<strong><code>-</code></strong>。</p><table><thead><tr><th style="text-align:center">-</th><th>左对齐</th><th style="text-align:center">居中对齐</th><th style="text-align:right">右对齐</th></tr></thead><tbody><tr><td style="text-align:center"><strong>:-:</strong></td><td><strong>-</strong></td><td style="text-align:center"><strong>:-:</strong></td><td style="text-align:right"><strong>-</strong>:</td></tr><tr><td style="text-align:center">1</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr><tr><td style="text-align:center">2</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr><tr><td style="text-align:center">3</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr></tbody></table><ul><li>如图左上角，表头也不要留空，填上<code>-</code>提高兼容性。</li></ul><h2 id="生成表格"><a href="#生成表格" class="headerlink" title="生成表格"></a>生成表格</h2><p>选中表格，复制，然后粘贴到 Markdown 编辑器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-左对齐居中对齐右对齐</span><br><span class="line">:-::-:-:-:</span><br><span class="line">1LeftCenterRight</span><br><span class="line">2LeftCenterRight</span><br><span class="line">3LeftCenterRight</span><br></pre></td></tr></table></figure><p>复制出来的 Excel 默认以<code>tab</code>作为单元格分隔符，而 Markdown 则以<code>|</code>为分隔符。顺理成章，当我们使用 <code>|</code> 对原<code>tab</code>分隔符进行替换后，即可生成 Markdown 化的表格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-|默认左对齐|居中对齐|内容右对齐</span><br><span class="line">:-:|-|:-:|-:</span><br><span class="line">1|Left|Center|Right</span><br><span class="line">2|Left|Center|Right</span><br><span class="line">3|Left|Center|Right</span><br></pre></td></tr></table></figure><p>表格效果大致如下：</p><table><thead><tr><th style="text-align:center">-</th><th>左对齐</th><th style="text-align:center">居中对齐</th><th style="text-align:right">右对齐</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr><tr><td style="text-align:center">2</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr><tr><td style="text-align:center">3</td><td>Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr></tbody></table><h2 id="处理表格"><a href="#处理表格" class="headerlink" title="处理表格"></a>处理表格</h2><p>在 Excel 中，处理表格灵活方便，调整好后再按上面方法重新生成表格即可。</p><ul><li>可以对表格进行快速拖拽排序；</li><li>可以用公式 <code>=row()</code> 给表格添加自动序号；</li><li>当然我们也可以使用 Markdown 语法为单元格内容设置格式，添加超链接等；</li></ul><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ul><li>Markdown 默认语法不支持单元格合并，更复杂的表格不适合用在 Markdown 中；</li><li>这种写法的表格，目前已知在 GitHub 上不能正确解析；</li><li><a href="/2015/09/20/windows-mac-software/">自用 Windows 和 Mac 软件推荐</a>，这些表格处理经验基本是为了写左边这篇文章而积累的，大家可以看看效果。</li><li>顺便推荐一个在线表格生成网站，<a href="http://www.tablesgenerator.com/markdown_tables" target="_blank" rel="noopener">Tables Generator.com</a>，在上面也可以快速生成通用的 Markdown 表格。使用网站的不便之处就是需要联网，而且这个网站还在[墙外]。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown作为一种轻量级的标记语言，用来进行简单的文本排版，确实方便快捷。但Markdown标记语言的属性，也使得其在表格处理上略显繁琐且不直观。而Excel几乎就是表格的代名词，借助Excel，可以改善我们在Markdown中使用表格的体验。下文将简单介绍怎么使用Excel生成和管理可用于Markdown文章的表格。&lt;/p&gt;
    
    </summary>
    
      <category term="触类旁通" scheme="http://code.skyheng.com/categories/%E8%A7%A6%E7%B1%BB%E6%97%81%E9%80%9A/"/>
    
    
      <category term="excel" scheme="http://code.skyheng.com/tags/excel/"/>
    
      <category term="markdown" scheme="http://code.skyheng.com/tags/markdown/"/>
    
      <category term="table" scheme="http://code.skyheng.com/tags/table/"/>
    
  </entry>
  
  <entry>
    <title>Hexo最常用的几个命令</title>
    <link href="http://code.skyheng.com/post/29405.html"/>
    <id>http://code.skyheng.com/post/29405.html</id>
    <published>2016-08-02T14:12:04.000Z</published>
    <updated>2018-03-18T13:38:31.754Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 约有二十个命令，但普通用户经常使用的大概只有下列几个:<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/hexo/hexo.png" alt="hexo"></p><h2 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><ul><li><code>hexo s</code> 是 <code>hexo server</code> 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；</li><li>对 Hexo 根目录 <code>_config.yml</code> 的修改，需要重启本地服务器后才能预览效果。</li></ul><h2 id="hexo-n"><a href="#hexo-n" class="headerlink" title="hexo n"></a>hexo n</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;学习笔记  六&quot;</span><br></pre></td></tr></table></figure><p>新建一篇标题为 <code>学习笔记  六</code> 的文章，因为标题里有空格，所以加上了引号。</p><ul><li>文章标题可以在对应 md 文件里改，新建时标题可以写的简单些；</li><li><code>hexo n</code> 是 <code>hexo new</code> 的缩写，命令效果一致。</li></ul><h3 id="文章可以拥有如下属性："><a href="#文章可以拥有如下属性：" class="headerlink" title="文章可以拥有如下属性："></a>文章可以拥有如下属性：</h3><table><thead><tr><th style="text-align:center">-</th><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>layout</td><td>Layout</td><td>post或page</td></tr><tr><td style="text-align:center">2</td><td>title</td><td>文章的标题</td><td></td></tr><tr><td style="text-align:center">3</td><td>date</td><td>创建日期</td><td>文件的创建日期</td></tr><tr><td style="text-align:center">4</td><td>updated</td><td>修改日期</td><td>文件的修改日期</td></tr><tr><td style="text-align:center">5</td><td>comments</td><td>是否开启评论</td><td>true</td></tr><tr><td style="text-align:center">6</td><td>tags</td><td>标签</td><td></td></tr><tr><td style="text-align:center">7</td><td>categories</td><td>分类</td><td></td></tr><tr><td style="text-align:center">8</td><td>permalink</td><td>url中的名字</td><td>文件名</td></tr></tbody></table><p>动态博客中通过发布文章页面设置的各种属性，在hexo里要这样设置。</p><h2 id="hexo-d"><a href="#hexo-d" class="headerlink" title="hexo d"></a>hexo d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>自动生成网站静态文件，并部署到设定的仓库。</p><ul><li><code>hexo d</code> 是 <code>hexo deploy</code> 的缩写，命令效果一致。</li></ul><h2 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 <code>db.json</code> 和已生成的静态文件 <code>public</code>。</p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul><h2 id="hexo-g"><a href="#hexo-g" class="headerlink" title="hexo g"></a>hexo g</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成网站静态文件到默认设置的 <code>public</code> 文件夹。</p><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li><li><code>hexo g</code> 是 <code>hexo generate</code> 的缩写，命令效果一致。</li></ul><h2 id="hexo-n-page"><a href="#hexo-n-page" class="headerlink" title="hexo n page"></a>hexo n page</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page aboutme</span><br></pre></td></tr></table></figure><p>新建一个标题为 <code>aboutme</code> 的页面，默认链接地址为 <code>主页地址/aboutme/</code></p><ul><li>标题可以为中文，但一般习惯用英文；</li><li>页面标题和文章一样可以随意修改；</li><li>页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。</li></ul><h2 id="常用组合"><a href="#常用组合" class="headerlink" title="常用组合"></a>常用组合</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>可以用输入法等软件为这些命令设置快捷键，方便调用。</p><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>草稿相当于很多博客都有的“私密文章”功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft &quot;new draft&quot;</span><br></pre></td></tr></table></figure></p><p>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</p><ul><li><p>如果你希望强行预览草稿，更改配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render_drafts: true</span><br></pre></td></tr></table></figure></li><li><p>或者，如下方式启动server：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server --drafts</span><br></pre></td></tr></table></figure></li><li><p>下面这条命令可以把草稿变成文章，或者页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h2><ul><li>以上命令使用基于 Hexo 3.1.1 版本；</li><li>需要删掉用命令新建的文章或页面时，只需要进入 Hexo 根目录下的 <code>source</code> 文件夹，删除对应文件或文件夹即可；</li><li>更多命令用法请查询 <a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">官方文档</a>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 约有二十个命令，但普通用户经常使用的大概只有下列几个:&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://code.skyheng.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://code.skyheng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>GIT的常用操作命令</title>
    <link href="http://code.skyheng.com/post/52802.html"/>
    <id>http://code.skyheng.com/post/52802.html</id>
    <published>2016-08-01T13:20:27.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>我每天使用 Git，但是很多命令记不住。一般来说，日常使用只要记住常用的几个命令就可以了。但是熟练使用，恐怕要记住60～100个命令。特此讲解GIT的常用操作命令<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/public/git.png" alt="git"><br>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul><h2 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h2><ul><li>在当前目录新建一个Git代码库：<code>$ git init</code></li><li>新建一个目录，将其初始化为Git代码库：<code>$ git init [project-name]</code></li><li>下载一个项目和它的整个代码历史：<code>$ git clone [url]</code></li></ul><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><blockquote><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p></blockquote><ul><li>显示当前的Git配置：<code>$ git config --list</code></li><li>编辑Git配置文件：<code>$ git config -e [--global]</code></li><li>设置提交代码时的用户信息：<ul><li><code>$ git config [--global] user.name &quot;[name]&quot;</code></li><li><code>$ git config [--global] user.email &quot;[email address]&quot;</code></li></ul></li></ul><h2 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加/删除文件"></a>三、增加/删除文件</h2><ul><li>添加指定文件到暂存区：<code>$ git add [file1] [file2] ...</code></li><li>添加指定目录到暂存区，包括子目录：<code>$ git add [dir]</code></li><li>添加当前目录的所有文件到暂存区：<code>$ git add .</code> 添加每个变化前，都会要求确认</li><li>对于同一个文件的多处变化，可以实现分次提交：<code>$ git add -p</code></li><li>删除工作区文件，并且将这次删除放入暂存区：<code>$ git rm [file1] [file2] ...</code></li><li>停止追踪指定文件，但该文件会保留在工作区：<code>$ git rm --cached [file]</code></li><li>改名文件，并且将这个改名放入暂存区：<code>$ git mv [file-original] [file-renamed]</code></li></ul><h3 id="批量删除文件夹和文件"><a href="#批量删除文件夹和文件" class="headerlink" title="批量删除文件夹和文件"></a>批量删除文件夹和文件</h3><ol><li>硬盘删除文件后，执行<code>$ git status</code>，会提示你仍然需要<code>$ git rm &lt;文件&gt;</code><br>此时如果是要删除大批量文件，这么一个一个命令下去不得累死人啊！其实可以这样（不管之前有没有已经本地物理删除）</li><li>执行<code>$ git rm * -r</code>（记得，cd 到你要删除的目录下。当然 * 可以换成指定目录）这时删除文件已经进入本地缓存区，<br>接下来就是正常的提交操作了<ul><li><code>$ git add .</code> </li><li><code>$ git commit -m &quot;clear&quot;</code></li><li><code>$ git push origin master</code></li></ul></li></ol><h2 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h2><ul><li>提交暂存区到仓库区：<code>$ git commit -m [message]</code></li><li>提交暂存区的指定文件到仓库区：<code>$ git commit [file1] [file2] ... -m [message]</code></li><li>提交工作区自上次commit之后的变化，直接到仓库区：<code>$ git commit -a</code></li><li>提交时显示所有diff信息：<code>$ git commit -v</code></li><li>使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息：<code>$ git commit --amend -m [message]</code></li><li>重做上一次commit，并包括指定文件的新变化：<code>$ git commit --amend [file1] [file2] ...</code></li></ul><h2 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h2><ul><li>列出所有本地分支：<code>$ git branch</code></li><li>列出所有远程分支：<code>$ git branch -r</code></li><li>列出所有本地分支和远程分支：<code>$ git branch -a</code></li><li>新建一个分支，但依然停留在当前分支：<code>$ git branch [branch-name]</code></li><li>新建一个分支，并切换到该分支：<code>$ git checkout -b [branch]</code></li><li>新建一个分支，指向指定commit：<code>$ git branch [branch] [commit]</code></li><li>新建一个分支，与指定的远程分支建立追踪关系：<code>$ git branch --track [branch] [remote-branch]</code></li><li>切换到指定分支，并更新工作区：<code>$ git checkout [branch-name]</code></li><li>切换到上一个分支：<code>$ git checkout -</code></li><li>建立追踪关系，在现有分支与指定的远程分支之间：<code>$ git branch --set-upstream [branch] [remote-branch]</code></li><li>合并指定分支到当前分支：<code>$ git merge [branch]</code></li><li>选择一个commit，合并进当前分支：<code>$ git cherry-pick [commit]</code></li><li>删除分支：<code>$ git branch -d [branch-name]</code></li><li>删除远程分支：<ul><li><code>$ git push origin --delete [branch-name]</code></li><li><code>$ git branch -dr [remote/branch]</code></li></ul></li></ul><h2 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h2><ul><li>列出所有tag：<code>$ git tag</code></li><li>新建一个tag在当前commit：<code>$ git tag [tag]</code></li><li>新建一个tag在指定commit：<code>$ git tag [tag] [commit]</code></li><li>删除本地tag：<code>$ git tag -d [tag]</code></li><li>删除远程tag：<code>$ git push origin :refs/tags/[tagName]</code></li><li>查看tag信息：<code>$ git show [tag]</code></li><li>提交指定tag：<code>$ git push [remote] [tag]</code></li><li>提交所有tag：<code>$ git push [remote] --tags</code></li><li>新建一个分支，指向某个tag：<code>$ git checkout -b [branch] [tag]</code></li></ul><h2 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h2><ul><li>显示有变更的文件：<code>$ git status</code></li><li>显示当前分支的版本历史：<code>$ git log</code></li><li>显示commit历史，以及每次commit发生变更的文件：<code>$ git log --stat</code></li><li>搜索提交历史，根据关键词：<code>$ git log -S [keyword]</code></li><li>显示某个commit之后的所有变动，每个commit占据一行：<code>$ git log [tag] HEAD --pretty=format:%s</code></li><li>显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件：<code>$ git log [tag] HEAD --grep feature</code></li><li>显示某个文件的版本历史，包括文件改名<ul><li><code>$ git log --follow [file]</code></li><li><code>$ git whatchanged [file]</code></li></ul></li><li>显示指定文件相关的每一次diff：<code>$ git log -p [file]</code></li><li>显示过去5次提交：<code>$ git log -5 --pretty --oneline</code></li><li>显示所有提交过的用户，按提交次数排序：<code>$ git shortlog -sn</code></li><li>显示指定文件是什么人在什么时间修改过：<code>$ git blame [file]</code></li><li>显示暂存区和工作区的差异：<code>$ git diff</code></li><li>显示暂存区和上一个commit的差异：<code>$ git diff --cached [file]</code></li><li>显示工作区与当前分支最新commit之间的差异：<code>$ git diff HEAD</code></li><li>显示两次提交之间的差异：<code>$ git diff [first-branch]...[second-branch]</code></li><li>显示今天你写了多少行代码：<code>$ git diff --shortstat &quot;@{0 day ago}&quot;</code></li><li>显示某次提交的元数据和内容变化：<code>$ git show [commit]</code></li><li>显示某次提交发生变化的文件：<code>$ git show --name-only [commit]</code></li><li>显示某次提交时，某个文件的内容：<code>$ git show [commit]:[filename]</code></li><li>显示当前分支的最近几次提交：<code>$ git reflog</code></li></ul><h2 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h2><ul><li>下载远程仓库的所有变动：<code>$ git fetch [remote]</code></li><li>显示所有远程仓库：<code>$ git remote -v</code></li><li>显示某个远程仓库的信息：<code>$ git remote show [remote]</code></li><li>增加一个新的远程仓库，并命名：<code>$ git remote add [shortname] [url]</code></li><li>取回远程仓库的变化，并与本地分支合并：<code>$ git pull [remote] [branch]</code></li><li>上传本地指定分支到远程仓库：<code>$ git push [remote] [branch]</code></li><li>强行推送当前分支到远程仓库，即使有冲突：<code>$ git push [remote] --force</code></li><li>推送所有分支到远程仓库：<code>$ git push [remote] --all</code></li></ul><h2 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h2><ul><li>恢复暂存区的指定文件到工作区：<code>$ git checkout [file]</code></li><li>恢复某个commit的指定文件到暂存区和工作区：<code>$ git checkout [commit] [file]</code></li><li>恢复暂存区的所有文件到工作区：<code>$ git checkout .</code></li><li>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变：<code>$ git reset [file]</code></li><li>重置暂存区与工作区，与上一次commit保持一致：<code>$ git reset --hard</code></li><li>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变：<code>$ git reset [commit]</code></li><li>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致：<code>$ git reset --hard [commit]</code></li><li>重置当前HEAD为指定commit，但保持暂存区和工作区不变：<code>$ git reset --keep [commit]</code></li><li>新建一个commit，用来撤销指定commit后者的所有变化都将被前者抵消，并且应用到当前分支：<code>$ git revert [commit]</code></li><li>暂时将未提交的变化移除，稍后再移入：<ul><li><code>$ git stash</code></li><li><code>$ git stash pop</code></li></ul></li></ul><h2 id="十、其他"><a href="#十、其他" class="headerlink" title="十、其他"></a>十、其他</h2><ul><li>生成一个可供发布的压缩包：<code>$ git archive</code></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></li><li><a href="http://yanhaijing.com/git/2014/11/01/my-git-note/" target="_blank" rel="noopener">http://yanhaijing.com/git/2014/11/01/my-git-note/</a></li><li><a href="http://yanhaijing.com/" target="_blank" rel="noopener">http://yanhaijing.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我每天使用 Git，但是很多命令记不住。一般来说，日常使用只要记住常用的几个命令就可以了。但是熟练使用，恐怕要记住60～100个命令。特此讲解GIT的常用操作命令&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="http://code.skyheng.com/categories/git/"/>
    
    
      <category term="git" scheme="http://code.skyheng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>常用软件与工具整理</title>
    <link href="http://code.skyheng.com/post/31797.html"/>
    <id>http://code.skyheng.com/post/31797.html</id>
    <published>2016-08-01T08:51:27.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中会用到很多的软件，在此记录些常用的开发软件及应用软件的地址，在需要的时候可以快速找到</p><a id="more"></a><h2 id="开发软件类"><a href="#开发软件类" class="headerlink" title="开发软件类"></a>开发软件类</h2><h3 id="eclipse-jee-neon"><a href="#eclipse-jee-neon" class="headerlink" title="eclipse-jee-neon"></a>eclipse-jee-neon</h3><blockquote><p>官网地址：<a href="http://www.eclipse.org/downloads/" title="官网地址" target="_blank" rel="noopener">http://www.eclipse.org/downloads/</a></p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：<ul><li>32位：<a href="http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-win32.zip" target="_blank" rel="noopener">http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-win32.zip</a></li><li>64位：<a href="http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-win32-x86_64.zip" target="_blank" rel="noopener">http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-win32-x86_64.zip</a></li></ul></li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云地址：</li><li>360云盘地址：</li></ol><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="SVN-Subversive"><a href="#SVN-Subversive" class="headerlink" title="SVN(Subversive)"></a>SVN(Subversive)</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Eclipse-SVN-插件"><a href="#Eclipse-SVN-插件" class="headerlink" title="Eclipse SVN 插件"></a>Eclipse SVN 插件</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Xshell-amp-Xftp"><a href="#Xshell-amp-Xftp" class="headerlink" title="Xshell&amp;Xftp"></a>Xshell&amp;Xftp</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="nexus"><a href="#nexus" class="headerlink" title="nexus"></a>nexus</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h2 id="工具软件类"><a href="#工具软件类" class="headerlink" title="工具软件类"></a>工具软件类</h2><h3 id="MarkdownPad"><a href="#MarkdownPad" class="headerlink" title="MarkdownPad"></a>MarkdownPad</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Microsoft-Office"><a href="#Microsoft-Office" class="headerlink" title="Microsoft Office"></a>Microsoft Office</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="Vmware"><a href="#Vmware" class="headerlink" title="Vmware"></a>Vmware</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h3 id="NotePad"><a href="#NotePad" class="headerlink" title="NotePad++"></a>NotePad++</h3><blockquote><p>官网地址：</p></blockquote><ol><li>官网下载地址：</li><li>镜像下载地址：</li><li>百度云盘地址：</li><li>360云盘地址：</li></ol><h2 id="办公和文字编辑类"><a href="#办公和文字编辑类" class="headerlink" title="办公和文字编辑类"></a>办公和文字编辑类</h2><ul><li><a href="https://www.microsoft.com/zh-cn/download/office.aspx" target="_blank" rel="noopener">Micorsoft Office Professional Plus 2013</a>：大名鼎鼎的办公软件，不多说</li><li><a href="http://www.nordritools.com" target="_blank" rel="noopener">Nordri Tools</a>：基于PowerPoint的“一键化”效率插件，做幻灯片时省力很多</li><li><a href="https://acrobat.adobe.com/us/en/" target="_blank" rel="noopener">Adobe Acrobat 11 Pro</a>：Adobe Reader的升级版,可以编辑PDF格式文档</li><li><a href="https://www.yinxiang.com/" target="_blank" rel="noopener">印象笔记</a>：试过很多笔记类应用，包括为知笔记等，还是觉得印象笔记最好用</li><li><a href="http://markdown.xiaoshujiang.com/" target="_blank" rel="noopener">小书匠</a>：漂亮的Markdown编辑器，写东西时很享受，本文就是使用小书匠编辑器写成的</li><li><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a>：文本/代码编辑器，支持<a href="http://sspai.com/25137" target="_blank" rel="noopener">Markdown</a>格式，付费软件，但可以无限期试用（良心啊！）</li><li><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a>：开源文本/代码编辑器</li><li><a href="https://www.zybuluo.com/mdeditor#310296" target="_blank" rel="noopener">Cmd Markdown</a>：另一款<a href="http://sspai.com/25137" target="_blank" rel="noopener">Markdown</a>编辑器</li></ul><h2 id="多媒体处理类"><a href="#多媒体处理类" class="headerlink" title="多媒体处理类"></a>多媒体处理类</h2><ul><li>Adobe Photoshop CC 2014</li><li>Adobe Illustrator CC 2014</li><li>Adobe Audition CC 2014</li><li>Adobe Preniere Pro CC</li><li>Corel Vedio Studio Pro Ⅹ5</li><li>Corel Vedio Studio Pro Ⅹ8</li></ul><h2 id="多媒体播放和管理类"><a href="#多媒体播放和管理类" class="headerlink" title="多媒体播放和管理类"></a>多媒体播放和管理类</h2><ul><li><a href="http://potplayer.daum.net/" target="_blank" rel="noopener">Potplayer</a>：强大的多媒体播放器，可定制化程度高</li><li><a href="http://www.foobar2000.org/" target="_blank" rel="noopener">Foobar 2000</a>：专业级音频播放器，可定制化程度高，推荐<a href="http://dreamland.blog.51cto.com/417830/1541542" target="_blank" rel="noopener">Foobox</a>皮肤</li><li><a href="https://picasa.google.com/" target="_blank" rel="noopener">Picasa</a>：谷歌出品的图片管理器，可进行编辑和管理，尤其适合大量图片的情形，可以和<a href="https://www.google.com/drive/" target="_blank" rel="noopener">Google Drive</a>进行同步</li><li><a href="http://www.pcfreetime.com/CN/index.html" target="_blank" rel="noopener">格式工厂</a>：国产软件，进行各类文件格式转换的优质工具</li></ul><h2 id="系统维护和工具类"><a href="#系统维护和工具类" class="headerlink" title="系统维护和工具类"></a>系统维护和工具类</h2><ul><li><a href="http://www.wisecleaner.com/wise-care-365.html" target="_blank" rel="noopener">Wise Care 365</a>：电脑清洁，系统优化，有免费版可以选择，也可以选择与之类似的<a href="https://www.piriform.com/ccleaner" target="_blank" rel="noopener">CCleaner</a></li><li><a href="http://www.geekuninstaller.com/" target="_blank" rel="noopener">Geek Uninstaller</a>：软件卸载工具，老是怕软件卸载不干净的同学可以省点心了</li><li><a href="http://mofang.ruanmei.com/" target="_blank" rel="noopener">软媒魔方</a>：国产系统管理软件，提供很多实用的功能，官方提供绿色便携版本，值得拥有</li><li><a href="http://cn.ejie.me/" target="_blank" rel="noopener">Clover</a>：让资源管理器有浏览器一样的标签功能，用了之后就离不开了，极大地提高了在不同文件夹间转换时的工作效率，电脑任务栏最左边长期固定的就是Clover的三叶草图标。安装后拷贝软件所在文件夹再将软件卸载可以得到便携版本</li><li><a href="http://www.7-zip.org/" target="_blank" rel="noopener">7 Zip</a>：老牌开源压缩软件，软件极为精简，压缩率较高</li><li><a href="https://veracrypt.codeplex.com/" target="_blank" rel="noopener">VeraCrypt</a>：高安全性加密软件，享有很高声誉的TrueCrypt的继承者</li><li><a href="http://rime.im/" target="_blank" rel="noopener">小狼毫输入法</a>：内置数十种输入方案，可定制程度高，输入各种各样的标点非常方便，简洁</li><li><a href="http://pinyin.sogou.com/" target="_blank" rel="noopener">搜狗拼音输入法</a>：国内使用人数多，与小狼毫相比，词语联想、云端计算和词库功能较为突出。但由于官方提供的安装包存在插件和广告，因此推荐这个链接中的第三方版本</li><li><a href="https://calibre-ebook.com/" target="_blank" rel="noopener">Calibre</a>：电子书管理和格式转换工具，读一些电子书的时候用得着</li><li><a href="http://ngwin.com/picpick" target="_blank" rel="noopener">Picpick</a>：截图软件，各种截图姿势都能玩，进行比较多的截图时很舒坦，收费软件，但是个人可以免费使用</li></ul><h2 id="上网和浏览器类"><a href="#上网和浏览器类" class="headerlink" title="上网和浏览器类"></a>上网和浏览器类</h2><ul><li><a href="http://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html" target="_blank" rel="noopener">Google Chrome</a>：几乎是最好的浏览器，，目前的主要浏览器，很多国内的浏览器都是基于Chromium内核，Google出品，不多说了</li><li><a href="http://chrome.360.cn/" target="_blank" rel="noopener">Mozilla Firefox</a>：老牌开源浏览器，风骨犹在，我作为备用和测试用浏览器，推荐下载国际版，而不要下载中国版</li><li><a href="http://chrome.360.cn/" target="_blank" rel="noopener">360极速浏览器</a>：基于Chromium开源项目，国产桌面浏览器中唯一我认为不错的（虽然想想是360的产品还是挺怕的），界面简洁，运行较快，扩展较多，且可以从Chrome中移植扩展程序，有诸多实用功能，与360云盘整合很好</li><li><a href="https://www.torproject.org/" target="_blank" rel="noopener">Tor Browser</a>：知名网络匿名工具，同时可以突破网络限制，又名洋葱路由器，斯诺登使用过</li><li><a href="https://getlantern.org/" target="_blank" rel="noopener">Lantern</a>：新版Lantern非常给力，支持Windows，安卓等多平台</li></ul><h2 id="下载和存储类"><a href="#下载和存储类" class="headerlink" title="下载和存储类"></a>下载和存储类</h2><ul><li><a href="http://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>：歌单和评论功能做得非常好，“云村”（网易云音乐用户对该平台的称呼）的氛围那也是极好的</li><li><a href="http://yun.baidu.com/" target="_blank" rel="noopener">百度云</a>：目前的主流云盘，可以找到很多资源</li><li><a href="http://yunpan.360.cn/" target="_blank" rel="noopener">360云盘</a>：优点是存储空间大</li><li><a href="http://ll.www.utorrent.com/intl/zh/" target="_blank" rel="noopener">uTorrent</a>：BT下载工具，上校园IPV6网站下载各种电影电视的同学都知道它的好</li><li><a href="http://www.iplaysoft.com/music-spy.html" target="_blank" rel="noopener">Music Spy</a>：嘘……这个软件到此为止吧，不要在告诉别人了，它几乎什么音乐都可以下载我会告诉你吗</li><li><a href="https://www.internetdownloadmanager.com/" target="_blank" rel="noopener">Internet Download Manager</a>：下载工具，较大的文件下载起来速度很快，但并不支持BT，也不支持云盘链接</li><li><a href="https://www.getsync.com/" target="_blank" rel="noopener">BitTorrent Sync</a>：BT界的又一发明创造，相当于分布式云盘，不依赖任何云端服务器，适合自己在不同设备间同步文件，以及给小伙伴传送文件</li><li><a href="http://vip.xunlei.com/fast_xl/" target="_blank" rel="noopener">迅雷极速版</a>：迅雷的广告大家有目共睹，幸好它有一个良心的极速版，完全没有广告</li></ul><h2 id="学习类"><a href="#学习类" class="headerlink" title="学习类"></a>学习类</h2><ul><li>金山词霸：最开始是使用网易有道词典的，但有道的广告实在是太多了，启动界面等待时间很长，我就是想查个单词你是想闹哪样。而金山词霸，用起来就是爽，无广告，打开迅速进入输入单词状态并打开英文输入状态，清爽宜人，词典软件就该这么玩</li><li><a href="http://www.inoreader.com/" target="_blank" rel="noopener">Inoreader</a>：这是神器啊！我再说一遍，这是神器啊！RSS阅读几乎最佳啊！用了之后流连忘返在博客的海洋中不想出来啊！使用极为简单，将博客网址粘贴到里头就好了，例如你可以将本博客的网址<a href="http://code.skyheng.com"></a>粘贴到里头就可以在不同地方收到我的博客的更新了。当然啦，你更应该订阅的是众多在互联网上写着博客的各路牛人。如果你需要推荐，可以在文章末尾评论里留言或直接联系我</li><li>Pocket Casts：安卓平台的播客订阅</li><li><a href="http://www.lizhi.fm/" target="_blank" rel="noopener">荔枝Fm</a>：国内较好的播客平台</li><li>WPS Office：手机端文档处理比较强大</li><li><a href="http://wufazhuce.com/" target="_blank" rel="noopener">一个</a>：韩寒监制的文学性App，值得一读，但3.0版本稍显花哨，不如以前简洁</li><li><a href="http://www.duokan.com/" target="_blank" rel="noopener">多看阅读</a>：手机端阅读体验很好，支持本地文件导入，有PDF裁剪和重排功能，下载的电子书就有了着落</li><li>Zine：极为精致的手机写作App，排版很漂亮</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在工作中会用到很多的软件，在此记录些常用的开发软件及应用软件的地址，在需要的时候可以快速找到&lt;/p&gt;
    
    </summary>
    
      <category term="software" scheme="http://code.skyheng.com/categories/software/"/>
    
    
      <category term="software" scheme="http://code.skyheng.com/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令大全</title>
    <link href="http://code.skyheng.com/post/23662.html"/>
    <id>http://code.skyheng.com/post/23662.html</id>
    <published>2016-08-01T08:51:27.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>常见的Linux常用命令大全<br><a id="more"></a></p><h1 id="Linux常用命令大全"><a href="#Linux常用命令大全" class="headerlink" title="Linux常用命令大全"></a>Linux常用命令大全</h1><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><ul><li><code>arch</code> 显示机器的处理器架构(1) </li><li><code>uname -m</code> 显示机器的处理器架构(2) </li><li><code>uname -r</code> 显示正在使用的内核版本 </li><li><code>dmidecode -q</code> 显示硬件系统部件 - (SMBIOS / DMI) </li><li><code>hdparm -i /dev/hda</code> 罗列一个磁盘的架构特性 </li><li><code>hdparm -tT /dev/sda</code> 在磁盘上执行测试性读取操作 </li><li><code>cat /proc/cpuinfo</code> 显示CPU info的信息 </li><li><code>cat /proc/interrupts</code> 显示中断 </li><li><code>cat /proc/meminfo</code> 校验内存使用 </li><li><code>cat /proc/swaps</code> 显示哪些swap被使用 </li><li><code>cat /proc/version</code> 显示内核的版本 </li><li><code>cat /proc/net/dev</code> 显示网络适配器及统计 </li><li><code>cat /proc/mounts</code> 显示已加载的文件系统 </li><li><code>lspci -tv</code> 罗列 PCI 设备 </li><li><code>lsusb -tv</code> 显示 USB 设备 </li><li><code>date</code> 显示系统日期 </li><li><code>cal 2007</code> 显示2007年的日历表 </li><li><code>date 041217002007.00</code> 设置日期和时间 - 月日时分年.秒 </li><li><code>clock -w</code> 将时间修改保存到 BIOS </li></ul><h2 id="关机-系统的关机、重启以及登出"><a href="#关机-系统的关机、重启以及登出" class="headerlink" title="关机 (系统的关机、重启以及登出 )"></a>关机 (系统的关机、重启以及登出 )</h2><ul><li><code>shutdown -h now</code> 关闭系统(1) </li><li><code>init 0</code> 关闭系统(2) </li><li><code>telinit 0</code> 关闭系统(3) </li><li><code>shutdown -h hours:minutes &amp;</code> 按预定时间关闭系统 </li><li><code>shutdown -c</code> 取消按预定时间关闭系统 </li><li><code>shutdown -r now</code> 重启(1) </li><li><code>reboot</code> 重启(2) </li><li><code>logout</code> 注销 </li></ul><h2 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a>文件和目录</h2><ul><li><code>cd /home</code> 进入 ‘/ home’ 目录’ </li><li><code>cd ..</code> 返回上一级目录 </li><li><code>cd ../..</code> 返回上两级目录 </li><li><code>cd</code> 进入个人的主目录 </li><li><code>cd ~user1</code> 进入个人的主目录 </li><li><code>cd -</code> 返回上次所在的目录 </li><li><code>pwd</code> 显示工作路径 </li><li><code>ls</code> 查看目录中的文件 </li><li><code>ls -F</code> 查看目录中的文件 </li><li><code>ls -l</code> 显示文件和目录的详细资料 </li><li><code>ls -a</code> 显示隐藏文件 </li><li><code>ls *[0-9]*</code> 显示包含数字的文件名和目录名 </li><li><code>tree</code> 显示文件和目录由根目录开始的树形结构(1) </li><li><code>lstree</code> 显示文件和目录由根目录开始的树形结构(2) </li><li><code>mkdir dir1</code> 创建一个叫做 ‘dir1’ 的目录’ </li><li><code>mkdir dir1 dir2</code> 同时创建两个目录 </li><li><code>mkdir -p /tmp/dir1/dir2</code> 创建一个目录树 </li><li><code>rm -f file1</code> 删除一个叫做 ‘file1’ 的文件’ </li><li><code>rmdir dir1</code> 删除一个叫做 ‘dir1’ 的目录’ </li><li><code>rm -rf dir1</code> 删除一个叫做 ‘dir1’ 的目录并同时删除其内容 </li><li><code>rm -rf dir1 dir2</code> 同时删除两个目录及它们的内容 </li><li><code>mv dir1 new_dir</code> 重命名/移动 一个目录 </li><li><code>cp file1 file2</code> 复制一个文件 </li><li><code>cp dir/* .</code> 复制一个目录下的所有文件到当前工作目录 </li><li><code>cp -a /tmp/dir1 .</code> 复制一个目录到当前工作目录 </li><li><code>cp -a dir1 dir2</code> 复制一个目录 </li><li><code>ln -s file1 lnk1</code> 创建一个指向文件或目录的软链接 </li><li><code>ln file1 lnk1</code> 创建一个指向文件或目录的物理链接 </li><li><code>touch -t 0712250000 file1</code> 修改一个文件或目录的时间戳 - (YYMMDDhhmm) </li></ul><h2 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h2><ul><li><code>find / -name file1</code> 从 ‘/‘ 开始进入根文件系统搜索文件和目录 </li><li><code>find / -user user1</code> 搜索属于用户 ‘user1’ 的文件和目录 </li><li><code>find /home/user1 -name \*.bin</code> 在目录 <code>&#39;/ home/user1&#39;</code> 中搜索带有’.bin’ 结尾的文件 </li><li><code>find /usr/bin -type f -atime +100</code> 搜索在过去100天内未被使用过的执行文件 </li><li><code>find /usr/bin -type f -mtime -10</code> 搜索在10天内被创建或者修改过的文件 </li><li><code>find / -name \*.rpm -exec chmod 755 &#39;{}&#39; \;</code> 搜索以 ‘.rpm’ 结尾的文件并定义其权限 </li><li><code>find / -xdev -name \*.rpm</code> 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备 </li><li><code>locate \*.ps</code> 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </li><li><code>whereis halt</code> 显示一个二进制文件、源码或man的位置 </li><li><code>which halt</code> 显示一个二进制文件或可执行文件的完整路径 </li></ul><h2 id="挂载一个文件系统"><a href="#挂载一个文件系统" class="headerlink" title="挂载一个文件系统"></a>挂载一个文件系统</h2><ul><li><code>mount /dev/hda2 /mnt/hda2</code> 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在 </li><li><code>umount /dev/hda2</code> 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出 </li><li><code>fuser -km /mnt/hda2</code> 当设备繁忙时强制卸载 </li><li><code>umount -n /mnt/hda2</code> 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 </li><li><code>mount /dev/fd0 /mnt/floppy</code> 挂载一个软盘 </li><li><code>mount /dev/cdrom /mnt/cdrom</code> 挂载一个cdrom或dvdrom </li><li><code>mount /dev/hdc /mnt/cdrecorder</code> 挂载一个cdrw或dvdrom </li><li><code>mount /dev/hdb /mnt/cdrecorder</code> 挂载一个cdrw或dvdrom </li><li><code>mount -o loop file.iso /mnt/cdrom</code> 挂载一个文件或ISO镜像文件 </li><li><code>mount -t vfat /dev/hda5 /mnt/hda5</code> 挂载一个Windows FAT32文件系统 </li><li><code>mount /dev/sda1 /mnt/usbdisk</code> 挂载一个usb 捷盘或闪存设备 </li><li><code>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share</code> 挂载一个windows网络共享 </li></ul><h2 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a>磁盘空间</h2><ul><li><code>df -h</code> 显示已经挂载的分区列表 </li><li><code>ls -lSr |more</code> 以尺寸大小排列文件和目录 </li><li><code>du -sh dir1</code> 估算目录 ‘dir1’ 已经使用的磁盘空间’ </li><li><code>du -sk * | sort -rn</code> 以容量大小为依据依次显示文件和目录的大小 </li><li><code>rpm -q -a --qf &#39;%10{SIZE}t%{NAME}n&#39; | sort -k1,1n</code> 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) </li><li><code>dpkg-query -W -f=&#39;${Installed-Size;10}t${Package}n&#39; | sort -k1,1n</code> 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) </li></ul><h2 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a>用户和群组</h2><ul><li><code>groupadd group_name</code> 创建一个新用户组 </li><li><code>groupdel group_name</code> 删除一个用户组 </li><li><code>groupmod -n new_group_name old_group_name</code> 重命名一个用户组 </li><li><code>useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1</code> 创建一个属于 “admin” 用户组的用户 </li><li><code>useradd user1</code> 创建一个新用户 </li><li><code>userdel -r user1</code> 删除一个用户 ( ‘-r’ 排除主目录) </li><li><code>usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1</code> 修改用户属性 </li><li><code>passwd</code> 修改口令 </li><li><code>passwd user1</code> 修改一个用户的口令 (只允许root执行) </li><li><code>chage -E 2005-12-31 user1</code> 设置用户口令的失效期限 </li><li><code>pwck 检查 &#39;/etc/passwd&#39;</code> 的文件格式和语法修正以及存在的用户 </li><li><code>grpck 检查 &#39;/etc/passwd&#39;</code> 的文件格式和语法修正以及存在的群组 </li><li><code>newgrp group_name</code> 登陆进一个新的群组以改变新创建文件的预设群组 </li></ul><h2 id="文件的权限-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</h2><ul><li><code>ls -lh</code> 显示权限 </li><li><code>ls /tmp | pr -T5 -W$COLUMNS</code> 将终端划分成5栏显示 </li><li><code>chmod ugo+rwx directory1</code> 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 </li><li><code>chmod go-rwx directory1</code> 删除群组(g)与其他人(o)对目录的读写执行权限 </li><li><code>chown user1 file1</code> 改变一个文件的所有人属性 </li><li><code>chown -R user1 directory1</code> 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </li><li><code>chgrp group1 file1</code> 改变文件的群组 </li><li><code>chown user1:group1 file1</code> 改变一个文件的所有人和群组属性 </li><li><code>find / -perm -u+s</code> 罗列一个系统中所有使用了SUID控制的文件 </li><li><code>chmod u+s /bin/file1</code> 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 </li><li><code>chmod u-s /bin/file1</code> 禁用一个二进制文件的 SUID位 </li><li><code>chmod g+s /home/public</code> 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 </li><li><code>chmod g-s /home/public</code> 禁用一个目录的 SGID 位 </li><li><code>chmod o+t /home/public</code> 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 </li><li><code>chmod o-t /home/public</code> 禁用一个目录的 STIKY 位 </li></ul><h2 id="文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</h2><ul><li><code>chattr +a file1</code> 只允许以追加方式读写文件 </li><li><code>chattr +c file1</code> 允许这个文件能被内核自动压缩/解压 </li><li><code>chattr +d file1</code> 在进行文件系统备份时，dump程序将忽略这个文件 </li><li><code>chattr +i file1</code> 设置成不可变的文件，不能被删除、修改、重命名或者链接 </li><li><code>chattr +s file1</code> 允许一个文件被安全地删除 </li><li><code>chattr +S file1</code> 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 </li><li><code>chattr +u file1</code> 若文件被删除，系统会允许你在以后恢复这个被删除的文件 </li><li><code>lsattr</code> 显示特殊的属性 </li></ul><h2 id="打包和压缩文件"><a href="#打包和压缩文件" class="headerlink" title="打包和压缩文件"></a>打包和压缩文件</h2><ul><li><code>bunzip2 file1.bz2</code> 解压一个叫做 ‘file1.bz2’的文件 </li><li><code>bzip2 file1</code> 压缩一个叫做 ‘file1’ 的文件 </li><li><code>gunzip file1.gz</code> 解压一个叫做 ‘file1.gz’的文件 </li><li><code>gzip file1</code> 压缩一个叫做 ‘file1’的文件 </li><li><code>gzip -9 file1</code> 最大程度压缩 </li><li><code>rar a file1.rar test_file</code> 创建一个叫做 ‘file1.rar’ 的包 </li><li><code>rar a file1.rar file1 file2 dir1</code> 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’ </li><li><code>rar x file1.rar</code> 解压rar包 </li><li><code>unrar x file1.rar</code> 解压rar包 </li><li><code>tar -cvf archive.tar file1</code> 创建一个非压缩的 tarball </li><li><code>tar -cvf archive.tar file1 file2 dir1</code> 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件 </li><li><code>tar -tf archive.tar</code> 显示一个包中的内容 </li><li><code>tar -xvf archive.tar</code> 释放一个包 </li><li><code>tar -xvf archive.tar -C /tmp</code> 将压缩包释放到 /tmp目录下 </li><li><code>tar -cvfj archive.tar.bz2 dir1</code> 创建一个bzip2格式的压缩包 </li><li><code>tar -xvfj archive.tar.bz2</code> 解压一个bzip2格式的压缩包 </li><li><code>tar -cvfz archive.tar.gz dir1</code> 创建一个gzip格式的压缩包 </li><li><code>tar -xvfz archive.tar.gz</code> 解压一个gzip格式的压缩包 </li><li><code>zip file1.zip file1</code> 创建一个zip格式的压缩包 </li><li><code>zip -r file1.zip file1 file2 dir1</code> 将几个文件和目录同时压缩成一个zip格式的压缩包 </li><li><code>unzip file1.zip</code> 解压一个zip格式压缩包 </li></ul><h2 id="RPM-包-（Fedora-Redhat及类似系统）"><a href="#RPM-包-（Fedora-Redhat及类似系统）" class="headerlink" title="RPM 包 - （Fedora, Redhat及类似系统）"></a>RPM 包 - （Fedora, Redhat及类似系统）</h2><ul><li><code>rpm -ivh package.rpm</code> 安装一个rpm包 </li><li><code>rpm -ivh --nodeeps package.rpm</code> 安装一个rpm包而忽略依赖关系警告 </li><li><code>rpm -U package.rpm</code> 更新一个rpm包但不改变其配置文件 </li><li><code>rpm -F package.rpm</code> 更新一个确定已经安装的rpm包 </li><li><code>rpm -e package_name.rpm</code> 删除一个rpm包 </li><li><code>rpm -qa</code> 显示系统中所有已经安装的rpm包 </li><li><code>rpm -qa | grep httpd</code> 显示所有名称中包含 “httpd” 字样的rpm包 </li><li><code>rpm -qi package_name</code> 获取一个已安装包的特殊信息 </li><li><code>rpm -qg &quot;System Environment/Daemons&quot;</code> 显示一个组件的rpm包 </li><li><code>rpm -ql package_name</code> 显示一个已经安装的rpm包提供的文件列表 </li><li><code>rpm -qc package_name</code> 显示一个已经安装的rpm包提供的配置文件列表 </li><li><code>rpm -q package_name --whatrequires</code> 显示与一个rpm包存在依赖关系的列表 </li><li><code>rpm -q package_name --whatprovides</code> 显示一个rpm包所占的体积 </li><li><code>rpm -q package_name --scripts</code> 显示在安装/删除期间所执行的脚本l </li><li><code>rpm -q package_name --changelog</code> 显示一个rpm包的修改历史 </li><li><code>rpm -qf /etc/httpd/conf/httpd.conf</code> 确认所给的文件由哪个rpm包所提供 </li><li><code>rpm -qp package.rpm -l</code> 显示由一个尚未安装的rpm包提供的文件列表 </li><li><code>rpm --import /media/cdrom/RPM-GPG-KEY</code> 导入公钥数字证书 </li><li><code>rpm --checksig package.rpm</code> 确认一个rpm包的完整性 </li><li><code>rpm -qa gpg-pubkey</code> 确认已安装的所有rpm包的完整性 </li><li><code>rpm -V package_name</code> 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 </li><li><code>rpm -Va</code> 检查系统中所有已安装的rpm包- 小心使用 </li><li><code>rpm -Vp package.rpm</code> 确认一个rpm包还未安装 </li><li><code>rpm2cpio package.rpm | cpio --extract --make-directories *bin*</code> 从一个rpm包运行可执行文件 </li><li><code>rpm -ivh /usr/src/redhat/RPMS/</code>arch<code>/package.rpm</code> 从一个rpm源码安装一个构建好的包 </li><li><code>rpmbuild --rebuild package_name.src.rpm</code> 从一个rpm源码构建一个 rpm 包 </li></ul><h2 id="APT-软件工具-Debian-Ubuntu-以及类似系统"><a href="#APT-软件工具-Debian-Ubuntu-以及类似系统" class="headerlink" title="APT 软件工具 (Debian, Ubuntu 以及类似系统)"></a>APT 软件工具 (Debian, Ubuntu 以及类似系统)</h2><ul><li><code>apt-get install package_name</code> 安装/更新一个 deb 包 </li><li><code>apt-cdrom install package_name</code> 从光盘安装/更新一个 deb 包 </li><li><code>apt-get update</code> 升级列表中的软件包 </li><li><code>apt-get upgrade</code> 升级所有已安装的软件 </li><li><code>apt-get remove package_name</code> 从系统删除一个deb包 </li><li><code>apt-get check</code> 确认依赖的软件仓库正确 </li><li><code>apt-get clean</code> 从下载的软件包中清理缓存 </li><li><code>apt-cache search searched-package</code> 返回包含所要搜索字符串的软件包名称 </li></ul><h2 id="YUM-软件包升级器-（Fedora-RedHat及类似系统）"><a href="#YUM-软件包升级器-（Fedora-RedHat及类似系统）" class="headerlink" title="YUM 软件包升级器 - （Fedora, RedHat及类似系统）"></a>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</h2><pre><code>yum install package_name 下载并安装一个rpm包 yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 yum update package_name.rpm 更新当前系统中所有安装的rpm包 yum update package_name 更新一个rpm包 yum remove package_name 删除一个rpm包 yum list 列出当前系统中安装的所有包 yum search package_name 在rpm仓库中搜寻软件包 yum clean packages 清理rpm缓存删除下载的包 yum clean headers 删除所有头文件 yum clean all 删除所有缓存的包和头文件 </code></pre><h2 id="DEB-包-Debian-Ubuntu-以及类似系统"><a href="#DEB-包-Debian-Ubuntu-以及类似系统" class="headerlink" title="DEB 包 (Debian, Ubuntu 以及类似系统)"></a>DEB 包 (Debian, Ubuntu 以及类似系统)</h2><pre><code>dpkg -i package.deb 安装/更新一个 deb 包 dpkg -r package_name 从系统删除一个 deb 包 dpkg -l 显示系统中所有已经安装的 deb 包 dpkg -l | grep httpd 显示所有名称中包含 &quot;httpd&quot; 字样的deb包 dpkg -s package_name 获得已经安装在系统中一个特殊包的信息 dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表 dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表 dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </code></pre><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><pre><code>cat file1 从第一个字节开始正向查看文件的内容 tac file1 从最后一行开始反向查看一个文件的内容 more file1 查看一个长文件的内容 less file1 类似于 &apos;more&apos; 命令，但是它允许在文件中和正向操作一样的反向操作 head -2 file1 查看一个文件的前两行 tail -2 file1 查看一个文件的最后两行 tail -f /var/log/messages 实时查看被添加到一个文件中的内容 </code></pre><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><pre><code>cat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT cat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 grep Aug /var/log/messages 在文件 &apos;/var/log/messages&apos;中查找关键词&quot;Aug&quot; grep ^Aug /var/log/messages 在文件 &apos;/var/log/messages&apos;中查找以&quot;Aug&quot;开始的词汇 grep [0-9] /var/log/messages 选择 &apos;/var/log/messages&apos; 文件中所有包含数字的行 grep Aug -R /var/log/* 在目录 &apos;/var/log&apos; 及随后的目录中搜索字符串&quot;Aug&quot; sed &apos;s/stringa1/stringa2/g&apos; example.txt 将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot; sed &apos;/^$/d&apos; example.txt 从example.txt文件中删除所有空白行 sed &apos;/ *#/d; /^$/d&apos; example.txt 从example.txt文件中删除所有注释和空白行 echo &apos;esempio&apos; | tr &apos;[:lower:]&apos; &apos;[:upper:]&apos; 合并上下单元格内容 sed -e &apos;1d&apos; result.txt 从文件example.txt 中排除第一行 sed -n &apos;/stringa1/p&apos; 查看只包含词汇 &quot;string1&quot;的行 sed -e &apos;s/ *$//&apos; example.txt 删除每一行最后的空白字符 sed -e &apos;s/stringa1//g&apos; example.txt 从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部 sed -n &apos;1,5p;5q&apos; example.txt 查看从第一行到第5行内容 sed -n &apos;5p;5q&apos; example.txt 查看第5行 sed -e &apos;s/00*/0/g&apos; example.txt 用单个零替换多个零 cat -n file1 标示文件的行数 cat example.txt | awk &apos;NR%2==1&apos; 删除example.txt文件中的所有偶数行 echo a b c | awk &apos;{print $1}&apos; 查看一行第一栏 echo a b c | awk &apos;{print $1,$3}&apos; 查看一行的第一和第三栏 paste file1 file2 合并两个文件或两栏的内容 paste -d &apos;+&apos; file1 file2 合并两个文件或两栏的内容，中间用&quot;+&quot;区分 sort file1 file2 排序两个文件的内容 sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) sort file1 file2 | uniq -u 删除交集，留下其他的行 sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) comm -1 file1 file2 比较两个文件的内容只删除 &apos;file1&apos; 所包含的内容 comm -2 file1 file2 比较两个文件的内容只删除 &apos;file2&apos; 所包含的内容 comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </code></pre><h2 id="解压war包"><a href="#解压war包" class="headerlink" title="解压war包"></a>解压war包</h2><pre><code>jar -xvf ROOT.war (前提是要安装Jdk)jar -cvfM0 ROOT.war ./  把当前目录下的所有文件打包成ROOT.war</code></pre><h2 id="字符设置和文件格式转换"><a href="#字符设置和文件格式转换" class="headerlink" title="字符设置和文件格式转换"></a>字符设置和文件格式转换</h2><pre><code>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html recode -l | more 显示所有允许的转换格式 </code></pre><h2 id="文件系统分析"><a href="#文件系统分析" class="headerlink" title="文件系统分析"></a>文件系统分析</h2><pre><code>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块 fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性 fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性 fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </code></pre><h2 id="初始化一个文件系统"><a href="#初始化一个文件系统" class="headerlink" title="初始化一个文件系统"></a>初始化一个文件系统</h2><pre><code>mkfs /dev/hda1 在hda1分区创建一个文件系统 mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 fdformat -n /dev/fd0 格式化一个软盘 mkswap /dev/hda3 创建一个swap文件系统 </code></pre><h2 id="SWAP文件系统"><a href="#SWAP文件系统" class="headerlink" title="SWAP文件系统"></a>SWAP文件系统</h2><pre><code>mkswap /dev/hda3 创建一个swap文件系统 swapon /dev/hda3 启用一个新的swap文件系统 swapon /dev/hda2 /dev/hdb3 启用两个swap分区 </code></pre><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><pre><code>dump -0aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的完整备份 dump -1aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的交互式备份 restore -if /tmp/home0.bak 还原一个交互式备份 rsync -rogpav --delete /home /tmp 同步两边的目录 rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过SSH通道rsync rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录 rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录 dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &apos;dd of=hda.gz&apos; 通过ssh在远程主机上执行一次备份本地磁盘的操作 dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 tar -Puf backup.tar /home/user 执行一次对 &apos;/home/user&apos; 目录的交互式备份操作 ( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &apos;cd /home/share/ &amp;&amp; tar x -p&apos; 通过ssh在远程目录中复制一个目录内容 ( tar c /home ) | ssh -C user@ip_addr &apos;cd /home/backup-home &amp;&amp; tar x -p&apos; 通过ssh在远程目录中复制一个本地目录 tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 find /home/user1 -name &apos;*.txt&apos; | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 &apos;.txt&apos; 结尾的文件到另一个目录 find /var/log -name &apos;*.log&apos; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 &apos;.log&apos; 结尾的文件并做成一个bzip包 dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </code></pre><h2 id="光盘"><a href="#光盘" class="headerlink" title="光盘"></a>光盘</h2><pre><code>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容 mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件 mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件 mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件 cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件 gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件 mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件 cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中 cd-paranoia -- &quot;-3&quot; 从一个CD光盘转录音轨到 wav 文件中（参数-3） cdrecord --scanbus 扫描总线以识别scsi通道 dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD </code></pre><h2 id="网络-（以太网和WIFI无线）"><a href="#网络-（以太网和WIFI无线）" class="headerlink" title="网络 - （以太网和WIFI无线）"></a>网络 - （以太网和WIFI无线）</h2><pre><code>ifconfig eth0 显示一个以太网卡的配置 ifup eth0 启用一个 &apos;eth0&apos; 网络设备 ifdown eth0 禁用一个 &apos;eth0&apos; 网络设备 ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址 ifconfig eth0 promisc 设置 &apos;eth0&apos; 成混杂模式以嗅探数据包 (sniffing) dhclient eth0 以dhcp模式启用 &apos;eth0&apos; route -n show routing table route add -net 0/0 gw IP_Gateway configura default gateway route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network &apos;192.168.0.0/16&apos; route del 0/0 gw IP_gateway remove static route echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward activate ip routing hostname show hostname of system host www.example.com lookup hostname to resolve name to ip address and viceversa(1) nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2) ip link show show link status of all interfaces mii-tool eth0 show link status of &apos;eth0&apos; ethtool eth0 show statistics of network card &apos;eth0&apos; netstat -tup show all active network connections and their PID netstat -tupl show all network services listening on the system and their PID tcpdump tcp port 80 show all HTTP traffic iwlist scan show wireless networks iwconfig eth1 show configuration of a wireless network card hostname show hostname host www.example.com lookup hostname to resolve name to ip address and viceversa nslookup www.example.com lookup hostname to resolve name to ip address and viceversa whois www.example.com lookup on Whois database </code></pre><h2 id="Microsoft-Windows-networks-SAMBA"><a href="#Microsoft-Windows-networks-SAMBA" class="headerlink" title="Microsoft Windows networks (SAMBA)"></a>Microsoft Windows networks (SAMBA)</h2><pre><code>nbtscan ip_addr netbios name resolution nmblookup -A ip_addr netbios name resolution smbclient -L ip_addr/hostname show remote shares of a windows host smbget -Rr smb://ip_addr/share like wget can download files from a host windows via smb mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share mount a windows network share</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见的Linux常用命令大全&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>在一个千万级的数据库查询中，如何提高查询效率？</title>
    <link href="http://code.skyheng.com/post/62293.html"/>
    <id>http://code.skyheng.com/post/62293.html</id>
    <published>2016-07-21T14:39:51.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>在一个千万级的数据库查寻中，如何提高查询效率？<br><a id="more"></a></p><h2 id="数据库设计方面"><a href="#数据库设计方面" class="headerlink" title="数据库设计方面"></a>数据库设计方面</h2><ul><li>a. 对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</li><li>b. 应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如： <code>select id from t where num is null</code> 可以在num上设置默认值0，确保表中num列没有null值，然后这样查询： <code>select id from t where num=0</code></li><li>c. 并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时,查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</li><li>d. 索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</li><li>e. 应尽可能的避免更新索引数据列，因为索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新索引数据列，那么需要考虑是否应将该索引建为索引。</li><li>f. 尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</li><li>g. 尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</li><li>h. 尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</li><li>i. 避免频繁创建和删除临时表，以减少系统表资源的消耗。</li><li>j. 临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。</li><li>k. 在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</li><li>l. 如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</li></ul><h2 id="SQL语句方面："><a href="#SQL语句方面：" class="headerlink" title="SQL语句方面："></a>SQL语句方面：</h2><ul><li>a. 应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</li><li>b. 应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如： select id from t where num=10 or num=20 可以这样查询： select id from t where num=10 union all select id from t where num=20</li><li>c. in 和 not in 也要慎用，否则会导致全表扫描，如： select id from t where num in(1,2,3) 对于连续的数值，能用 between 就不要用 in 了： select id from t where num between 1 and 3</li><li>d. 下面的查询也将导致全表扫描： select id from t where name like ‘%abc%’</li><li>e. 如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描： select id from t where num=@num 可以改为强制查询使用索引： select id from t with(index(索引名)) where num=@num</li><li>f. 应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如： select id from t where num/2=100 应改为: select id from t where num=100*2</li><li>g. 应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如： select id from t where substring(name,1,3)=’abc’–name以abc开头的id select id from t where datediff(day,createdate,’2005-11-30′)=0–‘2005-11-30’生成的id 应改为: select id from t where name like ‘abc%’ select id from t where createdate&gt;=’2005-11-30′ and createdate&lt;’2005-12-1′</li><li>h. 不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</li><li>i. 不要写一些没有意义的查询，如需要生成一个空表结构： select col1,col2 into #t from t where 1=0 这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样： create table #t(…)</li><li>j. 很多时候用 exists 代替 in 是一个好的选择： select num from a where num in(select num from b) 用下面的语句替换： select num from a where exists(select 1 from b where num=a.num)</li><li>k. 任何地方都不要使用 select <em> from t ，用具体的字段列表代替“</em>”，不要返回用不到的任何字段。</li><li>l. 尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。</li><li>m. 尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</li><li>n. 尽量避免大事务操作，提高系统并发能力。</li></ul><h5 id="java方面：重点内容"><a href="#java方面：重点内容" class="headerlink" title="java方面：重点内容"></a>java方面：重点内容</h5><ol><li>尽可能的少造对象；</li><li>合理摆正系统设计的位置。大量数据操作，和少量数据操作一定是分开的。大量的数据操作，肯定不是ORM框架搞定的；</li><li>使用jDBC链接数据库操作数据；</li><li>控制好内存，让数据流起来，而不是全部读到内存再处理，而是边读取边处理；</li><li>合理利用内存，有的数据要缓存。</li></ol><h5 id="如何优化数据库，如何提高数据库的性能"><a href="#如何优化数据库，如何提高数据库的性能" class="headerlink" title="如何优化数据库，如何提高数据库的性能?"></a>如何优化数据库，如何提高数据库的性能?</h5><p>解答：</p><p>1） 硬件调整性能 最有可能影响性能的是磁盘和网络吞吐量,解决办法扩大虚拟内存，并保证有足够可以扩充的空间；把数据库服务器上的不必要服务关闭掉；把数据库服务器和主域服务器分开；把SQL数据库服务器的吞吐量调为最大；在具有一个以上处理器的机器上运行SQL。</p><p>2）调整数据库</p><p>若对该表的查询频率比较高，则建立索引；建立索引时，想尽对该表的所有查询搜索操作， 按照where选择条件建立索引，尽量为整型键建立为有且只有一个簇集索引，数据在物理上按顺序在数据页上，缩短查找范围，为在查询经常使用的全部列建立非簇集索引，能最大地覆盖查询；但是索引不可太多，执行UPDATE DELETE INSERT语句需要用于维护这些索引的开销量急剧增加；避免在索引中有太多的索引键；避免使用大型数据类型的列为索引；保证每个索引键值有少数行。</p><p>3）使用存储过程</p><p>应用程序的实现过程中，能够采用存储过程实现的对数据库的操作尽量通过存储过程来实现，因为存储过程是存放在数据库服务器上的一次性被设计、编码、测试，并被再次使用，需要执行该任务的应用可以简单地执行存储过程，并且只返回结果集或者数值，这样不仅可以使程序模块化，同时提高响应速度，减少网络流量，并且通过输入参数接受输入，使得在应用中完成逻辑的一致性实现。</p><p>4）应用程序结构和算法</p><p>建立查询条件索引仅仅是提高速度的前提条件，响应速度的提高还依赖于对索引的使用。因为人们在</p><p>使用SQL时往往会陷入一个误区，即太关注于所得的结果是否正确，特别是对数据量不是特别大的数据库操作时，是否建立索引和使用索引的好坏对程序的响应速度并不大，因此程序员在书写程序时就忽略了不同的实现方法之间可能存在的性能差异，这种性能差异在数据量特别大时或者大型的或是复杂的数据库环境中（如联机事务处理OLTP或决策支持系统DSS）中表现得尤为明显。在工作实践中发现，不良的SQL往往来自于不恰当的索引设计、不充份的连接条件和不可优化的where子句。在对它们进行适当的优化后，其运行速度有了明显地提高！  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在一个千万级的数据库查寻中，如何提高查询效率？&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://code.skyheng.com/categories/database/"/>
    
      <category term="sql" scheme="http://code.skyheng.com/categories/database/sql/"/>
    
    
      <category term="database" scheme="http://code.skyheng.com/tags/database/"/>
    
      <category term="sql" scheme="http://code.skyheng.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>VMware中CentOS设置静态IP</title>
    <link href="http://code.skyheng.com/post/60804.html"/>
    <id>http://code.skyheng.com/post/60804.html</id>
    <published>2016-05-16T09:58:27.000Z</published>
    <updated>2018-03-20T14:50:32.502Z</updated>
    
    <content type="html"><![CDATA[<p>因为之前在VMware搭建的CentOS没有设置静态IP，发现之前VMware设置的是DHCP，所以每次重新resume后虚拟机中IP都变了，导致之前已经搭建好的环境老是出问题又要重新搭建很麻烦，所以设置一下静态静态IP，步骤很简单：<br><a id="more"></a></p><h2 id="首先关闭VMware的DHCP"><a href="#首先关闭VMware的DHCP" class="headerlink" title="首先关闭VMware的DHCP"></a>首先关闭VMware的DHCP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Edit-&gt;Virtual Network Editor</span><br></pre></td></tr></table></figure><p><img src="http://img.skyheng.com/picture/2016/vmware/vmware-setting-1.png" alt=""></p><ul><li>选择VMnet8，去掉<code>Use local DHCP service to distribute IP address to VMs</code>选项。</li><li>点击<code>NAT Settings</code>查看一下GATEWAY地址：<br><img src="http://img.skyheng.com/picture/2016/vmware/vmware-setting-2.png" alt=""></li><li>点击OK就可以了。</li></ul><h2 id="设置CentOS静态IP"><a href="#设置CentOS静态IP" class="headerlink" title="设置CentOS静态IP"></a>设置CentOS静态IP</h2><p>一. 涉及到三个配置文件，分别是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">/etc/resolv.conf</span><br></pre></td></tr></table></figure></p><p>二. 首先修改<code>/etc/sysconfig/network</code>如下：(指定网关地址)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=localhost.localdomain</span><br><span class="line">GATEWAY=192.168.129.2</span><br></pre></td></tr></table></figure></p><p>三. 然后修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>为如下样例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=&quot;eth0&quot;</span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">IPADDR=192.168.129.129</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">HWADDR=&quot;00:0C:29:56:8F:AD&quot;</span><br><span class="line">IPV6INIT=&quot;no&quot;</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">UUID=&quot;ba48a4c0-f33d-4e05-98bd-248b01691c20&quot;</span><br><span class="line">DNS1=192.168.129.2</span><br></pre></td></tr></table></figure></p><blockquote><p>注意：这里DNS1是必须要设置的否则无法进行域名解析。</p></blockquote><ol><li>最后配置下<code>/etc/resolv.conf</code>：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameserver 192.168.129.2</span><br></pre></td></tr></table></figure><ul><li>其实这一步可以省掉，上面设置了DNS Server的地址后系统会自动修改这个配置文件。</li><li>这样很简单几个步骤后虚拟机的IP就一直是<code>192.168.129.129</code>了。</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li>CentOS Linux解决Device eth0 does not seem to be present：<a href="http://www.linuxidc.com/Linux/2012-12/76248.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2012-12/76248.htm</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为之前在VMware搭建的CentOS没有设置静态IP，发现之前VMware设置的是DHCP，所以每次重新resume后虚拟机中IP都变了，导致之前已经搭建好的环境老是出问题又要重新搭建很麻烦，所以设置一下静态静态IP，步骤很简单：&lt;br&gt;
    
    </summary>
    
      <category term="centOS" scheme="http://code.skyheng.com/categories/centOS/"/>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/centOS/linux/"/>
    
      <category term="vmware" scheme="http://code.skyheng.com/categories/centOS/linux/vmware/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/tags/centOS/"/>
    
      <category term="vmware" scheme="http://code.skyheng.com/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat8安装和配置以及优化</title>
    <link href="http://code.skyheng.com/post/9311.html"/>
    <id>http://code.skyheng.com/post/9311.html</id>
    <published>2016-05-09T15:37:27.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解Tomcat 8 安装和配置、优化<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/2016/tomcat.png" alt="Tomcat"></p><h2 id="Tomcat-8-安装"><a href="#Tomcat-8-安装" class="headerlink" title="Tomcat 8 安装"></a>Tomcat 8 安装</h2><ul><li>Tomcat 8 安装<ul><li>官网：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></li><li>Tomcat 8 官网下载：<a href="http://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">http://tomcat.apache.org/download-80.cgi</a></li><li>此时（20160509） Tomcat 8 最新版本为：<code>apache-tomcat-8.0.32.tar.gz</code></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>setups</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>Tomcat 8 下载：<code>wget http://apache.fayea.com/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.tar.gz</code></li><li>压缩包解压：<code>tar -zxvf apache-tomcat-8.0.32.tar.gz</code></li><li>移到解压出来文件夹到 /usr 下：<code>mv apache-tomcat-8.0.32/ /usr/program/</code></li><li>为了方便，修改解压目录的名字：<code>mv /usr/program/apache-tomcat-8.0.32/ /usr/program/tomcat8/</code></li></ul></li><li>设置 Iptables 规则（这一步是必须设置的）：<ul><li>一种方式：先关闭 iptables，防止出现拦截问题而测试不了：<code>service iptables stop</code></li><li>一种方式：在 iptables 中添加允许规则（Tomcat 默认端口是 8080）：<ul><li>添加规则：<code>sudo iptables -I INPUT -p tcp -m tcp --dport 8080 -j ACCEPT</code></li><li>保存规则：<code>sudo /etc/rc.d/init.d/iptables save</code></li><li>重启 iptables：<code>sudo service iptables restart</code></li></ul></li></ul></li><li>测试安装好后的 Tomcat：<ul><li>启动 Tomcat：<code>sh /usr/program/tomcat8/bin/startup.sh ; tail -200f /usr/program/tomcat8/logs/catalina.out</code></li><li>访问：<code>http://服务器 IP 地址:8080/</code></li><li>停止 Tomcat：<code>sh /usr/program/tomcat8/bin/shutdown.sh</code></li></ul></li></ul><h2 id="Tomcat-8-配置"><a href="#Tomcat-8-配置" class="headerlink" title="Tomcat 8 配置"></a>Tomcat 8 配置</h2><ul><li>设置 Tomcat 相关变量：</li><li><code>sudo vim /usr/program/tomcat8/bin/catalina.sh</code></li><li>在配置文件的可编辑内容最上面（98 行开始），加上如下内容（具体参数根据你服务器情况自行修改）：</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">JAVA_HOME</span>=/usr/program/jdk1.<span class="number">8.0</span>_72</span><br><span class="line"><span class="attr">CATALINA_HOME</span>=/usr/program/tomcat8</span><br><span class="line"><span class="attr">CATALINA_OPTS</span>=<span class="string">"-server -Xms528m -Xmx528m -XX:PermSize=256m -XX:MaxPermSize=358m"</span></span><br><span class="line"><span class="attr">CATALINA_PID</span>=<span class="variable">$CATALINA_HOME</span>/catalina.pid</span><br></pre></td></tr></table></figure><ul><li>如果使用 <code>shutdown.sh</code> 还无法停止 tomcat，可以修改其配置：<code>vim /usr/program/tomcat8/bin/shutdown.sh</code></li><li>把最尾巴这一行：<code>exec &quot;$PRGDIR&quot;/&quot;$EXECUTABLE&quot; stop &quot;$@&quot;</code></li><li>改为：<code>exec &quot;$PRGDIR&quot;/&quot;$EXECUTABLE&quot; stop 10 -force</code></li></ul><h2 id="Tomcat-8-优化"><a href="#Tomcat-8-优化" class="headerlink" title="Tomcat 8 优化"></a>Tomcat 8 优化</h2><ul><li>Tomcat 6/7/8 的优化参数有点不一样，最好按下面的方式看一下官网这个文档是否还保留着这个参数</li><li>启动tomcat，访问该地址，下面要讲解的一些配置信息，在该文档下都有说明的：<ul><li>文档：<a href="http://127.0.0.1:8080/docs/config" target="_blank" rel="noopener">http://127.0.0.1:8080/docs/config</a></li><li>你也可以直接看网络版本：<ul><li>Tomcat 6 文档：<a href="https://tomcat.apache.org/tomcat-6.0-doc/config" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-6.0-doc/config</a></li><li>Tomcat 7 文档：<a href="https://tomcat.apache.org/tomcat-7.0-doc/config/" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-7.0-doc/config/</a></li><li>Tomcat 8 文档：<a href="https://tomcat.apache.org/tomcat-8.0-doc/config/" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-8.0-doc/config/</a></li></ul></li></ul></li><li>如果你需要查看 Tomcat 的运行状态可以配置tomcat管理员账户，然后登陆 Tomcat 后台进行查看</li><li>编辑 /opt/tomcat7/bin/conf/tomcat-users.xml 文件，在里面添加下面信息：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin-gui"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"tomcat"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"admin-gui,admin,manager-gui,manager"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编辑配置文件：<code>vim /usr/program/tomcat7/conf/server.xml</code></li><li>打开默认被注释的连接池配置：</li><li>默认值：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;Executor name="tomcatThreadPool" namePrefix="catalina-exec-"</span></span><br><span class="line"><span class="comment">    maxThreads="150" minSpareThreads="4"/&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改为：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Executor</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">"tomcatThreadPool"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">namePrefix</span>=<span class="string">"catalina-exec-"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxThreads</span>=<span class="string">"500"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">minSpareThreads</span>=<span class="string">"100"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">prestartminSpareThreads</span> = <span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxQueueSize</span> = <span class="string">"100"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>重点参数解释：<ul><li>maxThreads，最大并发数，默认设置 200，一般建议在 500 ~ 800，根据硬件设施和业务来判断</li><li>minSpareThreads，Tomcat 初始化时创建的线程数，默认设置 25</li><li>prestartminSpareThreads，在 Tomcat 初始化的时候就初始化 minSpareThreads 的参数值，如果不等于 true，minSpareThreads 的值就没啥效果了</li><li>maxQueueSize，最大的等待队列数，超过则拒绝请求</li></ul></li><li>修改默认的链接参数配置：</li><li>默认值：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">port</span>=<span class="string">"8080"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">"8443"</span> </span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改为：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">executor</span>=<span class="string">"tomcatThreadPool"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">port</span>=<span class="string">"8080"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11Nio2Protocol"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">maxConnections</span>=<span class="string">"10000"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">redirectPort</span>=<span class="string">"8443"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">enableLookups</span>=<span class="string">"false"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">acceptCount</span>=<span class="string">"100"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">maxPostSize</span>=<span class="string">"10485760"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">compression</span>=<span class="string">"on"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">disableUploadTimeout</span>=<span class="string">"true"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">compressionMinSize</span>=<span class="string">"2048"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">acceptorThreadCount</span>=<span class="string">"2"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">compressableMimeType</span>=<span class="string">"text/html,text/xml,text/plain,text/css,text/javascript,application/javascript"</span> </span></span><br><span class="line"><span class="tag">   <span class="attr">URIEncoding</span>=<span class="string">"utf-8"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>重点参数解释：<ul><li>protocol，Tomcat 8 设置 nio2 更好：org.apache.coyote.http11.Http11Nio2Protocol（如果这个用不了，就用下面那个）</li><li>protocol，Tomcat 6、7 设置 nio 更好：org.apache.coyote.http11.Http11NioProtocol</li><li>enableLookups，禁用DNS查询</li><li>acceptCount，指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理，默认设置 100</li><li>maxPostSize，以 FORM URL 参数方式的 POST 提交方式，限制提交最大的大小，默认是 2097152(2兆)，它使用的单位是字节。10485760 为 10M。如果要禁用限制，则可以设置为 -1。</li><li>acceptorThreadCount，用于接收连接的线程的数量，默认值是1。一般这个指需要改动的时候是因为该服务器是一个多核CPU，如果是多核 CPU 一般配置为 2.</li></ul></li><li>禁用 AJP（如果你服务器没有使用 Apache） </li><li>把下面这一行注释掉，默认 Tomcat 是开启的。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /&gt; --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JVM-优化"><a href="#JVM-优化" class="headerlink" title="JVM 优化"></a>JVM 优化</h2><ul><li>模型资料来源：<a href="http://xmuzyq.iteye.com/blog/599750" target="_blank" rel="noopener">http://xmuzyq.iteye.com/blog/599750</a></li><li>Java 的内存模型分为：<ul><li>Young，年轻代（易被 GC）。Young 区被划分为三部分，Eden 区和两个大小严格相同的 Survivor 区，其中 Survivor 区间中，某一时刻只有其中一个是被使用的，另外一个留做垃圾收集时复制对象用，在 Young 区间变满的时候，minor GC 就会将存活的对象移到空闲的Survivor 区间中，根据 JVM 的策略，在经过几次垃圾收集后，任然存活于 Survivor 的对象将被移动到 Tenured  区间。</li><li>Tenured，终身代。Tenured 区主要保存生命周期长的对象，一般是一些老的对象，当一些对象在 Young 复制转移一定的次数以后，对象就会被转移到 Tenured 区，一般如果系统中用了 application 级别的缓存，缓存中的对象往往会被转移到这一区间。</li><li>Perm，永久代。主要保存 class,method,filed 对象，这部门的空间一般不会溢出，除非一次性加载了很多的类，不过在涉及到热部署的应用服务器的时候，有时候会遇到 java.lang.OutOfMemoryError : PermGen space 的错误，造成这个错误的很大原因就有可能是每次都重新部署，但是重新部署后，类的 class 没有被卸载掉，这样就造成了大量的 class 对象保存在了 perm 中，这种情况下，一般重新启动应用服务器可以解决问题。</li></ul></li><li>Linux 修改 /usr/program/tomcat7/bin/catalina.sh 文件，把下面信息添加到文件第一行。Windows 和 Linux 有点不一样的地方在于，在 Linux 下，下面的的参数值是被引号包围的，而 Windows 不需要引号包围。</li><li>如果服务器只运行一个 Tomcat<ul><li>机子内存如果是 8G，一般 PermSize 配置是主要保证系统能稳定起来就行：<ul><li><code>JAVA_OPTS=&quot;-Dfile.encoding=UTF-8 -server -Xms6144m -Xmx6144m -XX:NewSize=1024m -XX:MaxNewSize=2048m -XX:PermSize=512m -XX:MaxPermSize=512m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC&quot;</code></li></ul></li><li>机子内存如果是 16G，一般 PermSize 配置是主要保证系统能稳定起来就行：<ul><li><code>JAVA_OPTS=&quot;-Dfile.encoding=UTF-8 -server -Xms13312m -Xmx13312m -XX:NewSize=3072m -XX:MaxNewSize=4096m -XX:PermSize=512m -XX:MaxPermSize=512m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC&quot;</code></li></ul></li><li>机子内存如果是 32G，一般 PermSize 配置是主要保证系统能稳定起来就行：<ul><li><code>JAVA_OPTS=&quot;-Dfile.encoding=UTF-8 -server -Xms29696m -Xmx29696m -XX:NewSize=6144m -XX:MaxNewSize=9216m -XX:PermSize=1024m -XX:MaxPermSize=1024m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC&quot;</code></li></ul></li></ul></li><li>如果是开发机<ul><li><code>-Xms550m -Xmx1250m -XX:PermSize=550m -XX:MaxPermSize=1250m</code></li></ul></li><li>参数说明：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding：默认文件编码</span><br><span class="line">-server：表示这是应用于服务器的配置，JVM 内部会有特殊处理的</span><br><span class="line">-Xmx1024m：设置JVM最大可用内存为1024MB</span><br><span class="line">-Xms1024m：设置JVM最小内存为1024m。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。</span><br><span class="line">-XX:NewSize：设置年轻代大小</span><br><span class="line">-XX:MaxNewSize：设置最大的年轻代大小</span><br><span class="line">-XX:PermSize：设置永久代大小</span><br><span class="line">-XX:MaxPermSize：设置最大永久代大小</span><br><span class="line">-XX:NewRatio=4：设置年轻代（包括 Eden 和两个 Survivor 区）与终身代的比值（除去永久代）。设置为 4，则年轻代与终身代所占比值为 1：4，年轻代占整个堆栈的 1/5</span><br><span class="line">-XX:MaxTenuringThreshold=10：设置垃圾最大年龄，默认为：15。如果设置为 0 的话，则年轻代对象不经过 Survivor 区，直接进入年老代。对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在 Survivor 区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。</span><br><span class="line">-XX:+DisableExplicitGC：这个将会忽略手动调用 GC 的代码使得 System.gc() 的调用就会变成一个空调用，完全不会触发任何 GC</span><br></pre></td></tr></table></figure></li></ul><h2 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h2><ul><li>Tomcat 报错 java.net.connectexception:拒绝连接 解决办法</li><li>输入<code>ps -ef|grep java</code>，找到所有java进程号，kill -9 进程号</li><li>把出现的进程干掉，除了 用户名  XXX XXX  0 20:56 pts/0    00:00:00 grep –color=auto java之外。</li><li>重启<code>sh start.sh</code></li><li>原因与分析</li><li>表明原因在于端口被占用等可能性，其根本在于你shutdown的时候，执行的是shutdown.sh脚本，而如果项目此时有些数据库链接之类的，以至tomcat其实根本没有真正关闭，也是就是没有完全关闭掉，导致你再次shutdown的时候报错。</li><li><code>ps -ef|grep tomcat</code> 查看tomcat是否启动</li><li><code>ps -ef|grep 8080</code> 查看8080端口的进程号</li><li><code>ps -ef|grep tomcat</code>  查看tomcat占据的进程号</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>Tomcat 历史版本下载地址整理（不间断更新）：<ul><li><strong>Tomcat 9.0.0.M4</strong>：<code>wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.0.M4/bin/apache-tomcat-9.0.0.M4.tar.gz</code></li><li><strong>Tomcat 8.0.32</strong>：<code>wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.tar.gz</code></li><li><strong>Tomcat 7.0.68</strong>：<code>wget http://apache.fayea.com/tomcat/tomcat-7/v7.0.68/bin/apache-tomcat-7.0.68.tar.gz</code></li><li><strong>Tomcat 6.0.45</strong>：<code>wget http://mirrors.cnnic.cn/apache/tomcat/tomcat-6/v6.0.45/bin/apache-tomcat-6.0.45.tar.gz</code></li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://www.jikexueyuan.com/course/2064_3.html?ss=1" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/2064_3.html?ss=1</a></li><li><a href="http://www.wellho.net/mouth/2163_CATALINA-OPTS-v-JAVA-OPTS-What-is-the-difference-.html" target="_blank" rel="noopener">http://www.wellho.net/mouth/2163_CATALINA-OPTS-v-JAVA-OPTS-What-is-the-difference-.html</a></li><li><a href="http://blog.csdn.net/sunlovefly2012/article/details/47395165" target="_blank" rel="noopener">http://blog.csdn.net/sunlovefly2012/article/details/47395165</a></li><li><a href="http://blog.csdn.net/lifetragedy/article/details/7708724" target="_blank" rel="noopener">http://blog.csdn.net/lifetragedy/article/details/7708724</a></li><li><a href="http://ihuangweiwei.iteye.com/blog/1233941" target="_blank" rel="noopener">http://ihuangweiwei.iteye.com/blog/1233941</a></li><li><a href="http://www.cnblogs.com/ggjucheng/archive/2013/04/16/3024731.html" target="_blank" rel="noopener">http://www.cnblogs.com/ggjucheng/archive/2013/04/16/3024731.html</a></li><li><a href="https://tomcat.apache.org/tomcat-8.0-doc/config/http.html#Connector_Comparison" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-8.0-doc/config/http.html#Connector_Comparison</a></li><li><a href="http://www.apelearn.com/study_v2/chapter23.html" target="_blank" rel="noopener">http://www.apelearn.com/study_v2/chapter23.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解Tomcat 8 安装和配置、优化&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/categories/linux/centOS/"/>
    
      <category term="tomcat" scheme="http://code.skyheng.com/categories/linux/centOS/tomcat/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/tags/centOS/"/>
    
      <category term="tomcat" scheme="http://code.skyheng.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>【微信支付】“刷卡支付”、“被扫支付”开发JavaDemo</title>
    <link href="http://code.skyheng.com/post/65527.html"/>
    <id>http://code.skyheng.com/post/65527.html</id>
    <published>2016-05-04T15:39:51.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲【解微信支付】“刷卡支付”、“被扫支付”开发JavaDemo<br><a id="more"></a></p><h2 id="快速上手，使用SDK只需三步即可接入“被扫支付”"><a href="#快速上手，使用SDK只需三步即可接入“被扫支付”" class="headerlink" title="快速上手，使用SDK只需三步即可接入“被扫支付”"></a>快速上手，使用SDK只需三步即可接入“被扫支付”</h2><h5 id="第一步，初始化SDK"><a href="#第一步，初始化SDK" class="headerlink" title="第一步，初始化SDK"></a>第一步，初始化SDK</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//第一步：初始化SDK（只需全局初始化一次即可）</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line">WXPay.initSDKConfiguration(</span><br><span class="line">    <span class="comment">//签名算法需要用到的秘钥</span></span><br><span class="line">    <span class="string">"40a8f8aa8ebe45a40bdc4e0f7307bc66"</span>,</span><br><span class="line">    <span class="comment">//公众账号ID，成功申请公众账号后获得</span></span><br><span class="line">    <span class="string">"wxf5b5e87a6a0fde94"</span>,</span><br><span class="line">    <span class="comment">//商户ID，成功申请微信支付功能之后通过官方发出的邮件获得</span></span><br><span class="line">    <span class="string">"10000097"</span>,</span><br><span class="line">    <span class="comment">//子商户ID，受理模式下必填；</span></span><br><span class="line">    <span class="string">""</span>,</span><br><span class="line">    <span class="comment">//HTTP证书在服务器中的路径，用来加载证书用</span></span><br><span class="line">    <span class="string">"C:/wxpay_scanpay_java_cert/10000097.p12"</span>,</span><br><span class="line">    <span class="comment">//HTTP证书的密码，默认等于MCHID</span></span><br><span class="line">    <span class="string">"10000097"</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="第二步，准备好提交给API的数据-scanPayReqData"><a href="#第二步，准备好提交给API的数据-scanPayReqData" class="headerlink" title="第二步，准备好提交给API的数据(scanPayReqData)"></a>第二步，准备好提交给API的数据(<code>scanPayReqData</code>)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//第二步：准备好提交给API的数据(scanPayReqData)</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//1）创建一个可以用来生成数据的bridge，这里用的是一个专门用来测试用的Bridge，商户需要自己实现</span></span><br><span class="line">BridgeForScanPayBusinessTest bridge = <span class="keyword">new</span> BridgeForScanPayBusinessTest();</span><br><span class="line"><span class="comment">//2）从bridge里面拿到数据，构建提交被扫支付API需要的数据对象</span></span><br><span class="line">ScanPayReqData scanPayReqData = <span class="keyword">new</span> ScanPayReqData(</span><br><span class="line">    <span class="comment">//这个是扫码终端设备从用户手机上扫取到的支付授权号，有效期是1分钟</span></span><br><span class="line">    bridge.getAuthCode(),</span><br><span class="line">    <span class="comment">//要支付的商品的描述信息，用户会在支付成功页面里看到这个信息</span></span><br><span class="line">    bridge.getBody(),</span><br><span class="line">    <span class="comment">//支付订单里面可以填的附加数据，API会将提交的这个附加数据原样返回</span></span><br><span class="line">    bridge.getAttach(),</span><br><span class="line">    <span class="comment">//商户系统内部的订单号,32个字符内可包含字母, 确保在商户系统唯一</span></span><br><span class="line">    bridge.getOutTradeNo(),</span><br><span class="line">    <span class="comment">//订单总金额，单位为“分”，只能整数</span></span><br><span class="line">    bridge.getTotalFee(),</span><br><span class="line">    <span class="comment">//商户自己定义的扫码支付终端设备号，方便追溯这笔交易发生在哪台终端设备上</span></span><br><span class="line">    bridge.getDeviceInfo(),</span><br><span class="line">    <span class="comment">//订单生成的机器IP</span></span><br><span class="line">    bridge.getSpBillCreateIP(),</span><br><span class="line">    <span class="comment">//订单生成时间，格式为yyyyMMddHHmmss，如2009年12月25日9点10分10秒表示为20091225091010</span></span><br><span class="line">    bridge.getTimeStart(),</span><br><span class="line">    <span class="comment">//订单失效时间，格式同上</span></span><br><span class="line">    bridge.getTimeExpire(),</span><br><span class="line">    <span class="comment">//商品标记，微信平台配置的商品标记，用于优惠券或者满减使用</span></span><br><span class="line">    bridge.getGoodsTag()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="第三步，准备好一个用来处理各种结果分支的监听器-resultListener"><a href="#第三步，准备好一个用来处理各种结果分支的监听器-resultListener" class="headerlink" title="第三步，准备好一个用来处理各种结果分支的监听器(resultListener)"></a>第三步，准备好一个用来处理各种结果分支的监听器(<code>resultListener</code>)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//第三步：准备好一个用来处理各种结果分支的监听器(resultListener)</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//这个是Demo里面写的一个默认行为，商户需要根据自身需求来进行完善</span></span><br><span class="line">DefaultScanPayBusinessResultListener resultListener = <span class="keyword">new</span> DefaultScanPayBusinessResultListener();</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//搞定以上三步后执行业务逻辑</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line">WXPay.doScanPayBusiness(scanPayReqData,resultListener);</span><br></pre></td></tr></table></figure><h2 id="Demo简单说明"><a href="#Demo简单说明" class="headerlink" title="Demo简单说明"></a>Demo简单说明</h2><ol><li><a href="#user-content-demo包含的内容">Demo中包含的内容</a></li><li><a href="#user-content-demo依赖的配置项">Demo依赖的配置项</a></li><li><a href="#user-content-demo需要商户自己实现的ibridge">Demo需要商户自己实现的IBridge</a></li></ol><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ol><li><a href="#user-content-被扫支付业务流程最佳实践">被扫支付业务流程最佳实践</a>  </li><li><a href="#user-content-支付业务逻辑分支处理最佳实践">支付业务逻辑分支处理最佳实践</a></li><li><a href="#user-content-商户系统接入sdk最佳实践">商户系统接入SDK最佳实践</a></li><li><a href="#user-content-商户系统部署最佳实践">商户系统部署最佳实践</a></li></ol><h2 id="高级自定义"><a href="#高级自定义" class="headerlink" title="高级自定义"></a>高级自定义</h2><ol><li><a href="#user-content-高级自定义1自定义查询流程和撤销流程">自定义查询流程和撤销流程</a> </li><li><a href="#user-content-高级自定义2使用自己的https请求器">使用自己的Https请求器</a> </li></ol><h2 id="“被扫支付”高级知识"><a href="#“被扫支付”高级知识" class="headerlink" title="“被扫支付”高级知识"></a>“被扫支付”高级知识</h2><ol><li><a href="#user-content-调用被扫支付api的协议规则">调用被扫支付API的协议规则</a></li><li><a href="#user-content-支付验证密码规则">支付验证密码规则</a></li></ol><h2 id="Demo包含的内容"><a href="#Demo包含的内容" class="headerlink" title="Demo包含的内容"></a>Demo包含的内容</h2><p>Demo里面需要大家关注的主要有三个地方：  </p><ol><li><p>四个业务Demo，位于<code>src/main/java/com/tencent/business/</code>目录里面，这些demo将会教大家如何调用SDK里面封装好的业务逻辑。</p></li><li><p>桥接器<code>bridge</code>，位于<code>src/main/java/com/tencent/bridge/</code>目录里面。里面目前有4个bridge，分别对应4个业务demo。这个东西是用来对接商户系统逻辑，产生SDK请求所需要的特定参数用的，请大家按照API文档的说明实现这些参数的产生逻辑。 </p></li><li><p>监听器<code>listener</code>，位于<code>src/main/java/com/tencent/listener/</code>目录里面，这几个<code>listener</code>都是对业务逻辑各种可能返回事件的默认处理，商户需要自己实现更加具体的处理逻辑。</p></li></ol><h2 id="Demo依赖的配置项"><a href="#Demo依赖的配置项" class="headerlink" title="Demo依赖的配置项"></a>Demo依赖的配置项</h2><ul><li>打开demo工程里的<code>wxpay.properties</code>文件可以看到里面有6个配置项（该demo里面用的是一个mchid为10000097的测试号）<br>这些关键配置项的作用分别为：</li></ul><table><thead><tr><th style="text-align:center">-</th><th>名称</th><th>用途</th><th>来源</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>KEY</td><td>签名算法需要用到的秘钥</td><td>成功申请微信支付功能之后通过官方发出的邮件获得</td></tr><tr><td style="text-align:center">2</td><td>APPID</td><td>公众账号ID</td><td>成功申请公众账号后获得</td></tr><tr><td style="text-align:center">3</td><td>MCHID</td><td>商户ID</td><td>成功申请微信支付功能之后通过官方发出的邮件获得</td></tr><tr><td style="text-align:center">4</td><td>SUBMCHID</td><td>子商户ID</td><td>受理模式下必须要有的一个子商户ID</td></tr><tr><td style="text-align:center">5</td><td>CERT_LOCAL_PATH</td><td>HTTP证书在服务器中的路径，用来加载证书用</td><td>成功申请微信支付功能之后通过官方发出的邮件获得“HTTPS证书”，这个配置项就是“HTTP证书”在服务器上所部署的路径（demo中需要的证书文件就是docs/https_cert_for_test/文件夹中的10000097.cert）</td></tr><tr><td style="text-align:center">6</td><td>CERT_PASSWORD</td><td>HTTP证书的密码，默认等于MCHID</td><td>成功申请微信支付功能之后通过官方发出的邮件获得</td></tr></tbody></table><p>这些配置项用来对SDK进行一次初始化的时候使用。初始化方法见上面的“<a href="#user-content-demo第一步，初始化SDK">第一步，初始化SDK</a>”</p><h2 id="Demo需要商户自己实现的IBridge"><a href="#Demo需要商户自己实现的IBridge" class="headerlink" title="Demo需要商户自己实现的IBridge"></a>Demo需要商户自己实现的IBridge</h2><p><img src="http://img.skyheng.com/picture/weixin/scanpay/ibridge.jpg" alt="ibridge桥接器" title="ibridge桥接器"><br>从上图可见IBridge桥接器其实就是定义了请求API时需要提交的各种参数的产生接口，这些接口跟商户自己的系统是紧密结合的，商户自己需要根据具体业务系统的实际情况，按照API文档定义的格式来产生相应的参数给到调用API时使用。<br>举个例子，IBridge里面定义了一个非常关键的接口，叫getAuthCode()，这个接口的作用就是用来返回一个合法的“授权码”供调用API时用。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取auth_code，这个是扫码终端设备从用户手机上扫取到的支付授权号，这个号是跟用户用来支付的银行卡绑定的，有效期是1分钟</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 授权码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAuthCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//由于这个authCode有效期只有1分钟，所以实际测试SDK的时候也可以手动将微信刷卡界面一维码下的那串数字输入进来</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"120242957324236112"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以上只是简单的<code>hardcode</code>（用来先简单手动输入“授权码”调试API是否能正常返回数据时用），实际上商户自己在实现这个接口的时候就需要根据自己实际系统来进行设计了，例如需要去监听“扫码枪”等具备一维码/二维码扫描功能的外设，当成功扫描到这串“授权码”的时候，将其保存下来，然后触发提交支付的API调用，调用时让I<code>Bridge</code>桥接器中的<code>getAuthCode()</code>接口取得刚刚扫描到的授权码，作为参数传给支付API。  </p><h2 id="被扫支付业务流程最佳实践"><a href="#被扫支付业务流程最佳实践" class="headerlink" title="被扫支付业务流程最佳实践"></a>被扫支付业务流程最佳实践</h2><p>被扫支付整个完成流程将会涉及到“查询”和“撤销”等请求，这里给出建议实现的流程供大家参考，SDK里面的<code>ScanPayBusiness</code>就是按照这个流程来设计的：<br><img src="http://img.skyheng.com/picture/weixin/scanpay/best_practice.png" alt="被扫支付最佳实践" title="被扫支付最佳实践">  </p><p>从上图可见主要流程分为四种情况：  </p><ol><li>直接扣款成功：直接返回成功</li><li>扣款明确失败：走撤销流程，返回失败（建议提示具体的失败信息，指示用户进行下一步操作）</li><li>需输入密码：走查单流程，如果查询了一定时间还是没有成功则当失败处理，直接走撤销</li><li>扣款未知失败：先走查单流程，如果查询了一定时间还是没有成功则当失败处理，直接走撤销</li></ol><p>两个关键流程解释：  </p><ol><li>有限次查询流程：这里会根据设定的“查询次数”（用户可以自定义）和“查询间隔”来进行轮询，超过了查询次数之后还是没有查询到“支付成功”的情况会自动转入“撤销流程”</li><li>撤销流程：这里会根据设定的“查询间隔”进行不停地轮询撤销API，API会通过recall字段来告诉商户侧需不需要继续轮询，如果“recall=Y”或是“撤销结果成功”都表示不需要再轮询了，然后到达“支付失败”的最终状态。</li></ol><p>（以上最佳实践已经在SDK的<code>ScanPayBusiness</code>里面封装好了）</p><h2 id="支付业务逻辑分支处理最佳实践"><a href="#支付业务逻辑分支处理最佳实践" class="headerlink" title="支付业务逻辑分支处理最佳实践"></a>支付业务逻辑分支处理最佳实践</h2><p><img src="http://img.skyheng.com/picture/weixin/scanpay/scanpaybusiness_resultlistener.png" alt="被扫支付最佳实践" title="被扫支付最佳实践">    </p><p><code>ScanPayBusiness</code>里面的<code>ResultListener</code>接口定义了支付流程中可能走到的8个分支，分别是：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ResultListener</span> </span>&#123;</span><br><span class="line">       <span class="comment">//API返回ReturnCode不合法，支付请求逻辑错误，请仔细检测传过去的每一个参数是否合法，或是看API能否被正常访问</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailByReturnCodeError</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//API返回ReturnCode为FAIL，支付API系统返回失败，请检测Post给API的数据是否规范合法</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailByReturnCodeFail</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//支付请求API返回的数据签名验证失败，有可能数据被篡改了</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailBySignInvalid</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//用户用来支付的二维码已经过期，提示收银员重新扫一下用户微信“刷卡”里面的二维码</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailByAuthCodeExpire</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//授权码无效，提示用户刷新一维码/二维码，之后重新扫码支付"</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailByAuthCodeInvalid</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//用户余额不足，换其他卡支付或是用现金支付</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFailByMoneyNotEnough</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//支付失败</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onFail</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">       <span class="comment">//支付成功</span></span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ScanPayResData scanPayResData)</span></span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>Demo里面用到的<code>DefaultScanPayBusinessResultListener</code>就是实现了以上这8个接口。<br>这里有几点处理建议：  </p><ol><li><code>onFailByReturnCodeError</code>、<code>onFailByReturnCodeFail</code>、<code>onFailBySignInvalid</code>这3种属于程序逻辑问题，建议商户自己做好日志监控，发现问题要及时让工程师进行定位处理；  </li><li><code>onFailByAuthCodeExpire</code>、<code>onFailByAuthCodeInvalid</code>、<code>onFailByMoneyNotEnough</code>这三种属于用户自身的问题，建议商户把具体出错信息提示给用户，指导用户进行下一步操作。（具体出错信息可以通过<code>scanPayResData.getErr_code_des()</code>获取得到）</li></ol><h2 id="商户系统接入SDK最佳实践"><a href="#商户系统接入SDK最佳实践" class="headerlink" title="商户系统接入SDK最佳实践"></a>商户系统接入SDK最佳实践</h2><ol><li>生成一个新的订单<code>out_trade_no</code></li><li>输入订单金额<code>total_fee</code></li><li>启动扫码枪功能供用户进行扫码</li><li>扫码器获取授权码<code>auth_code</code>，并回传给SDK</li><li>SDK提交支付请求</li><li>SDK处理API返回的数据<br><img src="http://img.skyheng.com/picture/weixin/scanpay/best_cdraw.png" alt="商户系统接入最佳实践" title="商户系统接入最佳实践"></li></ol><h2 id="商户系统部署最佳实践"><a href="#商户系统部署最佳实践" class="headerlink" title="商户系统部署最佳实践"></a>商户系统部署最佳实践</h2><ol><li>由于整套系统必须采用HTTPS来保证安全性，所以这里的支付请求必须由商户的后台系统来发起；</li><li>商户系统跟SDK的对接主要就是实现IBridge里面的接口；</li><li>从本demo里面有JUnit单元测试用例，商户开发者可以参考下这个示例；<br><img src="http://img.skyheng.com/picture/weixin/scanpay/system_structure.png" alt="商户系统部署最佳实践" title="商户系统部署最佳实践"></li></ol><h2 id="高级自定义：1）自定义查询流程和撤销流程"><a href="#高级自定义：1）自定义查询流程和撤销流程" class="headerlink" title="高级自定义：1）自定义查询流程和撤销流程"></a>高级自定义：1）自定义查询流程和撤销流程</h2><p>商户可以根据自己的实际需要来配置<a href="#user-content-被扫支付业务流程最佳实践">支付业务流程</a>中的“查询流程”的“查询次数”和“查询间隔”；“撤销流程”的“查询间隔”，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义调用查询接口的间隔</span></span><br><span class="line">scanPayBusiness.setWaitingTimeBeforePayQueryServiceInvoked(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">//自定义调用查询接口的次数</span></span><br><span class="line">scanPayBusiness.setPayQueryLoopInvokedCount(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//自定义调用撤销接口的间隔</span></span><br><span class="line">scanPayBusiness.setWaitingTimeBeforeReverseServiceInvoked(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h2 id="高级自定义：2）使用自己的Https请求器"><a href="#高级自定义：2）使用自己的Https请求器" class="headerlink" title="高级自定义：2）使用自己的Https请求器"></a>高级自定义：2）使用自己的Https请求器</h2><p>可能有些商户自己系统里面已经拥有自己封装得很完善的Https请求器了，想让SDK的服务统一都走自己的Https请求器来发起请求的话，这里提供了一个配置项可以实现这个功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义底层的HttpsRequest</span></span><br><span class="line">   Configure.setHttpsRequestClassName(<span class="string">"com.tencent.httpsrequest.HttpsRequestForTest"</span>);</span><br></pre></td></tr></table></figure><p>温馨提示：自己实现的Https请求器必须实现IServiceRequest这个接口，可以参考SDK里面的HttpRequest的实现。</p><h2 id="调用被扫支付API的协议规则"><a href="#调用被扫支付API的协议规则" class="headerlink" title="调用被扫支付API的协议规则"></a>调用被扫支付API的协议规则</h2><table><thead><tr><th style="text-align:center">序号</th><th></th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>传输方式</td><td>为保证交易安全性，采用HTTPS传输</td></tr><tr><td style="text-align:center">2</td><td>提交方式</td><td>采用POST方法提交</td></tr><tr><td style="text-align:center">3</td><td>数据格式</td><td>提交和返回数据都为XML格式，根节点名为xml</td></tr><tr><td style="text-align:center">4</td><td>字符编码</td><td>统一采用UTF-8字符编码</td></tr><tr><td style="text-align:center">5</td><td>签名算法</td><td>MD5</td></tr><tr><td style="text-align:center">6</td><td>签名要求</td><td>请求和接收数据均需要校验签名，签名的方法在SDK里面已经封装好了</td></tr><tr><td style="text-align:center">7</td><td>证书要求</td><td>调用申请退款、撤销订单接口需要商户证书</td></tr><tr><td style="text-align:center">8</td><td>判断逻辑</td><td>先判断协议字段返回，再判断业务返回，最后判断交易状态</td></tr></tbody></table><h2 id="支付验证密码规则"><a href="#支付验证密码规则" class="headerlink" title="支付验证密码规则"></a>支付验证密码规则</h2><ol><li>支付金额&gt;300元的交易需要验证用户支付密码；</li><li>用户账号每天最多有10笔交易可以免密，超过后需要验证密码；</li><li>微信支付后台判断用户支付行为有异常情况，符合免密规则的交易也会要求验证密码；</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>刷卡支付开发者文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_1</a></li><li>刷卡支付SDK下载：<a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲【解微信支付】“刷卡支付”、“被扫支付”开发JavaDemo&lt;br&gt;
    
    </summary>
    
      <category term="wxpay" scheme="http://code.skyheng.com/categories/wxpay/"/>
    
      <category term="scanpay" scheme="http://code.skyheng.com/categories/wxpay/scanpay/"/>
    
    
      <category term="wxpay" scheme="http://code.skyheng.com/tags/wxpay/"/>
    
      <category term="scanpay" scheme="http://code.skyheng.com/tags/scanpay/"/>
    
  </entry>
  
  <entry>
    <title>【微信支付】“刷卡支付”、“被扫支付”开发说明</title>
    <link href="http://code.skyheng.com/post/30401.html"/>
    <id>http://code.skyheng.com/post/30401.html</id>
    <published>2016-05-04T14:45:37.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲【解微信支付】“刷卡支付”、“被扫支付”的开发说明<br><a id="more"></a></p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><ul><li>什么是“被扫支付”、“刷卡支付”<ul><li>刷卡支付是用户展示微信钱包内的“刷卡条码/二维码”给商户系统扫描后直接完成支付的模式。主要应用线下面对面收银的场景。</li></ul></li></ul><h2 id="什么是“被扫支付”"><a href="#什么是“被扫支付”" class="headerlink" title="什么是“被扫支付”"></a>什么是“被扫支付”</h2><ul><li>“被扫支付”是用户展示微信上“我的刷卡条码/二维码”给商户系统扫描后直接完成支付的模式，主要应用线下面对面收银的场景。</li><li>具体的场景如下：<ol><li>第一步用户选择被扫支付付款并打开微信，进入“我”-&gt;“钱包”-&gt;“刷卡”条码界面；（如图5.1所示）</li><li>第二步收银员在商户系统操作生成支付订单，用户确认支付金额；</li><li>第三步商户收银员用扫码设备扫描用户的条码/二维码，商户收银系统提交支付；</li><li>第四步微信支付后台系统收到支付请求，根据验证密码规则判断是否验证用户的支付密码，不需要验证密码的交易直接发起扣款，需要验证密码的交易会弹出密码输入框（如图5.2所示）。支付成功后微信端会弹出成功页面（如图5.3所示），支付失败会弹出错误提示。<br><img src="http://img.skyheng.com/picture/weixin/scanpay/scanpay.jpg" alt="scanpay" title="scanpay"> </li></ol></li></ul><h2 id="一张图看懂整个SDK的结构："><a href="#一张图看懂整个SDK的结构：" class="headerlink" title="一张图看懂整个SDK的结构："></a>一张图看懂整个SDK的结构：</h2><p><img src="http://img.skyheng.com/picture/weixin/scanpay/scanpay_sdk_structure.png" alt="scanpay_sdk" title="scanpay_sdk"> </p><h2 id="SDK层级详解："><a href="#SDK层级详解：" class="headerlink" title="SDK层级详解："></a>SDK层级详解：</h2><h3 id="1）通用层"><a href="#1）通用层" class="headerlink" title="1）通用层"></a>1）通用层</h3><p><img src="http://img.skyheng.com/picture/weixin/scanpay/common_layer.png" alt="common_layer" title="common_layer"><br>这里封装了很多非常基础的组件，供上层服务调用，其中包括以下组件：  </p><ol><li>基础配置组件（<code>Configure</code>）<ul><li>该组件用来从<code>wxpay.properties</code>里面获取到跟商户相关的几个关键配置信息。</li></ul></li><li>HTTPS请求器（<code>HttpsRequest</code>）<ul><li>发HTTPS请求的底层封装。</li></ul></li><li>随机数生成器（<code>RandomStringGenerator</code>）<ul><li>用来生成指定长度的随机数。</li></ul></li><li>MD5加密算法（MD5）</li><li><code>XMLParser</code>（XML解析器）<ul><li>由于API返回的数据是XML格式，所以SDK这里也提供了对返回的XML数据进行解析成Java对象的能力，方便大家可以快速处理API返回的数据。</li></ul></li><li>签名（<code>Signature</code>）<ul><li>为了防止数据在传输过程中被篡改，所以这里要对字段做签名运算。</li></ul></li><li>基础工具（Util）<ul><li>开发过程中用到的一些基础工具类函数。</li></ul></li><li>日志上报<ul><li>这里会将SDK里面的模块调用情况，程序执行流程给打好详细日志，Log系统用的是SLF4J这套通用解决方案，方便对接商户系统自己的日志逻辑。</li></ul></li><li>性能上报<ul><li>这里用的是微信支付统一的API性能上报接口进行上报，可以实现将每次调用支付API的耗时、返回码等相关数据进行上报。<br>（以上讲了这么多，只要使用了这个SDK，这些东西都帮大家解决掉了^_^，这就是我们为啥需要有一个SDK~）</li></ul></li></ol><h3 id="2）协议层"><a href="#2）协议层" class="headerlink" title="2）协议层"></a>2）协议层</h3><p><img src="http://img.skyheng.com/picture/weixin/scanpay/protocol_layer.png" alt="protocol_layer" title="protocol_layer"><br>这里跟API文档定义的字段进行一一对应，协议层这里分为两部分：  </p><ul><li>第一部分是“请求数据”，这里定义了每一个API请求时需要传过去的具体数据字段；  </li><li>第二部分是“返回数据”，这里定义了每一个API返回时会传的具体数据字段；</li></ul><p>以上协议在“服务层”提供的各种服务里面已经帮忙封装好，直接使用服务即可。</p><h3 id="3）服务层"><a href="#3）服务层" class="headerlink" title="3）服务层"></a>3）服务层</h3><p><img src="http://img.skyheng.com/picture/weixin/scanpay/service_layer.png" alt="service_layer" title="service_layer"><br>这里已经根据API文档封装好具体服务，供开发者直接调用。<br>例如，以下代码直接调用PayService.request提交支付请求，商户只需要从自己的系统生成该服务提交协议里面要求的数据项即可：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">payServiceResponseString = PayService.request(</span><br><span class="line">       authCode,<span class="comment">//auth_code:这个是扫码终端设备从用户手机上扫取到的支付授权号，这个号是跟用户用来支付的银行卡绑定的，有效期是1分钟</span></span><br><span class="line">       body,<span class="comment">//body:要支付的商品的描述信息，用户会在支付成功页面里看到这个信息</span></span><br><span class="line">       attach, <span class="comment">//attach:支付订单里面可以填的附加数据，API会将提交的这个附加数据原样返回，有助于商户自己可以注明该笔消费的具体内容，方便后续的运营和记录</span></span><br><span class="line">       outTradeNo,<span class="comment">//out_trade_no:商户系统内部的订单号,32个字符内可包含字母, [确保在商户系统唯一]</span></span><br><span class="line">       totalFee,<span class="comment">//total_fee:订单总金额，单位为“分”，只能整数</span></span><br><span class="line">       deviceInfo,<span class="comment">//device_info:商户自己定义的扫码支付终端设备号，方便追溯这笔交易发生在哪台终端设备上</span></span><br><span class="line">       spBillCreateIP,<span class="comment">//spBillCreateIP:订单生成的机器IP</span></span><br><span class="line">       timeStart,<span class="comment">//time_start:订单生成时间</span></span><br><span class="line">       timeEnd,<span class="comment">//time_end:订单失效时间</span></span><br><span class="line">       goodsTag<span class="comment">//goods_tag:商品标记，微信平台配置的商品标记，用于优惠券或者满减使用</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="4）业务层"><a href="#4）业务层" class="headerlink" title="4）业务层"></a>4）业务层</h3><p><img src="http://img.skyheng.com/picture/weixin/scanpay/business_layer.png" alt="business_layer" title="business_layer">  </p><ul><li>业务层是比服务更加高级的封装。业务层通过服务层向API提交请求，拿到API的返回数据之后会对返回数据做一些数据解析、签名校验、出错判断等操作。  </li><li>对于像“被扫支付”这种比较复杂和常用的业务，这里特别封装了官方建议的最佳实践流程。里面涵盖了“支付”、“支付查询”、“撤销”等几个服务和建议的流程、轮询次数、轮询间隔等。商户开发可以直接使用，也可以通过修改里面的配置来自定义自己的流程。</li></ul><h2 id="如何使用该SDK："><a href="#如何使用该SDK：" class="headerlink" title="如何使用该SDK："></a>如何使用该SDK：</h2><p>请直接下载demo，demo那边也有详细的指引，商户用demo中完善的代码进行补充流程处理就可以了。<a href="https://github.com/grz/wxpay_scanpay_java_demo_proj" target="_blank" rel="noopener">点此获取demo</a>        </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>刷卡支付开发者文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=5_1</a></li><li>刷卡支付SDK下载：<a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲【解微信支付】“刷卡支付”、“被扫支付”的开发说明&lt;br&gt;
    
    </summary>
    
      <category term="wxpay" scheme="http://code.skyheng.com/categories/wxpay/"/>
    
      <category term="scanpay" scheme="http://code.skyheng.com/categories/wxpay/scanpay/"/>
    
    
      <category term="wxpay" scheme="http://code.skyheng.com/tags/wxpay/"/>
    
      <category term="scanpay" scheme="http://code.skyheng.com/tags/scanpay/"/>
    
  </entry>
  
  <entry>
    <title>Svn密码破解，Svn密码本地找回</title>
    <link href="http://code.skyheng.com/post/60927.html"/>
    <id>http://code.skyheng.com/post/60927.html</id>
    <published>2016-05-02T15:10:48.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解SVN 密码破解，svn密码本地找回</p><a id="more"></a><h2 id="SVN-密码破解，svn密码本地找回"><a href="#SVN-密码破解，svn密码本地找回" class="headerlink" title="SVN 密码破解，svn密码本地找回"></a>SVN 密码破解，svn密码本地找回</h2><p>svn 密码被保存在本地文件中</p><p><code>C:\Users\【your computer name】\AppData\Roaming\Subversion\auth\svn.simple</code></p><p>文件下。加密保存</p><p>到该网站下载<a href="http://www.leapbeyond.com/ric/TSvnPD/TSvnPwd.exe" target="_blank" rel="noopener">Download exe (1.0.40)</a></p><p>官网地址： <a href="http://www.leapbeyond.com/ric/TSvnPD/" target="_blank" rel="noopener">http://www.leapbeyond.com/ric/TSvnPD/</a></p><p>双击运行即可。</p><p>  <strong>提示</strong><br>  如果地址不可以下载可以选择网盘下载</p><ul><li>百度网盘下载地址：<a href="http://pan.baidu.com/s/1mhGBQ2W" target="_blank" rel="noopener">http://pan.baidu.com/s/1mhGBQ2W</a></li></ul><p>凡是你用过的服务器的密码。都可以被翻译回来。</p><p>原理：见官网 How it Works。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解SVN 密码破解，svn密码本地找回&lt;/p&gt;
    
    </summary>
    
      <category term="svn" scheme="http://code.skyheng.com/categories/svn/"/>
    
    
      <category term="svn" scheme="http://code.skyheng.com/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>Subversion在Linux下的安装与配置</title>
    <link href="http://code.skyheng.com/post/26924.html"/>
    <id>http://code.skyheng.com/post/26924.html</id>
    <published>2016-05-02T15:10:48.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解Subversion 1.8安装</p><a id="more"></a><h2 id="RPM-安装（推荐）"><a href="#RPM-安装（推荐）" class="headerlink" title="RPM 安装（推荐）"></a>RPM 安装（推荐）</h2><ul><li>wandisco 整理的 RPM 文件官网：<a href="http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/" target="_blank" rel="noopener">http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/</a></li><li>下载下面几个 RPM 文件：<ul><li>创建目录来保存下载的 RPM：<code>sudo mkdir -p /opt/setups/subversion/ ; cd /opt/setups/subversion/</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/mod_dav_svn-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/serf-1.3.7-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-gnome-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-javahl-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-perl-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-python-1.8.15-1.x86_64.rpm</code></li><li><code>wget http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/x86_64/subversion-tools-1.8.15-1.x86_64.rpm</code></li><li>如果上面的 RPM 链接失效，你也可以考虑下载我提供的百度云盘地址：<a href="http://pan.baidu.com/s/1pKnGia3" target="_blank" rel="noopener">http://pan.baidu.com/s/1pKnGia3</a></li></ul></li></ul><ul><li><p>安装下载的 RPM 文件：</p><ul><li><code>sudo rpm -ivh *.rpm</code></li></ul></li><li><p>检查安装后的版本：</p><ul><li><code>svn --version</code></li></ul></li></ul><h2 id="编译安装（不推荐）"><a href="#编译安装（不推荐）" class="headerlink" title="编译安装（不推荐）"></a>编译安装（不推荐）</h2><ul><li>subversion 1.8 编译安装（本人没有尝试成功，所以不推荐，下面内容只供参考）<ul><li>官网安装说明（查找关键字 <code>Dependency Overview</code>）：<a href="http://svn.apache.org/repos/asf/subversion/trunk/INSTALL" target="_blank" rel="noopener">http://svn.apache.org/repos/asf/subversion/trunk/INSTALL</a></li><li>此时 1.8 最新版本为：<code>subversion-1.8.15.tar.gz</code></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>setups</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>安装编译所需工具：<ul><li><code>sudo yum install -y gcc gcc-c++ autoconf libtool</code></li></ul></li><li>所需依赖包说明：<ul><li>（必要包）apr 和 apr-util 官网地址：<a href="http://archive.apache.org/dist/apr/" target="_blank" rel="noopener">http://archive.apache.org/dist/apr/</a></li><li>（必要包）zlib 官网地址：<a href="ttp://www.zlib.net/" target="_blank" rel="noopener">ttp://www.zlib.net/</a></li><li>（必要包）SQLite 官网地址：<a href="http://www.sqlite.org/download.html" target="_blank" rel="noopener">http://www.sqlite.org/download.html</a></li><li>（必要包）Subversion 官网地址：<a href="https://subversion.apache.org/download.cgi" target="_blank" rel="noopener">https://subversion.apache.org/download.cgi</a></li></ul></li><li>所需依赖包下载：<ul><li>apr 下载：<code>wget http://archive.apache.org/dist/apr/apr-1.5.2.tar.gz</code></li><li>apr-util 下载：<code>wget http://archive.apache.org/dist/apr/apr-util-1.5.4.tar.gz</code></li><li>zlib 下载：<code>wget http://zlib.net/zlib-1.2.8.tar.gz</code></li><li>SQLite 下载：<code>wget http://www.sqlite.org/2016/sqlite-amalgamation-3100200.zip</code></li><li>Subversion 下载：<code>wget http://apache.fayea.com/subversion/subversion-1.8.15.tar.gz</code></li></ul></li><li>安装依赖包：    <ul><li>apr 安装：<ul><li>解压：<code>tar -zxvf apr-1.5.2.tar.gz</code></li><li>移动到我个人习惯的安装目录下：<code>mv apr-1.5.2/ /usr/program/</code></li><li>标准的 GNU 源码安装方式：<ul><li><code>cd /usr/program/apr-1.5.2</code></li><li><code>./configure</code></li><li><code>make</code></li><li><code>make install</code></li></ul></li><li>安装完得到安装的配置路径：<code>/usr/local/apr/bin/apr-1-config</code>，这个需要记下来，下面会用到</li></ul></li><li>apr-util 安装：<ul><li>解压：<code>tar -zxvf apr-util-1.5.4.tar.gz</code></li><li>移动到我个人习惯的安装目录下：<code>mv apr-util-1.5.4/ /usr/program/</code></li><li>标准的 GNU 源码安装方式：<ul><li><code>cd /usr/program/apr-util-1.5.4/</code></li><li><code>./configure  --with-apr=/usr/local/apr/bin/apr-1-config</code></li><li><code>make</code></li><li><code>make install</code></li></ul></li><li>安装完得到安装的配置路径：<code>/usr/local/apr/bin/apu-1-config</code>，这个需要记下来，下面会用到</li></ul></li><li>zlib 安装：<ul><li>解压：<code>tar -zxvf zlib-1.2.8.tar.gz</code></li><li>移动到我个人习惯的安装目录下：<code>mv zlib-1.2.8/ /usr/program/</code></li><li>标准的 GNU 源码安装方式：<ul><li><code>cd /usr/program/zlib-1.2.8/</code></li><li><code>./configure</code></li><li><code>make</code></li><li><code>make install</code></li></ul></li></ul></li><li>Subversion 解压：<ul><li>解压：<code>tar -zxvf subversion-1.8.15.tar.gz</code></li><li>移动到我个人习惯的安装目录下：<code>mv subversion-1.8.15/ /usr/program/</code></li></ul></li><li>SQLite 安装：<ul><li>解压：<code>unzip sqlite-amalgamation-3100200.zip</code></li><li>移动到 subversion 目录下：<code>mv sqlite-amalgamation-3100200/ /usr/program/subversion-1.8.15/</code></li></ul></li><li>Subversion 安装：<ul><li>标准的 GNU 源码安装方式：<ul><li><code>cd /usr/program/subversion-1.8.15/</code></li><li><code>./configure --prefix=/usr/local/subversion --with-apr=/usr/local/apr/bin/apr-1-config  --with-apr-util=/usr/local/apr/bin/apu-1-config</code></li><li><code>make</code></li><li><code>make install</code></li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="SVN-配置"><a href="#SVN-配置" class="headerlink" title="SVN 配置"></a>SVN 配置</h2><ul><li>在系统上创建一个目录用来存储所有的 SVN 文件：<code>mkdir -p /opt/svn/repo/</code></li><li>新建一个版本仓库：<code>svnadmin create /opt/svn/repo/</code><ul><li>生成如下目录和文件：<ul><li>目录：<code>locks</code></li><li>目录：<code>hooks</code></li><li>目录：<code>db</code></li><li>目录：<code>conf</code></li><li>文件：<code>format</code></li><li>文件：<code>README.txt</code></li></ul></li><li>其中，目录 <code>conf</code> 最为重要，常用的配置文件都在里面<ul><li><code>svnserve.conf</code> 是 svn 服务综合配置文件</li><li><code>passwd</code> 是用户名和密码配置文件</li><li><code>authz</code> 是权限配置文件</li></ul></li></ul></li></ul><ul><li>设置配置文件<ul><li>编辑配置文件：<code>vim /opt/svn/repo/conf/svnserve.conf</code></li><li><img src="http://img.skyheng.com/picture/2016/svn/svn-install-1.png" alt="设置配置文件"></li><li>配置文件中下面几个参数（默认是注释的）：<ul><li><code>anon-access</code>： 对不在授权名单中的用户访问仓库的权限控制，有三个可选性：<code>write、read、none</code><ul><li><code>none</code> 表示没有任何权限</li><li><code>read</code> 表示只有只读权限</li><li><code>write</code> 表示有读写权限</li></ul></li><li><code>auth-access</code>：对在授权名单中的用户访问仓库的权限控制，有三个可选性：<code>write、read、none</code><ul><li><code>none</code> 表示没有任何权限</li><li><code>read</code> 表示只有只读权限</li><li><code>write</code> 表示有读写权限</li></ul></li><li><code>password-db</code>：指定用户数据配置文件</li><li><code>authz-db</code>：指定用户权限配置文件</li><li><code>realm</code>：指定版本库的认证域，即在登录时提示的认证域名称。若两个版本库的认证域相同，建议使用相同的用户名口令数据文件<ul><li>当前实例的配置内容：<code>realm = myrepo</code></li></ul></li></ul></li></ul></li></ul><ul><li>添加用户<ul><li>编辑配置文件：<code>vim /opt/svn/repo/conf/passwd</code></li><li><img src="http://img.skyheng.com/picture/2016/svn/svn-install-2.png" alt="添加用户"></li><li>添加用户很简答，如上图所示在配置文中添加一个格式为：<code>用户名 = 密码</code>  的即可</li></ul></li></ul><ul><li>设置用户权限<ul><li>编辑配置文件：<code>vim /opt/svn/repo/conf/authz</code></li><li><img src="http://img.skyheng.com/picture/2016/svn/svn-install-3.png" alt="设置用户权限"></li><li>配置文件中几个参数解释：<ul><li><code>r</code> 表示可写</li><li><code>w</code> 表示可读</li><li><code>rw</code> 表示可读可写</li><li><code>* =</code> 表示除了上面设置的权限用户组以外，其他所有用户都设置空权限，空权限表示禁止访问本目录，这很重要一定要加上</li><li><code>[groups]</code> 表示下面创建的是用户组，实际应用中一般我们对使用者都是进行分组的，然后把权限控制在组上，这样比较方便。使用组权限方式：<code>@组名 = rw</code> </li></ul></li></ul></li></ul><ul><li><p>启动服务</p><ul><li><code>svnserve -d -r /opt/svn/repo/ --listen-port 3690</code><ul><li><code>-d</code> 表示后台运行</li><li><code>-r /opt/svn/repo/</code> 表示指定根目录</li><li><code>--listen-port 3690</code> 表示指定端口，默认就是 3690，所以如果要用默认端口这个也是可以省略掉的</li></ul></li></ul></li><li><p>停止服务</p><ul><li><code>killall svnserve</code></li></ul></li><li><p>查看服务是否启动</p><ul><li><code>ps -ef|grep svnserve</code></li></ul></li><li><p>svnserve -d -r  /home/svndata</p></li><li>ps -ef|grep svnserve</li></ul><ul><li>测试<ul><li>iptables 处理<ul><li>一种方式：先关闭 iptables，防止出现拦截问题而测试不了：<code>service iptables stop</code></li><li>一种方式：在 iptables 中添加允许规则（svn 默认端口是 3690）：<ul><li>添加规则：<code>sudo iptables -I INPUT -p tcp -m tcp --dport 3690 -j ACCEPT</code></li><li>保存规则：<code>sudo /etc/rc.d/init.d/iptables save</code></li><li>重启 iptables：<code>sudo service iptables restart</code></li></ul></li></ul></li><li>在 Windows 的 svn 客户端上访问:<code>svn://192.168.0.110</code></li></ul></li></ul><h2 id="SVN-设置提交之后可修改提交的-Message-信息"><a href="#SVN-设置提交之后可修改提交的-Message-信息" class="headerlink" title="SVN 设置提交之后可修改提交的 Message 信息"></a>SVN 设置提交之后可修改提交的 Message 信息</h2><ul><li>默认的 SVN 是无法修改提交后的 Message 信息的，修改会报如下错误：</li><li><img src="http://img.skyheng.com/picture/2016/svn/svn-install-4.png" alt="SVN 设置提交之后可修改提交的 Message 信息"></li><li>解决办法：<ul><li>下载我 hooks 文件：<a href="http://pan.baidu.com/s/1c1jtlmw" target="_blank" rel="noopener">http://pan.baidu.com/s/1c1jtlmw</a></li><li>把 pre-revprop-change 文件放在你的仓库下，比如我仓库地址是：<code>/opt/svn/repo/hooks</code><ul><li>编辑该文件：<code>vim /opt/svn/repo/hooks/pre-revprop-change</code></li><li>把文件尾巴的这句脚本：<code>echo &quot;$1 $2 $3 $4 $5&quot; &gt;&gt; /opt/svn/repo/logchanges.log</code>，改为：<code>echo &quot;$1 $2 $3 $4 $5&quot; &gt;&gt; /你的仓库地址/logchanges.log</code></li><li>你在该目录下也可以看到一个文件 <code>pre-revprop-change.tmpl</code>，这个其实就是 svn 提供给你模板，其他的那些你有兴趣也可以研究下</li></ul></li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://tecadmin.net/install-subversion-1-8-on-centos-rhel/" target="_blank" rel="noopener">http://tecadmin.net/install-subversion-1-8-on-centos-rhel/</a></li><li><a href="http://svn.apache.org/repos/asf/subversion/trunk/INSTALL" target="_blank" rel="noopener">http://svn.apache.org/repos/asf/subversion/trunk/INSTALL</a></li><li><a href="http://chenpipi.blog.51cto.com/8563610/1613007" target="_blank" rel="noopener">http://chenpipi.blog.51cto.com/8563610/1613007</a></li><li><a href="https://blog.linuxeye.com/348.html" target="_blank" rel="noopener">https://blog.linuxeye.com/348.html</a></li><li><a href="http://jingyan.baidu.com/article/046a7b3efb6a5df9c27fa991.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/046a7b3efb6a5df9c27fa991.html</a></li><li><a href="http://www.ha97.com/4467.html" target="_blank" rel="noopener">http://www.ha97.com/4467.html</a></li><li><a href="http://blog.feehi.com/linux/7.html" target="_blank" rel="noopener">http://blog.feehi.com/linux/7.html</a></li><li><a href="http://my.oschina.net/lionel45/blog/298305?fromerr=1NdIndN0" target="_blank" rel="noopener">http://my.oschina.net/lionel45/blog/298305?fromerr=1NdIndN0</a></li><li><a href="http://www.centoscn.com/CentosServer/ftp/2015/0622/5708.html" target="_blank" rel="noopener">http://www.centoscn.com/CentosServer/ftp/2015/0622/5708.html</a></li><li><a href="http://blog.csdn.net/tianlesoftware/article/details/6119231" target="_blank" rel="noopener">http://blog.csdn.net/tianlesoftware/article/details/6119231</a></li><li><a href="http://www.scmeye.com/thread-419-1-1.html" target="_blank" rel="noopener">http://www.scmeye.com/thread-419-1-1.html</a></li><li><a href="http://m.blog.csdn.net/article/details?id=7908907" target="_blank" rel="noopener">http://m.blog.csdn.net/article/details?id=7908907</a></li><li><p>设置可编辑提交信息：<a href="http://stackoverflow.com/questions/692851/can-i-go-back-and-edit-comments-on-an-svn-checkin" target="_blank" rel="noopener">http://stackoverflow.com/questions/692851/can-i-go-back-and-edit-comments-on-an-svn-checkin</a></p></li><li><p><a href="http://www.cnblogs.com/lpfuture/p/5853030.html" target="_blank" rel="noopener">http://www.cnblogs.com/lpfuture/p/5853030.html</a></p></li><li><a href="http://www.178linux.com/63299?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">http://www.178linux.com/63299?utm_source=tuicool&amp;utm_medium=referral</a></li><li>搭建可用http访问的svn（windows）<a href="http://blog.csdn.net/yangyangrenren/article/details/50999153" target="_blank" rel="noopener">http://blog.csdn.net/yangyangrenren/article/details/50999153</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解Subversion 1.8安装&lt;/p&gt;
    
    </summary>
    
      <category term="svn" scheme="http://code.skyheng.com/categories/svn/"/>
    
    
      <category term="svn" scheme="http://code.skyheng.com/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>Mysql在Linux下的安装和配置</title>
    <link href="http://code.skyheng.com/post/56374.html"/>
    <id>http://code.skyheng.com/post/56374.html</id>
    <published>2016-05-02T14:28:29.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解Mysql安装和配置</p><a id="more"></a><p><img src="http://img.skyheng.com/picture/public/mysql.png" alt="mysql"></p><h2 id="Mysql-安装"><a href="#Mysql-安装" class="headerlink" title="Mysql 安装"></a>Mysql 安装</h2><ul><li>Mysql 安装<ul><li>官网：<a href="http://www.mysql.com/" target="_blank" rel="noopener">http://www.mysql.com/</a></li><li>官网下载：<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/</a></li><li>官网 5.5 下载：<a href="http://dev.mysql.com/downloads/mysql/5.5.html#downloads" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/5.5.html#downloads</a></li><li>官网 5.6 下载：<a href="http://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/5.6.html#downloads</a></li><li>官网 5.7 下载：<a href="http://dev.mysql.com/downloads/mysql/5.7.html#downloads" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/5.7.html#downloads</a></li><li>官网帮助中心：<a href="http://dev.mysql.com/doc/refman/5.6/en/source-installation.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/5.6/en/source-installation.html</a></li><li>此时（20160502） Mysql 5.5 最新版本为：<strong>5.5.48</strong></li><li>此时（20160502） Mysql 5.6 最新版本为：<strong>5.6.29</strong></li><li>此时（20160502） Mysql 5.7 最新版本为：<strong>5.7.11</strong></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>setups</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>Mysql 5.6 下载：<code>wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.29.tar.gz</code> （大小：31 M）</li><li>Mysql 5.7 下载：<code>wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.11.tar.gz</code> （大小：47 M）</li><li>我们这次安装以 5.6 为实例<ul><li>进入下载目录：<code>cd /opt/setups</code></li><li>解压压缩包：<code>tar zxvf mysql-5.6.29.tar.gz</code></li><li>移到解压包：<code>mv /opt/setups/mysql-5.6.29 /usr/program/</code></li><li>安装依赖包、编译包：<code>yum install -y make gcc-c++ cmake bison-devel  ncurses-devel</code></li><li>进入解压目录：<code>cd /usr/program/mysql-5.6.29/</code></li><li>生成安装目录：<code>mkdir -p /usr/program/mysql/data</code></li><li>生成配置（使用 InnoDB）：<code>sudo cmake -DCMAKE_INSTALL_PREFIX=/usr/program/mysql -DMYSQL_DATADIR=/usr/program/mysql/data -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS:STRING=utf8 -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DENABLED_LOCAL_INFILE=1</code><ul><li>更多参数说明可以查看：<a href="http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html</a></li></ul></li><li>编译：<code>sudo make</code>，这个过程比较漫长，一般都在 30 分钟左右，具体还得看机子配置，如果最后结果有 error，建议删除整个 mysql 目录后重新解压一个出来继续处理</li><li>安装：<code>sudo make install</code></li><li>配置开机启动：<ul><li><code>sudo cp /usr/program/mysql-5.6.29/support-files/mysql.server  /etc/init.d/mysql</code></li><li><code>sudo chmod 755 /etc/init.d/mysql</code></li><li><code>sudo chkconfig mysql on</code></li></ul></li><li>复制一份配置文件： <code>sudo cp /usr/program/mysql-5.6.29/support-files/my-default.cnf /etc/my.cnf</code></li><li>删除安装的目录：<code>rm -rf /usr/program/mysql-5.6.29/</code></li><li>添加组和用户及安装目录权限<ul><li><code>sudo groupadd mysql</code> #添加组</li><li><code>sudo useradd -g mysql mysql -s /bin/false</code> #创建用户mysql并加入到mysql组，不允许mysql用户直接登录系统</li><li><code>sudo chown -R mysql:mysql /usr/program/mysql/data</code> #设置MySQL数据库目录权限</li></ul></li><li>初始化数据库：<code>sudo /usr/program/mysql/scripts/mysql_install_db --basedir=/usr/program/mysql --datadir=/usr/program/mysql/data --skip-name-resolve --user=mysql</code></li><li>启动 Mysql 服务器：<code>service mysql start</code></li><li>查看是否已经启动了：<code>ps aux | grep mysql</code></li><li>常用命令软连接，才可以在终端直接使用：mysql 和 mysqladmin 命令<ul><li><code>sudo ln -s /usr/program/mysql/bin/mysql /usr/bin</code></li><li><code>sudo ln -s /usr/program/mysql/bin/mysqladmin /usr/bin</code></li></ul></li></ul></li></ul></li></ul><h2 id="修改-root-账号密码"><a href="#修改-root-账号密码" class="headerlink" title="修改 root 账号密码"></a>修改 root 账号密码</h2><ul><li>默认安装情况下，root 的密码是空，所以为了方便我们可以设置一个密码，假设我设置为：123456</li><li>终端下执行：<code>mysql -uroot</code><ul><li>现在进入了 mysql 命令行管理界面，输入：<code>SET PASSWORD = PASSWORD(&#39;123456&#39;);</code></li></ul></li><li>修改密码后，终端下执行：<code>mysql -uroot -p</code><ul><li>根据提示，输入密码进度 mysql 命令行状态。</li></ul></li><li>如果你在其他机子上连接该数据库机子报：<strong>Access denied for user ‘root’@’localhost’ (using password: YES)</strong><ul><li>解决办法：</li><li>在终端中执行：<code>service mysql stop</code></li><li>在终端中执行：<code>/usr/program/mysql/bin/mysqld --skip-grant-tables</code><ul><li>此时 MySQL 服务会一直处于监听状态，你需要另起一个终端窗口来执行接下来的操作</li><li>在终端中执行：<code>mysql -u root mysql</code></li><li>进入 MySQL 命令后执行：<code>UPDATE user SET Password=PASSWORD(&#39;填写你要的新密码&#39;) where USER=&#39;root&#39;;FLUSH PRIVILEGES;</code></li><li>重启 MySQL 服务：<code>service mysql restart</code></li></ul></li></ul></li></ul><h2 id="Mysql-配置"><a href="#Mysql-配置" class="headerlink" title="Mysql 配置"></a>Mysql 配置</h2><ul><li>官网配置参数解释：<a href="http://dev.mysql.com/doc/refman/5.6/en/mysqld-option-tables.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/5.6/en/mysqld-option-tables.html</a></li><li><p>找一下当前系统中有多少个 my.cnf 文件：<code>find / -name &quot;my.cnf&quot;</code>，我查到的结果：</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/my.cnf</span><br><span class="line">   /usr/program/mysql/my.cnf</span><br><span class="line">   /usr/program/mysql/mysql-test/suite/ndb/my.cnf</span><br><span class="line">   /usr/program/mysql/mysql-test/suite/ndb_big/my.cnf</span><br><span class="line">   .............</span><br><span class="line">   /usr/program/mysql/mysql-test/suite/ndb_rpl/my.cnf</span><br></pre></td></tr></table></figure><ul><li>保留 <strong>/etc/my.cnf</strong> 和 <strong>/usr/program/mysql/mysql-test/</strong> 目录下配置文件，其他删除掉。</li></ul></li></ul><h2 id="MySQL-主从复制"><a href="#MySQL-主从复制" class="headerlink" title="MySQL 主从复制"></a>MySQL 主从复制</h2><h3 id="环境说明和注意点"><a href="#环境说明和注意点" class="headerlink" title="环境说明和注意点"></a>环境说明和注意点</h3><ul><li>假设有两台服务器，一台做主，一台做从<ul><li>MySQL 主信息：<ul><li>IP：<strong>12.168.1.113</strong></li><li>端口：<strong>3306</strong></li></ul></li><li>MySQL 从信息：<ul><li>IP：<strong>12.168.1.115</strong></li><li>端口：<strong>3306</strong></li></ul></li></ul></li><li>注意点<ul><li>主 DB server 和从 DB server 数据库的版本一致</li><li>主 DB server 和从 DB server 数据库数据一致</li><li>主 DB server 开启二进制日志，主 DB server 和从 DB server 的 server-id 都必须唯一</li></ul></li><li>优先操作：<ul><li><strong>把主库的数据库复制到从库并导入</strong></li></ul></li></ul><h3 id="主库机子操作"><a href="#主库机子操作" class="headerlink" title="主库机子操作"></a>主库机子操作</h3><ul><li><p>主库操作步骤</p><ul><li>创建一个目录：<code>mkdir -p /usr/program/mysql/data/mysql-bin</code></li><li>主 DB 开启二进制日志功能：<code>vim /etc/my.cnf</code>，<ul><li>添加一行：<code>log-bin = /usr/program/mysql/data/mysql-bin</code></li><li>指定同步的数据库，如果不指定则同步全部数据库，其中 ssm 是我的数据库名：<code>binlog-do-db=ssm</code></li></ul></li><li>重启主库 MySQL 服务</li><li>进入 MySQL 命令行状态，执行 SQL 语句查询状态：<code>SHOW MASTER STATUS;</code><ul><li>在显示的结果中，我们需要记录下 <strong>File</strong> 和 <strong>Position</strong> 值，等下从库配置有用。</li></ul></li><li><p>设置授权用户 slave01 使用 123456 密码登录主库，这里 @ 后的 IP 为从库机子的 IP 地址，如果从库的机子有多个，我们需要多个这个 SQL 语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> <span class="keyword">slave</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'slave01'</span>@<span class="string">'192.168.1.135'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="从库机子操作"><a href="#从库机子操作" class="headerlink" title="从库机子操作"></a>从库机子操作</h3><ul><li>从库操作步骤</li><li>测试从库机子是否能连上主库机子：<code>sudo mysql -h 192.168.1.105 -u slave01 -p</code>，必须要连上下面的操作才有意义。<ul><li>由于不能排除是不是系统防火墙的问题，所以建议连不上临时关掉防火墙：<code>service iptables stop</code></li><li>或是添加防火墙规则：<ul><li>添加规则：<code>sudo iptables -I INPUT -p tcp -m tcp --dport 3306 -j ACCEPT</code></li><li>保存规则：<code>sudo service iptables save</code></li><li>重启 iptables：<code>sudo service iptables restart</code></li></ul></li></ul></li><li>修改配置文件：<code>vim /etc/my.cnf</code>，把 server-id 改为跟主库不一样</li><li>在进入 MySQL 的命令行状态下，输入下面 SQL：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span></span><br><span class="line">master_host=<span class="string">'192.168.1.200'</span>,</span><br><span class="line">master_user=<span class="string">'slave01'</span>,</span><br><span class="line">master_password=<span class="string">'123456'</span>,</span><br><span class="line">master_port=<span class="number">3306</span>,</span><br><span class="line">master_log_file=<span class="string">'mysql3306-bin.000006'</span>,&gt;&gt;&gt;这个值复制刚刚让你记录的值</span><br><span class="line">master_log_pos=1120;&gt;&gt;&gt;这个值复制刚刚让你记录的值</span><br></pre></td></tr></table></figure><ul><li>执行该 SQL 语句，启动 slave 同步：<code>START SLAVE;</code></li><li>执行该 SQL 语句，查看从库机子同步状态：<code>SHOW SLAVE STATUS;</code></li><li>在查看结果中必须下面两个值都是 Yes 才表示配置成功：<ul><li><code>Slave_IO_Running:Yes</code><ul><li>如果不是 Yes 也不是 No，而是 Connecting，那就表示从机连不上主库，需要你进一步排查连接问题。</li></ul></li><li><code>Slave_SQL_Running:Yes</code></li></ul></li><li>如果你的 Slave_IO_Running 是 No， 那你可以检查从库下的错误日志：<code>cat /usr/program/mysql/data/mysql-error.log</code><ul><li>如果里面提示 uuid 错误，你可以编辑从库的这个配置文件：<code>vim /usr/program/mysql/data/auto.cnf</code>，把配置文件中的：server-uuid 值随便改一下，保证和主库是不一样的。</li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://www.cnblogs.com/xiongpq/p/3384681.html" target="_blank" rel="noopener">http://www.cnblogs.com/xiongpq/p/3384681.html</a></li><li>win版本安装 <a href="http://blog.csdn.net/huangmx1995/article/details/52909580" target="_blank" rel="noopener">http://blog.csdn.net/huangmx1995/article/details/52909580</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解Mysql安装和配置&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
      <category term="mysql" scheme="http://code.skyheng.com/categories/linux/mysql/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="mysql" scheme="http://code.skyheng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Maven在Linux下的安装和配置</title>
    <link href="http://code.skyheng.com/post/24125.html"/>
    <id>http://code.skyheng.com/post/24125.html</id>
    <published>2016-05-02T14:28:29.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解Maven 安装和配置</p><a id="more"></a><h2 id="Maven-安装"><a href="#Maven-安装" class="headerlink" title="Maven 安装"></a>Maven 安装</h2><ul><li><p>Maven 安装</p><ul><li>官网：<a href="http://maven.apache.org/" target="_blank" rel="noopener">http://maven.apache.org/</a></li><li>官网下载：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></li><li>历史版本下载：<a href="https://archive.apache.org/dist/maven/binaries/" target="_blank" rel="noopener">https://archive.apache.org/dist/maven/binaries/</a></li><li>此时（20160502） Maven 最新版本为：<strong>3.3.9</strong></li><li>Maven 3.3 的 JDK 最低要求是 JDK 7</li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>setups</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>下载压缩包：<code>wget http://mirrors.cnnic.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz</code></li><li>解压：<code>tar zxvf apache-maven-3.3.9-bin.tar.gz</code></li><li>修改目录名，默认的太长了：<code>mv apache-maven-3.3.9/ maven3.3.9/</code></li><li>移到我个人习惯的安装目录下：<code>mv maven3.3.9/ /usr/program</code></li><li>环境变量设置：<code>vim /etc/profile</code></li><li><p>在文件最尾巴添加下面内容：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Maven</span></span><br><span class="line"><span class="attr">MAVEN_HOME</span>=/usr/program/maven3.<span class="number">3.9</span></span><br><span class="line"><span class="attr">PATH</span>=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line"><span class="attr">MAVEN_OPTS</span>=<span class="string">"-Xms256m -Xmx356m"</span></span><br><span class="line">export MAVEN_HOME</span><br><span class="line">export PATH</span><br><span class="line">export MAVEN_OPTS</span><br></pre></td></tr></table></figure></li><li><p>刷新配置文件：<code>source /etc/profile</code></p></li><li>测试是否安装成功：<code>mvn -version</code></li></ul></li></ul><h2 id="Maven-配置"><a href="#Maven-配置" class="headerlink" title="Maven 配置"></a>Maven 配置</h2><ul><li>配置项目连接上私服</li><li>全局方式配置：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--本地仓库位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/maven/my_local_repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--设置 Nexus 认证信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--设置 Nexus 镜像，后面只要本地没对应的以来，则到 Nexus 去找--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/nexus/content/groups/public-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus-releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus-releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>项目级别：</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://maven.apache.org/install.html" target="_blank" rel="noopener">http://maven.apache.org/install.html</a></li><li><a href="http://www.tutorialspoint.com/maven/index.htm" target="_blank" rel="noopener">http://www.tutorialspoint.com/maven/index.htm</a></li><li><a href="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener">http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html</a></li><li><a href="http://maven.apache.org/guides/getting-started/index.html" target="_blank" rel="noopener">http://maven.apache.org/guides/getting-started/index.html</a></li><li><a href="http://maven.apache.org/general.html" target="_blank" rel="noopener">http://maven.apache.org/general.html</a></li><li><a href="http://stackoverflow.com/questions/6950346/infrastructure-with-maven-jenkins-nexus" target="_blank" rel="noopener">http://stackoverflow.com/questions/6950346/infrastructure-with-maven-jenkins-nexus</a></li><li><a href="http://blog.csdn.net/sxyx2008/article/details/7975129" target="_blank" rel="noopener">http://blog.csdn.net/sxyx2008/article/details/7975129</a></li><li><a href="http://blog.csdn.net/xuke6677/article/details/8482472" target="_blank" rel="noopener">http://blog.csdn.net/xuke6677/article/details/8482472</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解Maven 安装和配置&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
      <category term="maven" scheme="http://code.skyheng.com/categories/linux/maven/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="maven" scheme="http://code.skyheng.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>在linux下的JDK安装和配置（基于阿里云服务器CentOS 6.5）</title>
    <link href="http://code.skyheng.com/post/7577.html"/>
    <id>http://code.skyheng.com/post/7577.html</id>
    <published>2016-04-17T15:08:27.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解JDK的安装与配置基于CentOS 6.5下的安装和配置</p><a id="more"></a><h1 id="JDK-安装"><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h1><h2 id="CentOS-下过程"><a href="#CentOS-下过程" class="headerlink" title="CentOS 下过程"></a>CentOS 下过程</h2><ul><li>JDK 在 CentOS 和 Ubuntu 下安装过程是一样的，所以这里不再讲 Ubuntu 系统下的安装</li><li><p>JDK 1.8 下载</p><ul><li>此时（20160417）最新版本：<code>jdk-8u72-linux-x64.tar.gz</code></li><li>官网：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></li><li>百度云下载（64 位）：<a href="http://pan.baidu.com/s/1eQZffbW" target="_blank" rel="noopener">http://pan.baidu.com/s/1eQZffbW</a></li><li>官网压缩包地址：<a href="http://211.138.156.198:82/1Q2W3E4R5T6Y7U8I9O0P1Z2X3C4V5B/download.oracle.com/otn-pub/java/jdk/8u72-b15/jdk-8u72-linux-x64.tar.gz" target="_blank" rel="noopener">http://211.138.156.198:82/1Q2W3E4R5T6Y7U8I9O0P1Z2X3C4V5B/download.oracle.com/otn-pub/java/jdk/8u72-b15/jdk-8u72-linux-x64.tar.gz</a></li><li>在命令行模式下下载上面压缩包：<ul><li><code>cd /opt</code></li><li><code>sudo wget http://211.138.156.198:82/1Q2W3E4R5T6Y7U8I9O0P1Z2X3C4V5B/download.oracle.com/otn-pub/java/jdk/8u72-b15/jdk-8u72-linux-x64.tar.gz</code></li></ul></li></ul></li><li><p>默认 CentOS 有安装 openJDK，建议先卸载掉</p><ul><li>检查 JDK 命令：<code>java -version</code></li><li><p>查询本地 JDK 安装程序情况； <code>rpm -qa|grep java</code></p><ul><li>我查询出来的结果如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java-1.6.0-openjdk-1.6.0.38-1.13.10.0.el6_7.x86_64</span><br><span class="line">java-1.7.0-openjdk-1.7.0.95-2.6.4.0.el6_7.x86_64</span><br><span class="line">tzdata-java-2015g-2.el6.noarch</span><br></pre></td></tr></table></figure><ul><li>卸载上面三个文件（<code>--nodeps</code> 的作用：忽略依赖的检查）：</li><li><code>sudo rpm -e --nodeps java-1.6.0-openjdk-1.6.0.38-1.13.10.0.el6_7.x86_64</code></li><li><code>sudo rpm -e --nodeps java-1.7.0-openjdk-1.7.0.95-2.6.4.0.el6_7.x86_64</code></li><li><code>sudo rpm -e --nodeps tzdata-java-2015g-2.el6.noarch</code></li><li>也可以一起卸载：<code>sudo rpm -e --nodeps java-1.6.0-openjdk-1.6.0.38-1.13.10.0.el6_7.x86_64 java-1.7.0-openjdk-1.7.0.95-2.6.4.0.el6_7.x86_64 tzdata-java-2015g-2.el6.noarch</code></li></ul></li></ul></li><li><p>JDK 1.8 安装</p><ul><li>我们以安装 <code>jdk-8u72-linux-x64.tar.gz</code> 为例</li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>soft</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>解压安装包：<code>sudo tar -zxvf jdk-8u72-linux-x64.tar.gz</code></li><li>移到解压包到我个人习惯的安装目录下：<code>mv jdk1.8.0_72/ /usr/program/</code></li><li><p>配置环境变量：</p><ul><li>编辑配置文件：<code>sudo vim /etc/profile</code></li><li><p>在该文件的最尾巴，添加下面内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/program/jdk1.8.0_72</span><br><span class="line">JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export JRE_HOME</span><br><span class="line">export PATH</span><br><span class="line">export CLASSPATH</span><br></pre></td></tr></table></figure></li><li><p>执行命令，刷新该配置（必备操作）：<code>source /etc/profile</code></p></li><li>检查是否使用了最新的 JDK：<code>java -version</code></li></ul></li></ul></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>JDK 历史版本下载地址整理（不间断更新）：<ul><li><strong>JDK 9</strong>：<a href="https://jdk9.java.net/download/" target="_blank" rel="noopener">https://jdk9.java.net/download/</a></li><li><strong>JDK 8</strong>：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></li><li><strong>JDK 7</strong>：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</a></li><li><strong>JDK 6</strong>：<a href="http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html</a></li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://www.jikexueyuan.com/course/480_1.html?ss=1" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/480_1.html?ss=1</a></li><li><code>jdk1.7下载地址：wget http://t-down.oss-cn-hangzhou.aliyuncs.com/jdk-7u55-linux-x64.tar.gz</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解JDK的安装与配置基于CentOS 6.5下的安装和配置&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/categories/linux/centOS/"/>
    
      <category term="jdk" scheme="http://code.skyheng.com/categories/linux/centOS/jdk/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/tags/centOS/"/>
    
      <category term="jdk" scheme="http://code.skyheng.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>Nexus在linux下的安装和配置（基于阿里云服务器CentOS 6.5）</title>
    <link href="http://code.skyheng.com/post/59363.html"/>
    <id>http://code.skyheng.com/post/59363.html</id>
    <published>2016-04-17T11:37:27.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解Nexus安装基于CentOS 6.5下的安装和配置<br><a id="more"></a></p><h2 id="Nexus-安装"><a href="#Nexus-安装" class="headerlink" title="Nexus 安装"></a>Nexus 安装</h2><ul><li>官网：<a href="http://www.sonatype.org/nexus/" target="_blank" rel="noopener">http://www.sonatype.org/nexus/</a></li><li>官网下载：<a href="http://www.sonatype.org/nexus/archived/" target="_blank" rel="noopener">http://www.sonatype.org/nexus/archived/</a></li><li>此时（20160417） Nexus 最新版本为：<strong>nexus-2.12.0-01-bundle</strong></li><li>JDK 要求是 JDK 7，官网要求 7u6 或之后版本，包括 JDK 8</li><li>官网帮助说明 1：<a href="http://books.sonatype.com/nexus-book/2.11/reference/install.html" target="_blank" rel="noopener">http://books.sonatype.com/nexus-book/2.11/reference/install.html</a></li><li>官网帮助说明 2：<a href="http://books.sonatype.com/sonatype-clm-book/html/clm-book/installation-configuration.html" target="_blank" rel="noopener">http://books.sonatype.com/sonatype-clm-book/html/clm-book/installation-configuration.html</a></li><li>我个人习惯 <code>/opt</code> 目录下创建一个目录 <code>soft</code> 用来存放各种软件安装包；在 <code>/usr</code> 目录下创建一个 <code>program</code> 用来存放各种解压后的软件包，下面的讲解也都是基于此习惯</li><li>我个人已经使用了第三方源：<code>EPEL、RepoForge</code>，如果你出现 <code>yum install XXXXX</code> 安装不成功的话，很有可能就是你没有相关源，请查看我对源设置的文章</li><li>压缩包下载（由于国内网络的原因不排除你下载不了）：<code>wget http://download.sonatype.com/nexus/oss/nexus-2.12.0-01-bundle.tar.gz</code></li><li><p>如果地址下载不了，那是因为你需要开 VPN，你也可以选择使用网盘下载 nexus-2.12.0-01-bundle.tar.gz 版本：链接：<a href="http://pan.baidu.com/s/1hrKNaz6" target="_blank" rel="noopener">http://pan.baidu.com/s/1hrKNaz6</a> 密码：nerc</p><ul><li>解压压缩包：<code>tar zxvf nexus-2.12.0-01-bundle.tar.gz</code><ul><li>解压出来有两个文件夹：</li><li>这是程序目录：<code>nexus-2.12.0-01</code></li><li>这是仓库目录：<code>sonatype-work</code></li></ul></li><li>移到目录到我的安装目录下：<code>mv nexus-2.12.0-01/ /usr/program/</code></li><li>进入安装目录：<code>cd /usr/program/</code></li><li>把目录名字改为更好看点：<code>mv nexus-2.12.0-01/ nexus2.12.0/</code></li><li>编辑系统配置文件：<code>vim /etc/profile</code></li><li><p>在文件的尾巴增加下面内容：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nexus</span></span><br><span class="line"><span class="attr">NEXUS_HOME</span>=/usr/program/nexus2.<span class="number">12.0</span></span><br><span class="line">export NEXUS_HOME</span><br><span class="line"><span class="attr">RUN_AS_USER</span>=root</span><br><span class="line">export RUN_AS_USER</span><br></pre></td></tr></table></figure></li><li><p>刷新配置：<code>source /etc/profile</code></p></li><li>由于目录 <code>sonatype-work</code> 以后是做仓库用的，会存储很多 jar，所以这个目录一定要放在磁盘空间大的区内，目前我们还没第一次启动 Nexus，所以这里还是空文件<ul><li>我个人习惯把这类目录放在 <code>/opt</code> 下，所以你要特别注意，下面有内容对这个文件夹进行操作的都是基于 opt 目录的：<code>mv /opt/setup/sonatype-work/ /opt/</code></li><li>设置配置文件：<code>vim /usr/program/nexus2.12.0/conf/nexus.properties</code><ul><li>把文件中该值：<code>nexus-work=${bundleBasedir}/../sonatype-work/nexus</code></li><li>改为：<code>nexus-work=/opt/sonatype-work/nexus</code></li></ul></li></ul></li><li>默认情况下如果你的 JDK 等系统变量设置好的是无需编辑 Nexus 的配置文件，但是这里还是给大家一下配置文件路径：<code>vim /usr/program/nexus2.12.0/bin/jsw/conf/wrapper.conf</code></li><li>开放防火墙端口：<ul><li>添加规则：<code>sudo iptables -I INPUT -p tcp -m tcp --dport 8081 -j ACCEPT</code></li><li>保存规则：<code>sudo /etc/rc.d/init.d/iptables save</code></li><li>重启 iptables：<code>sudo service iptables restart</code></li></ul></li></ul></li><li>测试安装结果：<ul><li>启动 Nexus：<code>/usr/program/nexus2.12.0/bin/nexus start</code></li><li>查看启动日志：<code>tail -200f /usr/program/nexus2.12.0/logs/wrapper.log</code></li><li>关闭 Nexus：<code>/usr/program/nexus2.12.0/bin/nexus stop</code></li><li>访问：<a href="http://你的主机IP:8081/nexus" target="_blank" rel="noopener">http://你的主机IP:8081/nexus</a></li><li>登录账号密码：<ul><li>账号密码：<strong>admin</strong></li><li>密码：<strong>admin123</strong></li></ul></li></ul></li></ul><h2 id="Nexus-配置"><a href="#Nexus-配置" class="headerlink" title="Nexus 配置"></a>Nexus 配置</h2><ul><li>修改默认端口：<code>vim /usr/program/nexus2.12.0/conf/nexus.properties</code>，修改该值：application-port=8081</li><li>下载远程中央库的索引到服务器<ul><li><img src="http://img.skyheng.com/picture/2016/nexus/nexus-install-1.jpg" alt="Nexus 配置"></li><li>如上图标注 4 所示，把默认是 <code>False</code> 改为 <code>True</code></li><li><img src="http://img.skyheng.com/picture/2016/nexus/nexus-install-2.jpg" alt="Nexus 配置"></li><li>如上图 jpg 所示，创建任务开始进行索引下载。需要特别提醒的是，如果你的私服是虚拟机，那得保证你分配的硬盘足够大，别像我一样吝啬只给 10 G（现在还剩下 1.9 G），结果报：<strong>设备上没有空间</strong></li></ul></li><li><p>项目上配置链接连接私服（下面内容涉及到 maven 的基础知识，请自行私下学习）：</p><ul><li><p>对项目独立设置：</p><ul><li>打开项目的 pom.xml 文件：</li><li>添加下面内容：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>Nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>虚拟机-192.168.0.110-Nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.0.110:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>对全局配置进行设置：</p><ul><li>打开 maven 的 settings.xml 文件：</li><li>添加下面内容：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>YouMeekNexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>YouMeek Nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.0.110:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="持续集成自动构建后发布到-Nexus-上"><a href="#持续集成自动构建后发布到-Nexus-上" class="headerlink" title="持续集成自动构建后发布到 Nexus 上"></a>持续集成自动构建后发布到 Nexus 上</h2><ul><li>在 Maven 的 settings.xml 加上连接服务器信息：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置私库认证信息，用户名和密码我就用默认的，如果你们有权限控制的需求可以创建对应的一些账号--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">servers</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在项目的 pom.xml 文件加上：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- nexus-releases nexus-snapshots 与 Maven 的配置文件 settings.xml 中 server 下的 id 对应 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Releases Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.0.110:8081/nexus/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Snapshots Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.0.110:8081/nexus/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Nexus-手动更新索引文件"><a href="#Nexus-手动更新索引文件" class="headerlink" title="Nexus 手动更新索引文件"></a>Nexus 手动更新索引文件</h2><ul><li>手动更新索引<ul><li>关闭 Nexus：<code>/usr/program/nexus2.12.0/bin/nexus stop</code></li><li>命令：<code>cd  /opt/sonatype-work/nexus/indexer/central-ctx</code><ul><li>删除里面默认的文件：<code>rm -rf *</code></li></ul></li><li>访问官网索引：<a href="http://repo.maven.apache.org/maven2/.index/" target="_blank" rel="noopener">http://repo.maven.apache.org/maven2/.index/</a><ul><li>下载文件：<strong>nexus-maven-repository-index.gz</strong>：<code>wget http://repo.maven.apache.org/maven2/.index/nexus-maven-repository-index.gz</code></li><li>下载文件：<strong>nexus-maven-repository-index.properties</strong>：<code>wget http://repo.maven.apache.org/maven2/.index/nexus-maven-repository-index.properties</code></li><li>下载索引解压工具：<code>wget https://repo1.maven.org/maven2/org/apache/maven/indexer/indexer-cli/5.1.1/indexer-cli-5.1.1.jar</code></li><li>执行解压命令（该命令执行需要4分钟左右）：<code>java -jar indexer-cli-5.1.0.jar -u nexus-maven-repository-index.gz -d ./</code></li><li>删除解压前文件：<code>rm -rf indexer-cli-5.1.0.jar nexus-maven-repository-index.gz nexus-maven-repository-index.properties</code></li><li>重启服务：<code>/usr/program/nexus2.11.4/bin/nexus start</code></li></ul></li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://www.cnblogs.com/leefreeman/p/4211530.html" target="_blank" rel="noopener">http://www.cnblogs.com/leefreeman/p/4211530.html</a></li><li><a href="http://www.itdadao.com/article/89071/" target="_blank" rel="noopener">http://www.itdadao.com/article/89071/</a></li><li><a href="http://blog.zhaojunling.me/p/17" target="_blank" rel="noopener">http://blog.zhaojunling.me/p/17</a></li><li><a href="http://m.blog.csdn.net/article/details?id=49228873" target="_blank" rel="noopener">http://m.blog.csdn.net/article/details?id=49228873</a></li><li><a href="http://mritd.me/2015/12/29/Nexus-2-11-CentOS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">http://mritd.me/2015/12/29/Nexus-2-11-CentOS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</a></li><li><a href="http://mritd.me/2015/12/28/Nexus-%E7%A7%81%E6%9C%8D%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">http://mritd.me/2015/12/28/Nexus-%E7%A7%81%E6%9C%8D%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</a></li><li><a href="http://my.oschina.net/liangbo/blog/195739" target="_blank" rel="noopener">http://my.oschina.net/liangbo/blog/195739</a></li><li><a href="http://www.mamicode.com/info-detail-1016489.html" target="_blank" rel="noopener">http://www.mamicode.com/info-detail-1016489.html</a></li><li><a href="http://blog.csdn.net/shawyeok/article/details/23564681" target="_blank" rel="noopener">http://blog.csdn.net/shawyeok/article/details/23564681</a></li><li><a href="http://zyjustin9.iteye.com/blog/2017321" target="_blank" rel="noopener">http://zyjustin9.iteye.com/blog/2017321</a></li><li>Linux 使用nexus搭建maven私服 :<a href="http://blog.csdn.net/top_code/article/details/50818352" target="_blank" rel="noopener">http://blog.csdn.net/top_code/article/details/50818352</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解Nexus安装基于CentOS 6.5下的安装和配置&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://code.skyheng.com/categories/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/categories/linux/centOS/"/>
    
      <category term="nexus" scheme="http://code.skyheng.com/categories/linux/centOS/nexus/"/>
    
    
      <category term="linux" scheme="http://code.skyheng.com/tags/linux/"/>
    
      <category term="centOS" scheme="http://code.skyheng.com/tags/centOS/"/>
    
      <category term="nexus" scheme="http://code.skyheng.com/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title>我的学习归纳方法（以学习Maven为例）</title>
    <link href="http://code.skyheng.com/post/4365.html"/>
    <id>http://code.skyheng.com/post/4365.html</id>
    <published>2016-03-07T12:50:25.000Z</published>
    <updated>2018-03-20T14:50:32.487Z</updated>
    
    <content type="html"><![CDATA[<p>以我的个人角度来看待学习这件长久的事，希望对你有帮助，也希望你能提一下你的意见<br><a id="more"></a></p><h2 id="本文初衷"><a href="#本文初衷" class="headerlink" title="本文初衷"></a>本文初衷</h2><ul><li>把自己模板化</li><li>以此篇为引，与同行沟通心得，所以在此严重要求如果你有对应的心得还请能回复下，真心感谢!（鞠躬）</li></ul><h2 id="当我们要学习新技术-东西"><a href="#当我们要学习新技术-东西" class="headerlink" title="当我们要学习新技术/东西"></a>当我们要学习新技术/东西</h2><ul><li><img src="http://img.skyheng.com/picture/2016/my-learning-way1.jpg" alt="学习思路"></li><li>上图来源：<a href="https://codingstyle.cn/topics/3" target="_blank" rel="noopener">https://codingstyle.cn/topics/3</a></li><li>在过去未被自己流程化的情况下，自己学习新的东西的时候一直是处理迷迷糊糊的状态，直到我看到这张思维导图，我瞬间就理清自己平时在学习东西时候那混乱的思维了。</li><li>可能平时我们也是这样做的，可是我们从来没有认真思考过或是整理过这样的思绪。也许你认为这样不重要，但是对我而言，有记录的东西，代表可以被流程化，这可以帮助特定情况下的我。</li><li>下面跟着这张思维导图，我们一起来整理 Maven 的材料。</li></ul><h3 id="它是什么"><a href="#它是什么" class="headerlink" title="它是什么"></a>它是什么</h3><ul><li>术语定义<ul><li>Maven 官网定义：<a href="http://maven.apache.org/" target="_blank" rel="noopener">http://maven.apache.org/</a></li><li>百度百科定义：<a href="http://baike.baidu.com/view/336103.htm" target="_blank" rel="noopener">http://baike.baidu.com/view/336103.htm</a></li><li>维基百科定义：<a href="https://zh.wikipedia.org/wiki/Apache_Maven" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Apache_Maven</a></li><li>在 Wiki 上还需要注意如下，这些有助于你站在更加宏观的角度看待它，但是可能需要积累：<ul><li><code>参见</code></li><li><code>补充阅读</code></li><li><code>参考资料</code></li><li><code>外部链接</code></li></ul></li></ul></li><li>它的历史<ul><li>Google 搜索：<code>Maven History</code></li><li>Google 搜索：<code>Maven 区别</code>、<code>Maven difference</code></li><li>Google 搜索：<code>Maven 使用场景</code></li><li>Google 搜索：<code>What is Maven</code></li><li>Google 搜索：<code>To use or not to use Maven</code></li><li>Google 搜索：<code>Maven use case</code><ul><li>在 Google 搜索结果页最下面，看它提示的搜索关键字内容，看是否有版本上的区别。</li></ul></li></ul></li><li>同类常见技术（按技术出现时间正序）<ul><li><code>Ant</code></li><li><code>Gradle</code></li></ul></li><li>同类技术比较：<ul><li>Google 搜索：<code>Ant Maven Gradle</code></li><li>比如文章：<a href="http://blog.csdn.net/napolunyishi/article/details/39345995" target="_blank" rel="noopener">http://blog.csdn.net/napolunyishi/article/details/39345995</a></li></ul></li><li>学习前提/依赖<ul><li>要有 Java 基础相关</li></ul></li></ul><h3 id="为什么会出现"><a href="#为什么会出现" class="headerlink" title="为什么会出现"></a>为什么会出现</h3><ul><li>Google 搜索：<ul><li>关键字：<code>为什么用 maven</code></li><li>关键字：<code>why use maven</code></li><li>关键字：<code>What does Maven do</code></li><li>关键字：<code>Why do we need Maven</code></li><li>关键字：<code>Why should we use Maven</code></li></ul></li></ul><h3 id="哪些人不喜欢它"><a href="#哪些人不喜欢它" class="headerlink" title="哪些人不喜欢它"></a>哪些人不喜欢它</h3><ul><li>Google 搜索：<ul><li>关键字：<code>不用 maven</code></li><li>关键字：<code>Why I Don&#39;t Use Maven</code></li></ul></li></ul><h3 id="为什么学习它"><a href="#为什么学习它" class="headerlink" title="为什么学习它"></a>为什么学习它</h3><ul><li>老师让学的？</li><li>解决工作问题？</li><li>提高效率？</li><li>知识储备？</li><li>灵机一动？</li></ul><h3 id="我要怎么做（按优先级从高到低排序）"><a href="#我要怎么做（按优先级从高到低排序）" class="headerlink" title="我要怎么做（按优先级从高到低排序）"></a>我要怎么做（按优先级从高到低排序）</h3><ul><li>看教程<ul><li>官网快速入门文档<ul><li>在官网中查看带有下面几个关键字的链接：<ul><li><code>Getting Started</code></li><li><code>Quick Start</code></li><li><code>Getting Started Guides</code></li><li><code>usage page</code></li><li><code>Tutorials</code></li><li><code>Guides</code></li><li><code>Development Guides</code></li><li><code>Documentation</code></li><li><code>Docs</code></li><li><code>Screencasts</code></li><li><code>best practices</code></li></ul></li></ul></li><li>在极客学院搜索对应的教学视频（我是年 VIP）</li><li>Google 搜索：<code>Maven 视频 教程 百度云网盘</code>    </li><li>Google 搜索：<code>Maven 视频 教程</code></li><li>微博-搜索相关内容：<a href="http://weibo.com" target="_blank" rel="noopener">http://weibo.com</a></li><li>公众号-搜索相关内容：<a href="http://weixin.sogou.com/" target="_blank" rel="noopener">http://weixin.sogou.com/</a></li><li>京东-图书：<a href="http://book.jd.com/" target="_blank" rel="noopener">http://book.jd.com/</a></li><li>YouTube-搜索相关内容：<a href="http://youtube.com/" target="_blank" rel="noopener">http://youtube.com/</a></li></ul></li><li>自己写 Demo</li><li>参考别人 Demo<ul><li>Gtihub 搜索 Demo：<a href="https://github.com/search/advanced" target="_blank" rel="noopener">https://github.com/search/advanced</a></li><li>Git@OSC 搜索 Demo：<a href="http://git.oschina.net/" target="_blank" rel="noopener">http://git.oschina.net/</a></li></ul></li><li>项目场景模拟、提高</li><li>遇到问题<ul><li>找官网 FAQ：<a href="https://maven.apache.org/general.html" target="_blank" rel="noopener">https://maven.apache.org/general.html</a></li><li>QQ 群组讨论</li><li>Google 搜索下面关键字方法：<ul><li><code>Maven site:stackoverflow.com</code></li><li><code>Maven site:quora.com</code></li><li><code>Maven site:xitu.io</code></li><li><code>Maven site:toutiao.io</code></li><li><code>Maven site:segmentfault.com</code></li><li><code>Maven site:jianshu.com</code></li><li><code>Maven site:zhihu.com</code></li><li><code>Maven site:blog.csdn.net</code></li><li><code>Maven site:cnblogs.com</code></li><li><code>Maven site:blog.51cto.com</code></li><li><code>Maven site:oschina.net</code></li><li><code>Maven site:iteye.com</code></li><li><code>Maven site:importnew.com</code></li></ul></li></ul></li></ul><h3 id="归纳整理并分享"><a href="#归纳整理并分享" class="headerlink" title="归纳整理并分享"></a>归纳整理并分享</h3><ul><li>整理<ul><li>为知笔记里面内容</li><li>浏览器书签</li><li>简书中收藏：<a href="http://www.jianshu.com/bookmarks" target="_blank" rel="noopener">http://www.jianshu.com/bookmarks</a></li><li>简书中喜欢：<a href="http://www.jianshu.com/favourites" target="_blank" rel="noopener">http://www.jianshu.com/favourites</a></li><li>开发者头条中收藏：<a href="http://toutiao.io/favorites" target="_blank" rel="noopener">http://toutiao.io/favorites</a></li><li>微博中收藏：<a href="http://weibo.com/fav" target="_blank" rel="noopener">http://weibo.com/fav</a></li><li>RSS 订阅：<a href="http://www.inoreader.com/" target="_blank" rel="noopener">http://www.inoreader.com/</a><ul><li>无法订阅的博客使用 Feed43 生成 RSS：<a href="http://feed43.com/" target="_blank" rel="noopener">http://feed43.com/</a></li></ul></li></ul></li><li>分享<ul><li>写博客</li><li>分享到开发者头条</li><li>分享到简书</li><li>分享到微信公众号</li><li>系统整理 Demo 在 Github 上</li></ul></li></ul><h2 id="过程细节"><a href="#过程细节" class="headerlink" title="过程细节"></a>过程细节</h2><ul><li>Google 搜索必备：<ul><li><code>Maven site:code.skyheng.com</code>，表示搜索结果局限于在：code.skyheng.com 这个站点</li><li><code>Maven link:code.skyheng.com</code>，返回所有链接到 code.skyheng.com 的网页</li><li><code>related:code.skyheng.com</code>，查找类似 code.skyheng.com 的网站</li><li><code>cache:code.skyheng.com</code>，查找 code.skyheng.com 的历史快照</li></ul></li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul><li>我猜测你可能需要 VPN 或是 Shadowsocks</li></ul><h2 id="感谢他们的建议"><a href="#感谢他们的建议" class="headerlink" title="感谢他们的建议"></a>感谢他们的建议</h2><ul><li><a href="http://www.jianshu.com/users/3ed6914f14af" target="_blank" rel="noopener">牛背上的侯爷</a></li><li><a href="https://codingstyle.cn/topics/3" target="_blank" rel="noopener">如何快速学习一门新技术</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以我的个人角度来看待学习这件长久的事，希望对你有帮助，也希望你能提一下你的意见&lt;br&gt;
    
    </summary>
    
      <category term="学习方法" scheme="http://code.skyheng.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
      <category term="java" scheme="http://code.skyheng.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
      <category term="maven" scheme="http://code.skyheng.com/tags/maven/"/>
    
      <category term="学习方法" scheme="http://code.skyheng.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>使用Github搭建Hexo技术博客--增强教程</title>
    <link href="http://code.skyheng.com/post/53342.html"/>
    <id>http://code.skyheng.com/post/53342.html</id>
    <published>2015-05-01T03:46:18.000Z</published>
    <updated>2018-03-18T15:10:12.654Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解 Hexo博客的常用插件、站点 SEO 等内容！<br><a id="more"></a><br><img src="http://img.skyheng.com/picture/hexo/hexo_pages.png" alt="使用Github搭建Hexo技术博客"></p><h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><h3 id="主题配置介绍"><a href="#主题配置介绍" class="headerlink" title="主题配置介绍"></a>主题配置介绍</h3><p>我这里只讲自己在使用的 yelle 主题，你可以参考下，可能还有一些改动我后续会自己在慢慢改，但是大体基本也就这样了。</p><p>从中我们也可以看出，对于主题来讲，大部分可以配置的地方其实都是在这里的，所以对于主题的使用者来讲，懂这里很重要。</p><ul><li>基本上主题的配置文件都是有内容改，但是下面这几点我觉得特别重要：</li><li><code>duoshuo</code>，如果你是打算采用多说评论系统的话，你需要设置这里，但是我个人对多说没好印象</li><li><code>youyan</code>，有言也是国内实用比较多的评论系统之一，个人感觉相对比较稳定</li><li><code>open_in_new</code>，我个人觉得这个东西就应该是 true，不是用新标签的都是坏人</li><li><code>baidu_tongji</code>，我个人使用的是百度统计，具体百度统计的使用可以查看百度统计官网：<a href="http://tongji.baidu.com" target="_blank" rel="noopener">http://tongji.baidu.com</a><h3 id="我的-yelle-主题配置"><a href="#我的-yelle-主题配置" class="headerlink" title="我的 yelle 主题配置"></a>我的 yelle 主题配置</h3></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Theme Version | 当前版本</span></span><br><span class="line">Yelee: <span class="string">"3.5"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;&gt; Basic Setup | 基础设置 &lt;&lt;&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Header | 主菜单</span></span><br><span class="line"><span class="comment">## About Page: `hexo new page about`</span></span><br><span class="line"><span class="comment">## Tags Cloud Page: `hexo new page tags`</span></span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  所有文章: /archives/</span><br><span class="line">  <span class="comment">#随笔: /tags/随笔</span></span><br><span class="line">  标签云: /tags/</span><br><span class="line">  关于我: /about/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Link to your avatar | 填写头像地址</span></span><br><span class="line">avatar: /img/avatar.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># Small icon of Your site | 站点小图标地址</span></span><br><span class="line">favicon: /favicon.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization | 主题语言</span></span><br><span class="line"><span class="comment">## Change Language in SITE's _config.yml | 在站点配置中切换语言</span></span><br><span class="line"><span class="comment">## https://hexo.io/docs/internationalization.html</span></span><br><span class="line"><span class="comment">## Available Languages: en, zh-Hans, zh-Hant-TW, zh-Hant-HK</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Subdirectory | 子目录</span></span><br><span class="line"><span class="comment">## If your site' url is 'http://yoursite.com/blog', set root_url as '/blog/'</span></span><br><span class="line"><span class="comment">## 网站若存放在子目录，请按上面格式填写</span></span><br><span class="line"><span class="comment">## https://hexo.io/docs/configuration.html#URL</span></span><br><span class="line">root_url: </span><br><span class="line"></span><br><span class="line"><span class="comment"># Year of Site Creation | 网站成立年份</span></span><br><span class="line">since: 2015</span><br><span class="line"></span><br><span class="line"><span class="comment"># Social info. Bar | 社交信息展示</span></span><br><span class="line"><span class="comment">## Keep "mailto:" in Email | 设置 Email 时保留 "mailto:"</span></span><br><span class="line"><span class="comment">## Encrypt email 加密邮件地址 http://ctrlq.org/encode/</span></span><br><span class="line"><span class="comment">## RSS requires a plugin to take effect | 使用 RSS 需先安装对应插件</span></span><br><span class="line"><span class="comment">## https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line"></span><br><span class="line">subnav:</span><br><span class="line">  Email: <span class="string">"chenjh0611@163.com"</span></span><br><span class="line">  <span class="comment">#新浪微博: "sina weibo"</span></span><br><span class="line">  GitHub: <span class="string">"https://github.com/chenjh0611"</span></span><br><span class="line">  <span class="comment">#V2EX: "#"</span></span><br><span class="line">  RSS: <span class="string">"/atom.xml"</span></span><br><span class="line">  <span class="comment">#知乎: "zhihu"</span></span><br><span class="line">  <span class="comment">#豆瓣: "douban"</span></span><br><span class="line">  <span class="comment">#简书: "jianshu"</span></span><br><span class="line">  <span class="comment">#SegmentFault: ""</span></span><br><span class="line">  <span class="comment">#博客园: "cnblogs"</span></span><br><span class="line">  CSDN: <span class="string">"http://blog.csdn.net/skychenjh"</span></span><br><span class="line">  <span class="comment">#Coding: "https://coding.net/u/chenjh0719"</span></span><br><span class="line">  <span class="comment">#网易云音乐: "http://music.163.com/#/user/home?id=83179914"</span></span><br><span class="line">  <span class="comment">#虾米音乐: "xiami"</span></span><br><span class="line">  <span class="comment">#bilibili: ""</span></span><br><span class="line">  <span class="comment">#AcFun: ""</span></span><br><span class="line">  <span class="comment">#niconico: ""</span></span><br><span class="line">  <span class="comment">#Quora: ""</span></span><br><span class="line">  <span class="comment">#Facebook: "#"</span></span><br><span class="line">  <span class="comment">#Google: "#"</span></span><br><span class="line">  <span class="comment">#Twitter: "#"</span></span><br><span class="line">  <span class="comment">#LinkedIn: "#"</span></span><br><span class="line">  <span class="comment">#QQ: "#"</span></span><br><span class="line">  微信: <span class="string">"weixin"</span></span><br><span class="line">  <span class="comment">#PayPal: "#"</span></span><br><span class="line">  <span class="comment">#StackOverflow: "#"</span></span><br><span class="line">  <span class="comment">#CodePen: ""</span></span><br><span class="line">  <span class="comment">#Plunker: ""</span></span><br><span class="line">  <span class="comment">#Instagram: "#"</span></span><br><span class="line">  <span class="comment">#LOFTER: ""</span></span><br><span class="line">  <span class="comment">#Flickr: "#"</span></span><br><span class="line">  <span class="comment">#reddit: ""</span></span><br><span class="line">  <span class="comment">#Medium: ""</span></span><br><span class="line">  <span class="comment">#TiddlyWiki: ""</span></span><br><span class="line">  <span class="comment">#Tumblr: ""</span></span><br><span class="line">  <span class="comment">#_500px: ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;&gt; Conments 评论系统 &lt;&lt;&lt;</span></span><br><span class="line"><span class="comment"># Chose ONE as your comment system and keep others disable.</span></span><br><span class="line"><span class="comment"># 选一个作为网站评论系统，其他保持禁用。</span></span><br><span class="line"></span><br><span class="line">preload_comment: <span class="literal">true</span></span><br><span class="line"><span class="comment">## false: 当点击评论条等区域时再加载评论模块</span></span><br><span class="line"><span class="comment">## false: load comment's section until u click/hover on the bar/icon</span></span><br><span class="line"></span><br><span class="line">show_count: <span class="literal">false</span></span><br><span class="line"><span class="comment">## 是否在主页文章标题旁显示评论数（多说、Disqus）</span></span><br><span class="line"><span class="comment">## Add comment count after article title</span></span><br><span class="line"></span><br><span class="line">disqus: </span><br><span class="line">  <span class="comment">#on: true</span></span><br><span class="line">  shortname: </span><br><span class="line">  <span class="comment"># https://help.disqus.com/customer/en/portal/articles/466208-what-s-a-shortname-</span></span><br><span class="line">  <span class="comment"># It is unnecessary to enable disqus here if </span></span><br><span class="line">  <span class="comment"># you have set "disqus_shortname" in your site's "_config.yml" </span></span><br><span class="line"></span><br><span class="line">duoshuo: </span><br><span class="line">  <span class="comment">#on: true</span></span><br><span class="line">  domain: </span><br><span class="line">  <span class="comment"># 是否开启多说评论，http://duoshuo.com/create-site/</span></span><br><span class="line">  <span class="comment"># 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分</span></span><br><span class="line">  <span class="comment"># http://&lt;要填的部分&gt;.duoshuo.com (domain只填上&lt;&gt;里的内容，不要填整个网址)</span></span><br><span class="line"></span><br><span class="line">youyan:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  id: 2095968</span><br><span class="line">  <span class="comment"># 是否开启友言评论，http://www.uyan.cc/index.php</span></span><br><span class="line">  <span class="comment"># id 中填写你的友言用户数字ID，注册后进入后台管理即可查看</span></span><br><span class="line">  <span class="comment"># 友言服务在 Web 环境下运行，普通本地环境无法查看，请部署后在线上测试。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;&gt; Style Customisation 样式自定义 &lt;&lt;&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Background | 背景</span></span><br><span class="line"><span class="comment">## "5": show images form bg-1.jpg to bg-5.jpg in `/yelee/source/background/`</span></span><br><span class="line"><span class="comment">## "5": 显示`/yelee/source/background/`文件夹中 bg-1.jpg 到 bg-5.jpg 这5张图片</span></span><br><span class="line"><span class="comment">## "0": white-gray background | 淳朴灰白背景</span></span><br><span class="line">background_image: 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># Base Font Size | 字号调节</span></span><br><span class="line">base_font_size: 16  <span class="comment">#px, 16 - 24</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## General Color Scheme | 主题配色方案 </span></span><br><span class="line"><span class="comment">## 可用值 Value: yilia</span></span><br><span class="line">color_scheme: </span><br><span class="line"></span><br><span class="line">highlight_style:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  inline_code: 3  <span class="comment"># Value: 0 - 9 可选</span></span><br><span class="line">  code_block: 2  <span class="comment"># Value: 0 - 4 </span></span><br><span class="line">  <span class="comment"># Set inline_code to style highlight text</span></span><br><span class="line">  <span class="comment"># Chose a highlight theme for code block</span></span><br><span class="line">  <span class="comment"># 通过 inline_code 切换内置文本高亮样式</span></span><br><span class="line">  <span class="comment"># 通过 code_block 切换内置代码高亮配色主题</span></span><br><span class="line"></span><br><span class="line">blockquote_style:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  blockquote: 1  <span class="comment"># Value: 0 - 7 可选</span></span><br><span class="line">  <span class="comment"># 自定义文章「引用部分」的样式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Headings Style | 标题风格</span></span><br><span class="line"><span class="comment">## 0-Yelee, 1-Yilia, 2-GitHub</span></span><br><span class="line">heading_style: 0 <span class="comment"># Value: 0 - 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## List style type (ul) | 无序列表项标记样式</span></span><br><span class="line">list_style: 0  <span class="comment"># value: 0 - 12 可选</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左边栏宽度 px</span></span><br><span class="line">left_col_width: 300</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright info. of post | 文末版权信息</span></span><br><span class="line">copyright: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Table of contents | 文章目录</span></span><br><span class="line">toc:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  list_number: <span class="literal">true</span> <span class="comment"># 目录序号</span></span><br><span class="line">  max_depth: 3  <span class="comment"># 1 - 6 (h1-h6) 目录最大级数</span></span><br><span class="line">  nowrap: <span class="literal">false</span> <span class="comment"># Keep title on same line | 目录标题不换行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启主页及加载头像时的动画效果</span></span><br><span class="line"><span class="comment"># Animation in Homepage and Loading avatar</span></span><br><span class="line">animate: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load jQuery UI to style tooltips</span></span><br><span class="line"><span class="comment"># 工具提示框样式美化</span></span><br><span class="line">jquery_ui: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Max width of right cloumn | 限制右侧内容的宽带 </span></span><br><span class="line">limit_article_width: </span><br><span class="line">  on: <span class="literal">false</span></span><br><span class="line">  max_width: 60 <span class="comment"># em</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;&gt; Small features | 小功能设置 &lt;&lt;&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启边栏多标签切换</span></span><br><span class="line"><span class="comment"># Birdhouse button in left column</span></span><br><span class="line">tagcloud: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blogroll, Link exchange | 友情链接</span></span><br><span class="line">friends:</span><br><span class="line">  MyBlog: http://www.skyheng.com/</span><br><span class="line">  GitHub: https://pages.github.com/</span><br><span class="line">  <span class="comment">#MOxFIVE: http://moxfive.xyz/</span></span><br><span class="line"><span class="comment">#friends: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启“关于我”。</span></span><br><span class="line">aboutme: 专注于技术,专注于开发</span><br><span class="line"><span class="comment">#aboutme: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open link in a new tab | 是否在新窗口打开链接</span></span><br><span class="line"><span class="comment">## `global` 0: Set separately, 1: Open all in new 2: Open all in current</span></span><br><span class="line"><span class="comment">## `global` 0: 分开设置, 1: 全部在新标签打开, 2: 全部在"当前"标签打开</span></span><br><span class="line">open_in_new:</span><br><span class="line">  global: 0 <span class="comment"># 0-2</span></span><br><span class="line">  title: <span class="literal">false</span> <span class="comment"># article title in homepage 主页文章标题</span></span><br><span class="line">  post: <span class="literal">false</span> <span class="comment"># link within post/page 正文中的链接</span></span><br><span class="line">  tags: <span class="literal">false</span> <span class="comment"># 标签</span></span><br><span class="line">  categories: <span class="literal">false</span> <span class="comment"># 分类</span></span><br><span class="line">  article_nav: <span class="literal">false</span> <span class="comment"># 导航</span></span><br><span class="line">  archives: <span class="literal">true</span> <span class="comment"># 归档</span></span><br><span class="line">  mini_archives: <span class="literal">true</span> <span class="comment"># 迷你归档</span></span><br><span class="line">  menu: <span class="literal">false</span> <span class="comment"># 边栏菜单</span></span><br><span class="line">  friends: <span class="literal">true</span>  <span class="comment"># 友情链接</span></span><br><span class="line">  socail: <span class="literal">true</span> <span class="comment"># 社交图标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Customize feed link 自定义订阅地址</span></span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update Reminder for IE6/7/8</span></span><br><span class="line"><span class="comment"># 针对 IE6/7/8 的升级浏览器提示</span></span><br><span class="line">ie_updater:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  link: //outdatedbrowser.com/</span><br><span class="line">  <span class="comment">## http://browsehappy.com/</span></span><br><span class="line">  <span class="comment">## http://outdatedbrowser.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tab Title Change | 标签页标题切换</span></span><br><span class="line">tab_title_change: </span><br><span class="line">  <span class="comment">#on: false</span></span><br><span class="line">  left_tab_title: <span class="string">'(つェ⊂) 我藏好了哦~ '</span></span><br><span class="line">  return_tab_title: <span class="string">'(*´∇｀*) 被你发现啦~ '</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;&gt; Vendors | 第三方工具 &amp; 服务 &lt;&lt;&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Site Search | 本地站内搜索</span></span><br><span class="line"><span class="comment">## Insatall below plugin to take effect | 使用搜索需先安装对应插件</span></span><br><span class="line"><span class="comment">## https://github.com/PaicHyperionDev/hexo-generator-search</span></span><br><span class="line">search: </span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  onload: <span class="literal">false</span></span><br><span class="line">  <span class="comment">## true: get search.xml file when the page has loaded</span></span><br><span class="line">  <span class="comment">## false: get the file when search box gets focus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># images viewer | 图片浏览器</span></span><br><span class="line"><span class="comment">## http://www.fancyapps.com/fancybox/</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Display Math(LaTeX, MathML...) | 数学公式支持</span></span><br><span class="line"><span class="comment">## https://www.mathjax.org/</span></span><br><span class="line">mathjax: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Socail Share | 是否开启分享</span></span><br><span class="line">share: </span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  baidu: <span class="literal">true</span></span><br><span class="line">  addthis: <span class="literal">false</span></span><br><span class="line">  addthis_pubid: <span class="string">"ra-56ff76c972fc0cf9"</span></span><br><span class="line">  <span class="comment">## Go to www.addthis.com/dashboard to get your pubid (in src of Code)</span></span><br><span class="line">  <span class="comment">## and customize AddThis share buttons</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度、谷歌站长验证。填写 HTML 标签 content</span></span><br><span class="line"><span class="comment"># Site Verification for Google and Baidu. HTML label content.</span></span><br><span class="line">baidu_site: </span><br><span class="line">google_site: </span><br><span class="line"></span><br><span class="line"><span class="comment"># Fill in Google Analytics tracking ID, #e.g. UA-XXXXX-X</span></span><br><span class="line">google_analytics: </span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度统计 http://sitecenter.baidu.com/sc-web/</span></span><br><span class="line"><span class="comment"># 查看代码，填入 //hm.baidu.com/hm.js? 之后的内容</span></span><br><span class="line">baidu_tongji: </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不蒜子网站计数设置</span></span><br><span class="line"><span class="comment"># http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">visit_counter:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  site_visit: 本站到访数</span><br><span class="line">  page_visit: 本页阅读量</span><br><span class="line"></span><br><span class="line"><span class="comment"># GitHub Repo Widget</span></span><br><span class="line"><span class="comment"># https://github.com/hustcc/GitHub-Repo-Widget.js</span></span><br><span class="line">github_widget: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Progress Bar | 页面加载进度条</span></span><br><span class="line"><span class="comment"># Demo: http://github.hubspot.com/pace/docs/welcome/</span></span><br><span class="line"><span class="comment"># type: barber-shop|big-counter|bounce|center-atom|center-circle|</span></span><br><span class="line"><span class="comment">#       center-radar|center-simple|corner-indicator|flash|flat-top|</span></span><br><span class="line"><span class="comment">#       loading-bar|mac-osx|minimal</span></span><br><span class="line"><span class="comment"># color: black|blue|green|orange|pink|purple|red|silver|white|yellow|</span></span><br><span class="line">progressBar:</span><br><span class="line">  on: <span class="literal">true</span></span><br><span class="line">  <span class="built_in">type</span>: <span class="string">"minimal"</span>  <span class="comment"># Keep Quotes | 保留引号避免出错</span></span><br><span class="line">  color: blue</span><br><span class="line"></span><br><span class="line">CDN:</span><br><span class="line">  jquery: //cdn.bootcss.com/jquery/2.2.4/jquery.min.js</span><br><span class="line">  require: //cdn.bootcss.com/require.js/2.2.0/require.min.js</span><br><span class="line">  fontawesome: //cdn.bootcss.com/font-awesome/4.6.3/css/font-awesome.min.css</span><br><span class="line">  fancybox_js: //cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.js</span><br><span class="line">  fancybox_css: //cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.css</span><br><span class="line">  animate_css: //cdn.bootcss.com/animate.css/3.5.1/animate.min.css</span><br><span class="line">  jquery_ui_js: //cdn.bootcss.com/jqueryui/1.10.4/jquery-ui.min.js</span><br><span class="line">  jquery_ui_css: //cdn.bootcss.com/jqueryui/1.10.4/css/jquery-ui.min.css</span><br><span class="line">  pace_js: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  clipboard: //cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js</span><br><span class="line">  mathjax: //cdn.bootcss.com/mathjax/2.6.1/MathJax.js</span><br><span class="line">  scrollreveal: //cdn.bootcss.com/scrollReveal.js/3.1.4/scrollreveal.min.js</span><br></pre></td></tr></table></figure><h2 id="常用页面添加"><a href="#常用页面添加" class="headerlink" title="常用页面添加"></a>常用页面添加</h2><h3 id="404、关于我、标签页"><a href="#404、关于我、标签页" class="headerlink" title="404、关于我、标签页"></a>404、关于我、标签页</h3><ul><li>还是以上一篇文章我们讲解的项目根目录上：E:\blog_space\hexo，在该目录启动 Git Bash：</li><li>新增一个 404 页面：<code>hexo new page 404</code></li><li>新增一个 about 页面：<code>hexo new page about</code></li><li>新增一个 tag 标签云页面：<code>hexo new page tags</code></li><li>新增一个 robot.txt 文件，把该文件放在：E:\blog_space\hexo\source 目录下，如果你没有该文件可以到我的项目上找：<a href="https://github.com/chenjh0611/chenjh0611.github.io" target="_blank" rel="noopener">https://github.com/chenjh0611/chenjh0611.github.io</a></li><li>robot 文件内容：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Disallow: /background</span><br><span class="line">Disallow: /css</span><br><span class="line">Disallow: /fancybox</span><br><span class="line">Disallow: /font-awesome</span><br><span class="line">Disallow: /img</span><br><span class="line">Disallow: /js</span><br><span class="line">Sitemap: http://code.skyheng.com/sitemap.xml</span><br><span class="line">Sitemap: http://code.skyheng.com/baidusitemap.xml</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>在md文件的Front-matter区域添将comments设置为flase的话，将不会展示评论界面。</p></blockquote><h2 id="设置分类"><a href="#设置分类" class="headerlink" title="设置分类"></a>设置分类</h2><p>在我们编辑文章的时候，直接在categories:项填写属于哪个分类，但如果分类是中文的时候，路径也会包含中文。 比如分类我们设置的是：<br>categories: 编程 那在生成页面后，分类列表就会出现编程这个选项，他的访问路径是：<code>*/categories/编程</code><br>如果我们想要把路径名和分类名分别设置，需要怎么办呢？<br>打开根目录下（并非主题目录）的配置文件_config.yml（别打开错了），找到如下位置做更改（设置种类）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">    编程: programming</span><br><span class="line">    Hexo：Hexo</span><br><span class="line">    生活: life</span><br><span class="line">    其他: other</span><br><span class="line">tag_map:</span><br></pre></td></tr></table></figure></p><p>在这里category_map:是设置分类的地方，每行一个分类，冒号前面是分类名称，后面是访问路径。 可以提前在这里设置好一些分类，当编辑的文章填写了对应的分类名时，就会自动的按照对应的路径来访问。</p><h2 id="置顶文章方法"><a href="#置顶文章方法" class="headerlink" title="置顶文章方法"></a>置顶文章方法</h2><ul><li>参考：<ol><li><a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">解决Hexo置顶问题</a></li><li><a href="https://www.jianshu.com/p/42a4efcdf8d7" target="_blank" rel="noopener">解决Hexo博客文章置顶问题</a></li></ol></li><li>编辑这个文件：<code>node_modules/hexo-generator-index/lib/generator.js</code>在生成文章之前进行文章top值排序。</li><li>覆盖原文件内容，采用下面内容：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'use strict'</span>;</span><br><span class="line">var pagination = require(<span class="string">'hexo-pagination'</span>);</span><br><span class="line">module.exports = <span class="keyword">function</span>(locals)&#123;</span><br><span class="line">var config = this.config;</span><br><span class="line">var posts = locals.posts;</span><br><span class="line">posts.data = posts.data.sort(<span class="keyword">function</span>(a, b) &#123;</span><br><span class="line">    <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">        <span class="keyword">if</span>(a.top == b.top) <span class="built_in">return</span> b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">return</span> b.top - a.top; // 否则按照top值降序排</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">        <span class="built_in">return</span> -1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">        <span class="built_in">return</span> 1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">return</span> b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">  var paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="built_in">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>然后在文章头部的：Front-matter位置加上一个：<code>top: 1000</code>的内容。数值越大，越靠前</li></ul><h3 id="另外一种解决方案："><a href="#另外一种解决方案：" class="headerlink" title="另外一种解决方案："></a>另外一种解决方案：</h3><ul><li><a href="http://blog.csdn.net/qwerty200696/article/details/79010629" target="_blank" rel="noopener">hexo博客优化之文章置顶+置顶标签</a><br>文章中卸载<code>hexo-generator-index</code>使用<code>cnpm install --save hexo-generator-index-pin-top</code>插件来实现，安装这个插件然后在需要置顶的文章的Front-matter中加上top: true即可，也可以是数值，数值越大，越靠前</li></ul><h2 id="字数统计和阅读时长"><a href="#字数统计和阅读时长" class="headerlink" title="字数统计和阅读时长"></a>字数统计和阅读时长</h2><p>Next 是已经集成了这个功能，所以还是得需要咱们自己完成，首先看一下官网的使用帮助<a href="https://www.npmjs.com/package/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>.</p><h3 id="集成步骤"><a href="#集成步骤" class="headerlink" title="集成步骤"></a>集成步骤</h3><ol><li>先安装插件<code>hexo-wordcount</code>、执行<code>cnpm install --save hexo-wordcount</code>安装</li><li><p>文件配置、在<code>yelee/layout/_partial/post/word.ejs</code>下创建<code>word.ejs</code>文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:10px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-keyboard-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  字数统计: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">wordcount</span>(<span class="attr">post.content</span>) %&gt;</span>字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      &amp;nbsp; | &amp;nbsp;</span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-hourglass-half"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  阅读时长: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">min2read</span>(<span class="attr">post.content</span>) %&gt;</span>分<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>然后在 <code>themes/yelee/layout/_partial/article.ejs</code>文件中<code>&lt;%- partial(&#39;post/title&#39;, {class_name: &#39;article-title&#39;}) %&gt;</code>后面添加如下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.word_count &amp;&amp; !post.no_word_count)&#123; %&gt;</span><br><span class="line">   &lt;%- partial(<span class="string">'post/word'</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;div class=&quot;article-info article-info-post&quot;&gt;</code>后添加如下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.word_count &amp;&amp; !post.no_word_count)&#123; %&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li><p>在主题<code>_config.yml</code>中配置<code>word_count</code>是否需要添加字数统计功能控制的flag、在md文件的Front-matter区域添加<code>no_word_count</code>为true即配置文章不需要显示字数统计功能</p></li></ol><ul><li><code>article.ejs</code>文件中代码块示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (post.link || post.title)&#123; %&gt;</span><br><span class="line">  &lt;header class=&quot;article-header&quot;&gt;</span><br><span class="line">&lt;%- partial(&apos;post/title&apos;, &#123;class_name: &apos;article-title&apos;&#125;) %&gt;</span><br><span class="line">&lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123; %&gt;</span><br><span class="line">   &lt;%- partial(&apos;post/word&apos;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line">  &lt;% if (!index)&#123; %&gt;</span><br><span class="line">  &lt;div class=&quot;article-info article-info-post&quot;&gt;</span><br><span class="line">&lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123; %&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;%- partial(&apos;post/category&apos;) %&gt;</span><br><span class="line">&lt;%- partial(&apos;post/tag&apos;) %&gt;</span><br><span class="line">&lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h2><ul><li>集成起来就很简单了，<code>MarkDown</code> 是支持 <code>h5</code> 代码的，所以打开<a href="https://music.163.com" target="_blank" rel="noopener">网易云</a>,输入你想要的歌曲，点击对应歌曲的 生成外链播放器。前提是有版权哈，然后拷贝相应的代码即可。<br><img src="http://img.skyheng.com/picture/hexo/music-get-link.png" alt="外链"><br><img src="http://img.skyheng.com/picture/hexo/music-code.png" alt="拷贝代码"><br>效果请点击<a href="http://code.skyheng.com/about/">关于我</a></li></ul><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>废话不多说，直接看如何集成。 拷贝需要的文件、进入到<a href="https://github.com/xiaweizi/BackupBlog" target="_blank" rel="noopener">我的备份</a>，拷贝文件。<br><img src="http://img.skyheng.com/picture/hexo/folder-tree.png" alt="文件夹目录"><br>拷贝<code>resources</code>下的所有文件到您对应的目录。<br>打开<code>themes/yelee/layout/_partial/after-footer.ejs</code>文件，添加刚刚添加文件的配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.background_animation)&#123; %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/resources/love.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/resources/float.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/resources/typewriter.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; color=0,104,183 opacity=1 zindex=-1 count=50 src=&quot;/resources/particle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p><h2 id="快速实现博客压缩"><a href="#快速实现博客压缩" class="headerlink" title="快速实现博客压缩"></a>快速实现博客压缩</h2><p>项目压缩也叫<code>代码丑化</code>, 分别对 html、css、js、images进行优化，即把重复的代码合并，把多余的空格去掉，用算法把 images 进行压缩。压缩后的博客，加载速度会有较大的提升，自然能留住更多游客。<br>蛮多朋友使用了<code>gulp</code>对博客进行压缩，这也是一个办法，但在社区逛了下，找到了一个比较好用的模块<a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier</a>，这个模块集成了对 html、css、js、image 的优化。安装上此模块后，只要在根目录下的<code>_config.yml</code>文件中加上如下字段就可对博客所有内容进行压缩。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html_minifier:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  ignore_error: <span class="literal">false</span></span><br><span class="line">  exclude:</span><br><span class="line"></span><br><span class="line">css_minifier:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">'*.min.css'</span></span><br><span class="line"></span><br><span class="line">js_minifier:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mangle: <span class="literal">true</span></span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">'*.min.js'</span></span><br><span class="line"></span><br><span class="line">image_minifier:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  interlaced: <span class="literal">false</span></span><br><span class="line">  multipass: <span class="literal">false</span></span><br><span class="line">  optimizationLevel: 2</span><br><span class="line">  pngquant: <span class="literal">false</span></span><br><span class="line">  progressive: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h2 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h2><p>也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。</p><ul><li>hexo-abbrlink介绍：<a href="https://post.zz173.com/detail/hexo-abbrlink.html" target="_blank" rel="noopener">https://post.zz173.com/detail/hexo-abbrlink.html</a>、GitHub地址：<a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a><br>安装：<code>cnpm install hexo-abbrlink --save</code><br>在<code>站点配置文件</code>中查找代码<code>permalink</code>，将其更改为：<code>permalink: posts/:abbrlink/  # posts/</code>可自行更换</li></ul><p>这里有个知识点：</p><blockquote><p>百度蜘蛛抓取网页的规则:  对于蜘蛛说网页权重越高、信用度越高抓取越频繁，例如网站的首页和内页。蜘蛛先抓取网站的首页，因为首页权重更高，并且大部分的链接都是指向首页。然后通过首页抓取网站的内页，并不是所有内页蜘蛛都会去抓取。<br>搜索引擎认为对于一般的中小型站点，3层足够承受所有的内容了，所以蜘蛛经常抓取的内容是前三层，而超过三层的内容蜘蛛认为那些内容并不重要，所以不经常爬取。出于这个原因所以permalink后面跟着的最好不要超过2个斜杠。</p></blockquote><ul><li>然后在<code>站点配置文件</code>中添加如下代码:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure></li></ul><p>可选择模式：</p><ul><li>crc16 &amp; hex</li><li>crc16 &amp; dec</li><li>crc32 &amp; hex</li><li>crc32 &amp; dec</li></ul><p>示例：<br>生成的链接如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/66c8.html</span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure></p><h2 id="Yelog—对Yelee主题的改进"><a href="#Yelog—对Yelee主题的改进" class="headerlink" title="Yelog—对Yelee主题的改进"></a>Yelog—对Yelee主题的改进</h2><blockquote><p>由于Yelee主题存在代码块上下出现空格的情况以及主题布局尺寸固定的情况，Yelog主题对Yelee主题进行了改进，github地址如下：<br><a href="https://github.com/yelog/hexo-theme-yelog" target="_blank" rel="noopener">https://github.com/yelog/hexo-theme-yelog</a></p></blockquote><h2 id="使用Yilia主题需要"><a href="#使用Yilia主题需要" class="headerlink" title="使用Yilia主题需要"></a>使用Yilia主题需要</h2><ul><li>在查看所有文章的时候需要<br>1、请确保node版本大于6.2<br>2、在博客根目录（注意不是yilia根目录）执行以下命令：npm i hexo-generator-json-content –save<br>3、在根目录_config.yml里添加配置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">meta: <span class="literal">false</span></span><br><span class="line">pages: <span class="literal">false</span></span><br><span class="line">posts:</span><br><span class="line">  title: <span class="literal">true</span></span><br><span class="line">  date: <span class="literal">true</span></span><br><span class="line">  path: <span class="literal">true</span></span><br><span class="line">  text: <span class="literal">false</span></span><br><span class="line">  raw: <span class="literal">false</span></span><br><span class="line">  content: <span class="literal">false</span></span><br><span class="line">  slug: <span class="literal">false</span></span><br><span class="line">  updated: <span class="literal">false</span></span><br><span class="line">  comments: <span class="literal">false</span></span><br><span class="line">  link: <span class="literal">false</span></span><br><span class="line">  permalink: <span class="literal">false</span></span><br><span class="line">  excerpt: <span class="literal">false</span></span><br><span class="line">  categories: <span class="literal">false</span></span><br><span class="line">  tags: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="显示pdf的支持"><a href="#显示pdf的支持" class="headerlink" title="显示pdf的支持"></a>显示pdf的支持</h2><ul><li>安装：<code>cnpm install --save hexo-pdf</code> github地址：<a href="https://github.com/superalsrk/hexo-pdf/" target="_blank" rel="noopener">hexo-pdf</a></li><li>使用示例：<div class="row">    <embed src="http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf" width="100%" height="550" type="application/pdf"></div></li></ul><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><h3 id="插件的基本使用命令"><a href="#插件的基本使用命令" class="headerlink" title="插件的基本使用命令"></a>插件的基本使用命令</h3><ul><li>插件官网：<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">https://hexo.io/plugins/</a></li><li>安装插件：<code>npm install 插件名 --save</code></li><li>卸载插件：<code>npm uninstall 插件名</code></li><li>更新插件和博客框架（需要在 E:\blog_space\hexo 目录下）：<code>npm update</code></li><li>它实质上是通过项目根目录下 package.json 文件更新各大组件</li></ul><h3 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h3><ul><li>支持RSS：<code>cnpm install hexo-generator-feed --save</code></li><li>生成站点地图：<code>cnpm install hexo-generator-sitemap --save</code></li><li>生成百度站点地图：<code>cnpm install hexo-generator-baidu-sitemap --save</code></li><li>HTML 压缩：<code>cnpm install hexo-html-minifier --save</code></li><li>JavaScript 压缩：<code>cnpm install hexo-uglify --save</code></li><li>CSS 压缩插件：<code>cnpm install hexo-clean-css --save</code></li><li>SEO优化：<code>cnpm install hexo-generator-seo-friendly-sitemap</code></li><li>站内搜索：<code>hexo-generator-search</code>插件为 Hexo3 提供搜索功能。 安装： <code>cnpm install hexo-generator-search --save</code></li></ul><h3 id="其他插件支持"><a href="#其他插件支持" class="headerlink" title="其他插件支持"></a>其他插件支持</h3><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul><li>真心希望这是 Hexo 最后一篇，因为我们只是要安心写东西而已，不需要太多折腾。<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2></li><li><a href="http://www.jianshu.com/p/57e22584b277" target="_blank" rel="noopener">搭建Hexo博客进阶篇–API和一些小部件（四）</a></li><li><a href="http://blog.csdn.net/yanzi1225627/article/details/77761488" target="_blank" rel="noopener">hexo链接持久化终极解决之道</a></li></ul><h2 id="系列博文整理"><a href="#系列博文整理" class="headerlink" title="系列博文整理"></a>系列博文整理</h2><p>整理了下hexo系列的文章，发现这位博主写系列博客感觉还是很棒的：</p><ul><li><a href="http://tengj.top/2016/02/22/hexo1/" target="_blank" rel="noopener">hexo干货系列：（一）hexo+gitHub搭建个人独立博客</a></li><li><a href="http://tengj.top/2016/02/26/hexo2/" target="_blank" rel="noopener">hexo干货系列：（二）hexo主题下载及配置</a></li><li><a href="http://tengj.top/2016/03/06/hexo3/" target="_blank" rel="noopener">hexo干货系列：（三）hexo的Jacman主题优化</a></li><li><a href="http://tengj.top/2016/03/06/hexo4/" target="_blank" rel="noopener">hexo干货系列：（四）将hexo博客同时托管到github和coding</a></li><li><a href="http://tengj.top/2016/03/11/hexo5Swiftype" target="_blank" rel="noopener">hexo干货系列：（五）hexo添加站内搜索</a></li><li><a href="http://tengj.top/2016/03/14/hexo6seo" target="_blank" rel="noopener">hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）</a></li><li><a href="http://tengj.top/2016/03/17/hexo7count/" target="_blank" rel="noopener">hexo干货系列：（七）hexo安装统计插件</a></li><li><a href="http://tengj.top/2016/03/20/hexo8hidewidgets/" target="_blank" rel="noopener">hexo干货系列：（八）hexo文章自动隐藏侧边栏</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解 Hexo博客的常用插件、站点 SEO 等内容！&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://code.skyheng.com/categories/hexo/"/>
    
    
      <category term="git" scheme="http://code.skyheng.com/tags/git/"/>
    
      <category term="hexo" scheme="http://code.skyheng.com/tags/hexo/"/>
    
      <category term="github" scheme="http://code.skyheng.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>使用Github搭建Hexo技术博客--安装教程</title>
    <link href="http://code.skyheng.com/post/4103.html"/>
    <id>http://code.skyheng.com/post/4103.html</id>
    <published>2015-05-01T02:46:18.000Z</published>
    <updated>2018-03-20T14:50:33.299Z</updated>
    
    <content type="html"><![CDATA[<p>本文将讲解使用Github搭建Hexo技术博客！<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/hexo/hexo_pages.png" alt="使用Github搭建Hexo技术博客"></p><h2 id="部署前介绍"><a href="#部署前介绍" class="headerlink" title="部署前介绍"></a>部署前介绍</h2><h3 id="Hexo-是什么"><a href="#Hexo-是什么" class="headerlink" title="Hexo 是什么"></a>Hexo 是什么</h3><ul><li>Hexo 的中文官网：<a href="http://hexo.io/zh-cn/" target="_blank" rel="noopener">http://hexo.io/zh-cn/</a></li><li>作者 Tommy Chen：<a href="https://zespia.tw/" target="_blank" rel="noopener">https://zespia.tw/</a></li><li>在我的理解里面：Hexo 是一个基于 Node.js 快速、简洁且高效的博客框架，可以将 Markdown 文件快速的生成静态网页，托管在<a href="https://pages.github.com" target="_blank" rel="noopener">GitHub Pages</a> 或者<a href="https://pages.coding.net/" target="_blank" rel="noopener">Coding Pages </a>上。</li><li>而官网自己是这样说的：</li></ul><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><h3 id="为什么要用-Hexo"><a href="#为什么要用-Hexo" class="headerlink" title="为什么要用 Hexo"></a>为什么要用 Hexo</h3><p><img src="http://img.skyheng.com/picture/hexo/hexo_idea.png" alt="hexo_idea"></p><ul><li>因为其他博客框架太烂了</li><li>想自己管理博客，不受其他品台的约束</li></ul><h3 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h3><ul><li>有开发基础的程序员（或者你是前端开发的前端工程师）</li><li>想搭建一个技术博客的人（真心别搞太多，没那么多精力去搞）</li></ul><h3 id="文章要求"><a href="#文章要求" class="headerlink" title="文章要求"></a>文章要求</h3><ul><li>如果是 Git，Node.js 的新人，则这篇文章不要间断操作，要一气呵成，不然可能会遇到各种问题。</li></ul><h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><blockquote><p>本文在20171027修改 </p></blockquote><ul><li>系统：Windows 10 专业版（64 位）</li><li>软件：<ul><li>git：<strong>Git-2.14.1-64-bit</strong></li><li>notepad++：<strong>6.9.2</strong></li><li>node.js：<strong>node-v8.7.0-x64</strong></li></ul></li><li>账号和准备：<ul><li>Github：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></li><li>Coding：<a href="https://coding.net/" target="_blank" rel="noopener">https://coding.net/</a> 如果同时部署到coding上需要</li><li>七牛云：<a href="http://www.qiniu.com/" target="_blank" rel="noopener">http://www.qiniu.com/</a> 用来储存图片，当然也有其他方式</li><li>DNSPOD：<a href="https://www.dnspod.cn/" target="_blank" rel="noopener">https://www.dnspod.cn/</a></li><li>域名注册：<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">https://wanwang.aliyun.com/</a> 注册域名绑定博客</li></ul></li></ul><h3 id="搭建所需软件"><a href="#搭建所需软件" class="headerlink" title="搭建所需软件"></a>搭建所需软件</h3><ul><li>各个软件官网：<ul><li>git：<a href="http://git-scm.com/" target="_blank" rel="noopener">http://git-scm.com/</a></li><li>IntelliJ IDEA：<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a> 在编辑博客中的配置文件和写博客可以用到</li><li>node.js：<a href="http://nodejs.org/" target="_blank" rel="noopener">http://nodejs.org/</a></li><li>notepad++：<a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">https://notepad-plus-plus.org/</a></li></ul></li><li>所需软件集合：链接：<a href="http://pan.baidu.com/s/1bpyaVRx" target="_blank" rel="noopener">http://pan.baidu.com/s/1bpyaVRx</a> 密码：tlhl</li></ul><blockquote><p><strong>Windows 用户</strong></p><p>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">这个页面</a>，收录了存储于百度云的下载地址。</p></blockquote><h3 id="文章前提"><a href="#文章前提" class="headerlink" title="文章前提"></a>文章前提</h3><ul><li>如果你对上面要求的软件一个都不了解的话，建议你先看如下内容（只是让你们先了解下，当时别照着文章内容做）：<ul><li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li><li><a href="http://www.jianshu.com/p/858ecf233db9" target="_blank" rel="noopener">通过Hexo在Github上搭建博客教程</a></li><li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a></li><li><a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="noopener">手把手教你建github技术博客</a></li><li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li><li><a href="http://www.jianshu.com/p/e858a90d0a17" target="_blank" rel="noopener">windows下搭建hexo博客并将其部署到GitCafe终极教程</a></li><li><a href="http://www.jianshu.com/p/db7e64d86067" target="_blank" rel="noopener">使用Hexo搭建博客（三），博客配置、主题和写作</a></li><li><a href="http://www.jianshu.com/p/e7413116e9d4" target="_blank" rel="noopener">Hexo搭建WiKi</a></li><li><a href="https://www.zhihu.com/question/28058973" target="_blank" rel="noopener">怎么用hexo上传一个README.md到github?</a></li></ul></li></ul><h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><ul><li>如果你一开始就打算要绑定域名，则下面教程中所有可以填写域名的地方你都填写上你要绑定的域名，如果你没独立域名，那就使用 Github 默认给你的：XXXXXX.github.io 域名即可。</li></ul><hr><h2 id="部署开始"><a href="#部署开始" class="headerlink" title="部署开始"></a>部署开始</h2><h3 id="git-安装"><a href="#git-安装" class="headerlink" title="git 安装"></a>git 安装</h3><ul><li>双击运行 <strong>Git-2.14.1-64-bit.exe</strong>，接下来一律下一步，不需要多余的选择，假设你安装的目录位置跟我一样：C:\Program Files\Git</li><li>打开 Git Bash（路径：C:\Program Files\Git\git-bash.exe），输入：<code>git --version</code></li><li>如下图，如果出现：<strong>git version 2.14.1.windows.1</strong>，这表示安装成功<br><img src="http://img.skyheng.com/picture/hexo/git.png" alt="验证 git 安装"></li></ul><h3 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h3><ul><li>双击运行 <strong>node-v8.7.0-x64.msi</strong>，接下来一律下一步，不需要多余的选择。</li><li>安装完之后，打开 Git Bash，输入：<code>npm -v</code></li><li>如下图，如果出现：<strong>5.4.2</strong>，则表示 Node.js 安装成功<br><img src="http://img.skyheng.com/picture/hexo/node.png" alt="验证 node.js 安装"></li></ul><h3 id="Node-js-源设置"><a href="#Node-js-源设置" class="headerlink" title="Node.js 源设置"></a>Node.js 源设置</h3><ul><li>在安装 Hexo 之前，先说一下 Node.js 的源，Node.js 官方源默认是：<a href="http://registry.npmjs.org" target="_blank" rel="noopener">http://registry.npmjs.org</a>，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></li><li>在 Git Bash 中我们执行下面这一句（这是一整句的）：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span></span><br></pre></td></tr></table></figure><ul><li>现在验证下是否可以使用淘宝的 cnpm 命令：<code>cnpm info express</code><ul><li>如果能输出一大堆介绍，则说明成功了，以后每次要使用淘宝的源都需要这样来。现在除了默认的 <strong>npm</strong>，还多了一个 <strong>cnpm</strong> 可以使用，我们下面有关安装的讲解内容也都是基于此临时命令。</li><li>如果输出：bash: cnpm: command not found，则表示没成功，需要你在排查下</li></ul></li></ul><h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><ul><li>安装 Hexo（注意，现在是 cnpm 开头了，不是 npm 了）：<code>cnpm install -g hexo-cli</code><ul><li>安装时间不一定很快，有可能需要等 3 ~ 5 分钟。</li><li>安装完有 WARN 警告也没关系的。</li></ul></li></ul><h3 id="创建-Hexo-项目"><a href="#创建-Hexo-项目" class="headerlink" title="创建 Hexo 项目"></a>创建 Hexo 项目</h3><ul><li>现在假设我要创建一个名为 hexo 的项目，项目目录就放在：E:\blog_space 目录下，所以我们在 E:\blog_space 目录下创建一个 hexo 目录。现在这个项目的全路径是：E:\blog_space\hexo</li><li>打开 Git Bash：</li><li>进入该目录：<code>cd e:/blog_space/hexo</code></li><li>然后执行：<code>hexo init</code>，这个时间也会比较长，也有可能要等几分钟，有显示 WARN 也不用管</li><li>最后执行：<code>cnpm install</code>，有显示 WARN 也不用管</li><li>安装完成之后，E:\blog_space\hexo 目录结构是这样的：<br><img src="http://img.skyheng.com/picture/hexo/hexo-menu.png" alt="安装 hexo 后的目录结构"></li><li>现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令：<code>hexo server</code></li><li>现在用浏览器访问：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，效果如下图<br><img src="http://img.skyheng.com/picture/hexo/hexo-init1.png" alt="默认模板效果"></li><li>如果要停止 hexo 服务：在 Git Bash 下按 <code>Ctrl + C</code> 即可</li></ul><h3 id="选用其他主题"><a href="#选用其他主题" class="headerlink" title="选用其他主题"></a>选用其他主题</h3><ul><li>由于默认主题太大众了，所以现在我们换个主题。</li><li>你可以去这里找主题：<ul><li>hexo-theme：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></li><li>hexo-github-theme-list：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Themes</a></li><li>有那些好看的hexo主题？：<a href="http://www.zhihu.com/question/24422335" target="_blank" rel="noopener">http://www.zhihu.com/question/24422335</a></li><li>我这里选择的 <strong>yelee</strong>：GitHub链接 <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="noopener">https://github.com/MOxFIVE/hexo-theme-yelee</a></li><li>Yelee主题使用说明: <a href="http://moxfive.coding.me/yelee/" target="_blank" rel="noopener">http://moxfive.coding.me/yelee/</a></li><li>原因是能最大化衬托出：目录、文章内容、代码块。因为我对这个博客的定位就是用来放技术类内容，所以不会让它太杂或是太花。只是目前这个颜色偏浅，后续还需要调整。</li></ul></li><li>现在假设你跟我要用的模板是一样：<ul><li>还是让 Git Bash 保持在 E:\blog_space\hexo 目录下，然后输入命令：<code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</code></li><li>这样就在 E:\blog_space\hexo\themes 目录下生成了一个 yelle 文件夹，里面有我们刚刚 clone 下来的主题内容。</li><li>如果以后你不自己修改这个主题的话，可以考虑经常更新下作者的更新内容：<ul><li><code>cd e:/blog_space/hexo/themes/yelee</code></li><li><code>git pull origin master</code></li></ul></li></ul></li><li>下载好主题文件之后，我们现在要修改 E:\blog_space\hexo 目录下的项目配置文件：<strong>_config.yml</strong>，把对应的主题目录名改下，编辑如下图。<br><img src="http://img.skyheng.com/picture/hexo/hexo-update.png" alt="修改主题目录"></li><li>更改主题目录名后，我们还要重新生成主题静态内容：</li><li>继续在 Git Bash 中输入命令：</li><li>重新生成静态博客的所有内容：<code>hexo generate</code></li><li>重启 hexo 本地服务：<code>hexo server</code></li><li>重新访问：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，效果如下图<br><img src="http://img.skyheng.com/picture/hexo/hexo-demo.png" alt="新主题效果"></li></ul><h3 id="创建-Github-pages-并-SSH-授权"><a href="#创建-Github-pages-并-SSH-授权" class="headerlink" title="创建 Github pages 并 SSH 授权"></a>创建 Github pages 并 SSH 授权</h3><ul><li>现在假设你已经有一个 Gtihub 账号，你还需要一个特别的仓库，特别在仓库名就是你的 Github 账号登录名，比如我的用户名是：chenjh0611，那我要创建的仓库名字完整滴填写是：<code>chenjh0611.github.io</code></li><li>创建好仓库之后，要本地生成 SSH 秘钥，方便电脑上的 git 软件好提交内容到 Github 上</li><li>在 Git Bash 中，输入：<code>ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</code>，然后回车，回车，再回车，一共 3 次回车，具体含义自己 Google。</li><li>比如我的：<code>ssh-keygen -t rsa -C &quot;chenjh0611@163.com&quot;</code>：</li><li>此时，生成密钥后，在你电脑目录：C:\Users\你的计算机用户名.ssh 下，会生成两个文件：</li><li>私钥：<strong>id_rsa</strong></li><li>公钥：<strong>id_rsa.pub</strong></li><li>如果生成的不是这样的文件，那删除掉这两个生成的，重新执行上面的命令，让它再一次生成。</li><li>现在用记事本打开 id_rsa.pub，复制文件中的所有内容。</li><li>访问：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a>，添加新秘钥，效果如下图<br><img src="http://img.skyheng.com/picture/hexo/hexo-start.png" alt="添加密钥"></li><li>Title：自己随便取</li><li>Key：把刚刚复制的都粘贴进来</li></ul><h3 id="把本地的博客内容同步到-Github-上"><a href="#把本地的博客内容同步到-Github-上" class="headerlink" title="把本地的博客内容同步到 Github 上"></a>把本地的博客内容同步到 Github 上</h3><ul><li>要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：<ul><li>继续在 Git Bash 中输入：</li><li><code>cnpm install hexo -server --save</code></li><li><code>cnpm install hexo-deployer-git --save</code></li></ul></li><li>编辑全局 hexo 的配置文件：<strong>_config.yml</strong><ul><li>官网对此配置的介绍：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration.html</a></li><li>我自己的编辑内容初稿（你需要认真看的是含有中文注释的内容）：</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site 这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的s</span></span><br><span class="line">title: Chenjh Code  <span class="comment">#网站标题</span></span><br><span class="line">subtitle: 这里只有代码相关,要了解更多 &gt;&gt; www.skyheng.com <span class="comment">#网站副标题</span></span><br><span class="line">description: 这里是 www.skyheng.com 一部分</span><br><span class="line">author: Chenjh</span><br><span class="line">email: 1225948009@qq.com</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:   <span class="comment">#网站时区。Hexo 默认使用您电脑的时区</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL 这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://code.skyheng.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line">source_dir: <span class="built_in">source</span> <span class="comment">#源文件夹，这个文件夹用来存放内容。</span></span><br><span class="line">public_dir: public <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件</span></span><br><span class="line">tag_dir: tags <span class="comment">#标签文件夹</span></span><br><span class="line">archive_dir: archives <span class="comment">#归档文件夹</span></span><br><span class="line">category_dir: categories <span class="comment">#分类文件夹</span></span><br><span class="line">code_dir: downloads/code <span class="comment">#nclude code 文件夹</span></span><br><span class="line">i18n_dir: :lang <span class="comment">#国际化（i18n）文件夹</span></span><br><span class="line">skip_render:  <span class="comment">#跳过指定文件的渲染，您可使用 glob 表达式来匹配路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line">new_post_name: :year-:month-:day.:title.md <span class="comment">#新建文章默认文件名</span></span><br><span class="line">default_layout: post <span class="comment"># 默认布局</span></span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link: <span class="literal">true</span> <span class="comment"># 在新标签中打开一个外部链接，默认为true</span></span><br><span class="line">filename_case: 0 </span><br><span class="line">render_drafts: <span class="literal">false</span> <span class="comment">#是否渲染_drafts目录下的文章，默认为false</span></span><br><span class="line">post_asset_folder: <span class="literal">true</span> <span class="comment">#启动 Asset 文件夹</span></span><br><span class="line">relative_link: <span class="literal">false</span> <span class="comment">#把链接改为与根目录的相对位址，默认false</span></span><br><span class="line">future: <span class="literal">true</span> <span class="comment">#显示未来的文章，默认false</span></span><br><span class="line">highlight:  <span class="comment">#代码块的设置</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag #分类和标签的设置</span></span><br><span class="line">default_category: uncategorized <span class="comment">#默认分类</span></span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next <span class="comment"># next  yelee</span></span><br><span class="line"></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: all</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。</span></span><br><span class="line"><span class="comment">## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo:</span><br><span class="line">      github: git@github.com:chenjh0611/chenjh0611.github.io.git,master</span><br><span class="line">      coding: git@git.coding.net:chenjh0719/chenjh0719.git,master</span><br></pre></td></tr></table></figure><ul><li>编辑全局配置后我们需要重新部署：</li><li>继续在 Git Bash 中输入命令：</li><li>先清除掉已经生成的旧文件：<code>hexo clean</code></li><li>再生成一次静态文件：<code>hexo generate</code></li><li>在本地预览下：<code>hexo server</code></li><li>本地没问题之后，Ctrl + C 停掉本地预览，使用部署命令部署到 Github 上：<code>hexo deploy</code>，有弹出下面提示框，请输入：<code>yes</code><br><img src="http://img.skyheng.com/picture/hexo/ssh-alert.png" alt="确认提交"></li><li>提交成功效果如下：<br><img src="http://img.skyheng.com/picture/hexo/deploy.png" alt="提交成功"></li><li>访问服务器地址进行检查：<a href="http://chenjh0611.github.io" target="_blank" rel="noopener">http://chenjh0611.github.io</a></li><li>通过上面几次流程我们也就可以总结：以后，每次发表新文章要部署都按这样的流程来：<ul><li><code>hexo clean</code></li><li><code>hexo generate</code></li><li><code>hexo deploy</code></li></ul></li><li>也因为这几个命令太频繁了，所以又有了精简版的命令：<ul><li><code>hexo clean == hexo clean</code></li><li><code>hexo g == hexo generate</code></li><li><code>hexo s == hexo server</code></li><li><code>hexo d == hexo deploy</code></li></ul></li></ul><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><ul><li>绑定域名不排除会遇到很多网络问题或是七七八八，所以这里先提供先官网的一些说明：<ul><li><a href="https://help.github.com/articles/setting-up-your-pages-site-repository/" target="_blank" rel="noopener">https://help.github.com/articles/setting-up-your-pages-site-repository/</a></li><li><a href="https://help.github.com/articles/quick-start-setting-up-a-custom-domain/" target="_blank" rel="noopener">https://help.github.com/articles/quick-start-setting-up-a-custom-domain/</a></li><li><a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="noopener">https://help.github.com/articles/setting-up-an-apex-domain/</a></li><li><a href="https://help.github.com/articles/troubleshooting-custom-domains/" target="_blank" rel="noopener">https://help.github.com/articles/troubleshooting-custom-domains/</a></li><li><a href="https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/" target="_blank" rel="noopener">https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/</a></li></ul></li><li>首先我们要一个 CNAME 文件（文件名叫 CNAME，没有文件后缀的），把该文件放在 E:\blog_space\hexo\source 目录下，以后一些需要放在根目录的资源文件都可以放这里。如果你找不到这样的文件可以到我的项目上下载：<a href="https://github.com/chenjh0611/chenjh0611.github.io" target="_blank" rel="noopener">https://github.com/chenjh0611/chenjh0611.github.io</a></li><li>CNAME 上的内容需要写你具体要绑定的域名信息，比如我是：<strong>code.skyheng.com</strong>：</li><li>接着我们需要到阿里云后台上设置域名解析：<a href="https://www.aliyun.com/" target="_blank" rel="noopener">https://www.aliyun.com/</a><br><img src="http://img.skyheng.com/picture/hexo/dc-demo.png" alt="设置域名解析"></li><li>设置好之后，等过几分钟域名解析好之后，我们访问：<a href="http://code.skyheng.com">http://code.skyheng.com</a>，效果如下：<br><img src="http://img.skyheng.com/picture/hexo/blog-demo.png" alt="域名访问效果"></li></ul><h3 id="整合-Notepad-提高效率"><a href="#整合-Notepad-提高效率" class="headerlink" title="整合 Notepad++ 提高效率"></a>整合 Notepad++ 提高效率</h3><ul><li>为了提交写作效率，我个人建议使用 Notepad++ 作为 Markdown 编辑工具</li><li>现在我们用 Notepad++ 打开我们本地目录：E:\blog_space\hexo，打开后效果如下图：<br><img src="http://img.skyheng.com/picture/hexo/notepad-edit.png" alt="Notepad++"></li><li>hexo 新文章内容的开头需要这样定义：<ul><li>categories：表示文章所属分类</li><li>tags：表示文章所属标签</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 这是文章标题</span><br><span class="line">categories:</span><br><span class="line">  - hexo</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - git</span><br><span class="line">  - github</span><br><span class="line">  - nodejs</span><br><span class="line">date: 2015-05-01 10:46:18</span><br><span class="line">description: 这里可以写描述</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul><li>我希望从这一篇你也可以为自己搭建一个属于你自己的博客，在博客中畅写。</li><li>最后，祝你搭建博客成功，创造属于你的世界！</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://blog.csdn.net/masterant_d/article/details/54598391" target="_blank" rel="noopener">基于Hexo+Node.js+github+coding搭建个人博客——基础篇(从菜鸟到放弃)</a></li><li><a href="http://blog.csdn.net/masterant_d/article/details/56839222" target="_blank" rel="noopener">基于Hexo+Node.js+github+coding搭建个人博客——进阶篇(从入门到入土)</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将讲解使用Github搭建Hexo技术博客！&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://code.skyheng.com/categories/hexo/"/>
    
    
      <category term="git" scheme="http://code.skyheng.com/tags/git/"/>
    
      <category term="hexo" scheme="http://code.skyheng.com/tags/hexo/"/>
    
      <category term="github" scheme="http://code.skyheng.com/tags/github/"/>
    
      <category term="nodejs" scheme="http://code.skyheng.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>构建工具Maven相关知识整理专题</title>
    <link href="http://code.skyheng.com/post/2803.html"/>
    <id>http://code.skyheng.com/post/2803.html</id>
    <published>2015-03-09T11:56:08.000Z</published>
    <updated>2018-03-20T14:50:31.159Z</updated>
    
    <content type="html"><![CDATA[<p>如果你是学习 Java 或是说 JVM 语言相关的内容的话，在实际使用中有一个东西你是绕不过去的，构建工具。等你到企业还有一个东西你也绕不过去，持续集成。</p><a id="more"></a><h2 id="本文初衷"><a href="#本文初衷" class="headerlink" title="本文初衷"></a>本文初衷</h2><ul><li><img src="http://img.skyheng.com/picture/2015/maven.png" alt="Maven"></li><li>整理自己脑袋中、收藏中的那些资料，来一次清空，让自己重新开始。</li><li>整理这篇的起点是本人已经会使用 Maven，并且已经使用了一年多，所以我个人觉得这篇文章对完全不懂 Maven 来讲是有压力的，但是对于刚刚入门 Maven 的人是有帮助的。</li><li>如果你认为一篇文章就可以让你完全了解 Maven，那你是在鄙视官网帮助文档书写者。</li><li>以此篇为引，希望可以得到你的建议，我只想成长，真心感谢!（鞠躬）</li></ul><h2 id="先总结"><a href="#先总结" class="headerlink" title="先总结"></a>先总结</h2><ul><li>如果你是学习 Java 或是说 JVM 语言相关的内容的话，在实际使用中有一个东西你是绕不过去的，构建工具。等你到企业还有一个东西你也绕不过去，持续集成。</li><li>在说持续集成前，先简单地解释两个概念：集群、分布式<ul><li>应用集群：同样的一套程序/代码，放在一批服务器上，每台服务器上的代码一样。</li><li>应用分布式：不同的组件代码，放在一批服务器上，不同的服务器放不同模块的代码。</li></ul></li><li>在大公司，现在的项目基本都是分布式的，而要做到分布式那就得尽可能地分层、分割、分布。也因为这样，一个项目一般都是由不同模块组合成的。公司里在不同的地区或是部门做不同的模块，尽量减少部门与部门、地区与地区模块的耦合度，也就是降低必要的联系，让他们尽可能的能独立开发、测试。<ul><li>这样的拆分，对一个项目的好处是：<ul><li>分布式架构：具有高性能、高可用、可伸缩、可扩展等优点</li><li>公司成本会降低，类似阿里的去 IOE</li><li>效率会提高</li><li>容错能力更强</li><li>灵活性更高</li></ul></li><li>举一个两者简单的对比例子<ul><li>应用分布式<ul><li>一个采用分布式架构的电商，在做抢购的特殊时候，压力特别的大的部分应该是：购物车、订单、库存、日志等这些跟购物有关的模块，那既然这几个模块压力大，那我们就在抢购前多部署几套跟购物业务相关的模块到服务器上，此时要求这类服务器性能只要能承载对应的模块即可。其他比如：资讯、客服等无压力模块就原样部署即可，无需变动。</li></ul></li><li>应用集群<ul><li>一个采用应用集群架构的电商，在做抢购的特殊时候，为了抗住压力，必须把整个应用一套一套地部署到新服务器上，此时就要求服务器性能要好，能承载整个应用。</li></ul></li><li>对比总结：降低成本</li><li>扩展内容<ul><li>在未来容器虚拟化（以 Docker 为主）的情况下，模块化的组件更容易部署到这些容器上面，也就很容易发生这样的事情：一台服务器部署非常多模块，成本就会降得更低。</li></ul></li></ul></li></ul></li><li>我们已经知道了分布式效益更好，我们也知道分布式的系统都是需要拆分的，对项目进行拆分，把一个大项目拆分成很多小模块项目，然后大家彼此依赖或通信。此时问题来了：如何高效地依赖。</li><li>高效地依赖解决办法是：自动化的构建 + 持续集成。<ul><li>在目前 Java 界，最常用的构建工具就是：Maven</li><li>在多模块的项目中，还是以一个电商项目为例，购物车模块肯定是会依赖 core 模块、Parent 模块等，而这些模块的开发者在不同城市或是不同部门。在协同开发中，不可能每次他们一有更新就得专门安排一个人来交付依赖，这种方式效率是非常低的。</li><li>今天整理这个 Maven 材料其实是为了后面整理持续集成做的准备的，大家必须有这个基础才能说后面的持续集成，后续的持续集成会涉及到：TeamCity、Jenkins、Hudson</li></ul></li></ul><h2 id="Maven-知识"><a href="#Maven-知识" class="headerlink" title="Maven 知识"></a>Maven 知识</h2><h3 id="Maven-是什么"><a href="#Maven-是什么" class="headerlink" title="Maven 是什么"></a>Maven 是什么</h3><ul><li>术语定义<ul><li>Maven 官网：<a href="http://maven.apache.org/" target="_blank" rel="noopener">http://maven.apache.org/</a></li><li>Maven 官网对自己的定义：<a href="http://maven.apache.org/what-is-maven.html" target="_blank" rel="noopener">http://maven.apache.org/what-is-maven.html</a></li><li>百度百科定义：<a href="http://baike.baidu.com/view/336103.htm" target="_blank" rel="noopener">http://baike.baidu.com/view/336103.htm</a></li><li>维基百科定义：<a href="https://zh.wikipedia.org/wiki/Apache_Maven" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Apache_Maven</a><ul><li>在 Wiki 上还需要注意如下，这些有助于你站在更加宏观的角度看待它，但是可能需要积累：<ul><li><code>参见</code></li><li><code>补充阅读</code></li><li><code>参考资料</code></li><li><code>外部链接</code></li></ul></li></ul></li></ul></li><li>它的历史<ul><li>Google 搜索：<code>Maven History</code><ul><li>搜索结果：<ul><li>历史介绍：<a href="http://maven.apache.org/background/history-of-maven.html" target="_blank" rel="noopener">http://maven.apache.org/background/history-of-maven.html</a></li><li>创始人：<strong>jason van zyl</strong></li><li>创始人现在：<a href="http://takari.io/" target="_blank" rel="noopener">http://takari.io/</a></li></ul></li></ul></li><li>Google 搜索：<code>Maven 区别</code>、<code>Maven difference</code><ul><li>搜索结果：<ul><li>人们在关注：</li><li>gradle maven区别</li><li>ant maven区别</li><li>ivy maven区别</li><li>maven maven2区别<ul><li>通过这个搜索结果我们知道，现阶段我们要的是 Maven 3：</li><li><a href="http://www.infoq.com/cn/news/2011/07/xxb-maven-10-time-to-update" target="_blank" rel="noopener">Maven实战（十）——Maven 3，是时候升级了</a></li><li><a href="http://tech.it168.com/a2010/1108/1123/000001123274_all.shtml" target="_blank" rel="noopener">六年等一回 Maven 3的10大新特性详解</a></li></ul></li></ul></li></ul></li></ul></li><li>同类常见技术（按技术出现时间正序）<ul><li><code>Ant</code></li><li><code>Gradle</code></li></ul></li><li>同类技术比较：<ul><li>Google 搜索：<code>Ant Maven Gradle</code><ul><li>搜索结果：<ul><li><a href="http://blog.csdn.net/napolunyishi/article/details/39345995" target="_blank" rel="noopener">Java构建工具：Ant vs Maven vs Gradle</a></li><li><a href="http://www.cnblogs.com/huang0925/p/5209563.html" target="_blank" rel="noopener">Maven和Gradle对比</a></li></ul></li></ul></li></ul></li><li>学习前提/依赖<ul><li>要有 Java 基础相关（如果你完全没学过 Java，建议跳过，不适合你）</li><li>最好有 Java Web 相关知识</li><li>不需要会 Ant 或是 Maven 早期版本的内容</li></ul></li></ul><h3 id="为什么会出现"><a href="#为什么会出现" class="headerlink" title="为什么会出现"></a>为什么会出现</h3><ul><li>Google 搜索：（这些一般都是一些故事，你自己来判断，别人的坎坷是你成长的基石）<ul><li>关键字：<code>为什么用 maven</code></li><li>关键字：<code>why use maven</code></li><li>关键字：<code>What does Maven do</code></li><li>关键字：<code>Why do we need Maven</code></li><li>关键字：<code>Why should we use Maven</code></li></ul></li></ul><h3 id="哪些人不喜欢它"><a href="#哪些人不喜欢它" class="headerlink" title="哪些人不喜欢它"></a>哪些人不喜欢它</h3><ul><li>Google 搜索：（这些一般都是一些故事，你自己来判断，别人的坎坷是你成长的基石）<ul><li>关键字：<code>不用 maven</code></li><li>关键字：<code>Why I Don&#39;t Use Maven</code></li></ul></li></ul><h3 id="为什么学习它"><a href="#为什么学习它" class="headerlink" title="为什么学习它"></a>为什么学习它</h3><ul><li>构建工具是 Java Web 开发者绕不过去的一道坎</li></ul><h3 id="我要怎么做（按优先级从高到低排序）"><a href="#我要怎么做（按优先级从高到低排序）" class="headerlink" title="我要怎么做（按优先级从高到低排序）"></a>我要怎么做（按优先级从高到低排序）</h3><ul><li>看教程<ul><li>官网快速入门文档<ul><li>在官网中查看带有下面几个关键字的链接：<ul><li><code>Getting Started</code></li><li><code>Quick Start</code></li><li><code>Getting Started Guides</code></li><li><code>usage page</code></li><li><code>Tutorials</code></li><li><code>Guides</code></li><li><code>Development Guides</code></li><li><code>Documentation</code></li><li><code>Docs</code></li><li><code>Screencasts</code></li><li>Maven 主页上得到字眼有：<ul><li><a href="http://maven.apache.org/guides/index.html" target="_blank" rel="noopener">documentation index</a></li><li>在子页面我们得到：<ul><li><a href="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener">Getting Started in 5 Minutes</a></li><li><a href="http://maven.apache.org/guides/getting-started/index.html" target="_blank" rel="noopener">Getting Started in 30 Minutes</a></li></ul></li></ul></li></ul></li></ul></li><li>在极客学院搜索对应的教学视频（我是年 VIP）<ul><li>极客学院对 Maven 的讲解比较到位，从初级到中级都涵盖（需要 VIP 权限）：</li><li>Maven 概述及安装，包含下面内容：<ul><li><code>Maven 概述及安装</code></li><li><code>在 Mac 电脑上安装及配置 Maven</code></li><li><code>在 Windows 电脑上安装及配置 Maven</code></li><li><code>在 Linux 电脑上安装及配置 Maven</code></li><li>地址：<a href="http://www.jikexueyuan.com/course/571.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/571.html</a></li></ul></li><li>Maven 核心概念讲解，包含下面内容：<ul><li><code>POM概述</code></li><li><code>插件与目标</code></li><li><code>项目的生命周期阶段</code></li><li>地址：<a href="http://www.jikexueyuan.com/course/866.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/866.html</a></li></ul></li><li>在工具中使用 Maven，包含下面内容：<ul><li><code>使用命令行工具构建一个 Maven 项目</code></li><li><code>使用 Eclipse 构建一个 Maven 项目</code></li><li><code>使用 IntelliJIDEA 构建一个 Maven 项目</code></li><li>地址：<a href="http://www.jikexueyuan.com/course/580_1.html?ss=1" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/580_1.html?ss=1</a></li></ul></li><li>使用 Maven 构建 Web 项目，包含下面内容：<ul><li><code>创建一个Web项目</code></li><li><code>使用 Tomcat 插件运行 Web 项目</code></li><li><code>使用 Jetty 插件运行 Web 项目</code></li><li><code>添加 J2EE 依赖</code></li><li><code>创建 JSP 和 Servlet</code></li><li><code>在 Eclipse 中使用 Maven 构建 Web 项目</code></li><li>地址：<a href="http://www.jikexueyuan.com/course/908.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/908.html</a></li><li>地址：<a href="http://www.jikexueyuan.com/course/951.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/951.html</a></li></ul></li><li>使用 Maven 构建多模块项目<ul><li><code>多模块项目介绍</code></li><li><code>创建 helloweb 项目的骨架结构</code></li><li><code>将 helloweb 项目导入 Eclipse</code></li><li><code>使用 dependencyManagement 管理依赖</code></li><li><code>使用 pluginManagement 管理插件</code></li><li><code>定义项目属性及配置信息</code></li><li><code>完善 helloweb-entity 模块</code></li><li><code>完善 helloweb-core 模块</code></li><li><code>完善 helloweb-web 模块</code></li><li><code>使用 log4j 打印日志</code></li><li><code>使用 junit 进行单元测试</code></li><li><code>使用 guava 美化代码</code></li><li>地址：<a href="http://www.jikexueyuan.com/course/957.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/957.html</a></li><li>地址：<a href="http://www.jikexueyuan.com/course/964.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/964.html</a></li><li>地址：<a href="http://www.jikexueyuan.com/course/977.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/977.html</a></li><li>地址：<a href="http://www.jikexueyuan.com/course/989.html" target="_blank" rel="noopener">http://www.jikexueyuan.com/course/989.html</a></li></ul></li></ul></li><li>极客学院上整理得很好的文字教程：<a href="http://wiki.jikexueyuan.com/project/maven/" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/maven/</a></li><li>国外著名的教程网：<a href="http://www.tutorialspoint.com/maven/index.htm" target="_blank" rel="noopener">http://www.tutorialspoint.com/maven/index.htm</a></li><li>Google 搜索：<code>Maven 视频 教程 百度云网盘</code>    </li><li>Google 搜索：<code>Maven 视频 教程</code></li><li>简书-搜索相关内容：<a href="http://www.jianshu.com/" target="_blank" rel="noopener">http://www.jianshu.com/</a></li><li>知乎-搜索相关内容：<a href="http://www.zhihu.com/" target="_blank" rel="noopener">http://www.zhihu.com/</a></li><li>Quora-搜索相关内容：<a href="https://www.quora.com/" target="_blank" rel="noopener">https://www.quora.com/</a></li><li>微博-搜索相关内容：<a href="http://weibo.com" target="_blank" rel="noopener">http://weibo.com</a></li><li>公众号-搜索相关内容：<a href="http://weixin.sogou.com/" target="_blank" rel="noopener">http://weixin.sogou.com/</a></li><li>开发者头条-搜索相关内容：<a href="http://toutiao.io/" target="_blank" rel="noopener">http://toutiao.io/</a></li><li>京东-图书：<a href="http://book.jd.com/" target="_blank" rel="noopener">http://book.jd.com/</a></li><li>YouTube-搜索相关内容：<a href="http://youtube.com/" target="_blank" rel="noopener">http://youtube.com/</a></li></ul></li><li>自己写 Demo<ul><li>Maven 下载地址：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></li><li>此时（2016-03-10）最新版本为：<strong>Apache Maven 3.3.9</strong></li><li>JDK 要求：Maven 3.3 要求 JDK 1.7 或是更新，其他版本无</li><li>操作系统没要求，官网原话：<code>No minimum requirement. Start up scripts are included as shell scripts and Windows batch files</code><ul><li>但是，按系统常见压缩格式，我个人建议：</li><li>Windows 下载的文件：<strong>apache-maven-版本号-bin.zip</strong></li><li>类 Unix 下载的文件：<strong>apache-maven-版本号-bin.tar.gz</strong></li></ul></li><li>我这里以 Maven 3.1 进行安装为例（Windows 系统）：<ul><li>安装：<ul><li>我的 Maven 解压目录发在 D 盘根目录下</li><li>新增系统变量：<code>JAVA_HOME  ===  C:\Program Files\Java\jdk1.6.0_23</code></li><li>新增系统变量：<code>M2_HOME  ===  D:\maven\maven3.1.1</code><ul><li>需要注意的是变量名就叫这个 <code>M2_HOME</code>，不要改其他的，因为 TeamCity 这类工具它会默认去找该变量一致的内容自动帮我们匹配构建环境的，所以我们就按官方约定来。</li></ul></li><li>在系统变量 Path 中增加：<code>;%JAVA_HOME%\bin;%M2_HOME%\bin</code></li></ul></li><li>测试：<ul><li>打开 cmd</li><li>输入：<code>java -version</code>，能显示 Java 版本信息即表示 JAVA_HOME 设置好了</li><li>输入：<code>mvn –v</code>，能显示 Maven 版本信息即表示 M2_HOME 设置好了</li></ul></li></ul></li></ul></li><li>参考别人 Demo<ul><li>通过上面的学习，我们知道，我们要学习别人的 Maven 配置，只要能看懂他们的 POM 文件配置即可，所以现在你需要做的是找一些开源项目，读懂他们的 POM</li><li>Gtihub 搜索 Demo：<a href="https://github.com/search/advanced" target="_blank" rel="noopener">https://github.com/search/advanced</a></li><li>Git@OSC 搜索 Demo：<a href="http://git.oschina.net/" target="_blank" rel="noopener">http://git.oschina.net/</a></li></ul></li><li>项目场景模拟、提高<ul><li>我现在所有的 Java 相关的项目都是 Maven 构建的</li><li>自己做持续集成的话，有 Nexus 做私有仓库</li><li>平时开发连接的是：<strong>开源中国 Maven 库</strong>：<ul><li>使用技巧：</li><li><a href="http://maven.oschina.net/help.html" target="_blank" rel="noopener">http://maven.oschina.net/help.html</a></li><li><a href="http://my.oschina.net/huangyong/blog/180189" target="_blank" rel="noopener">http://my.oschina.net/huangyong/blog/180189</a></li></ul></li><li>POM 依赖 jar 常去的查找地：<ul><li>官网：<a href="http://search.maven.org/" target="_blank" rel="noopener">http://search.maven.org/</a></li><li>开源中国：<a href="http://maven.oschina.net/home.html" target="_blank" rel="noopener">http://maven.oschina.net/home.html</a></li><li>Nexus 库：<a href="https://repository.sonatype.org/" target="_blank" rel="noopener">https://repository.sonatype.org/</a></li><li>MVNRepository：<a href="http://mvnrepository.com/" target="_blank" rel="noopener">http://mvnrepository.com/</a></li></ul></li></ul></li><li>遇到问题<ul><li>官网 FAQ：<a href="https://maven.apache.org/general.html" target="_blank" rel="noopener">https://maven.apache.org/general.html</a></li><li>Google</li><li>Stack Overflow：<a href="http://stackoverflow.com/" target="_blank" rel="noopener">http://stackoverflow.com/</a></li></ul></li></ul><h3 id="资料整理"><a href="#资料整理" class="headerlink" title="资料整理"></a>资料整理</h3><ul><li>来自 Google 过程中的资料（真心感谢这些作者）：<ul><li><a href="https://segmentfault.com/a/1190000000640821" target="_blank" rel="noopener">Maven重要概念及最佳实践</a></li><li><a href="http://mritd.me/2015/12/31/Maven-%E6%95%99%E7%A8%8B/#" target="_blank" rel="noopener">Maven 教程 </a></li><li><a href="http://www.trinea.cn/android/maven/" target="_blank" rel="noopener">Maven介绍，包括作用、核心概念、用法、常用命令、扩展及配置</a></li><li><a href="http://www.cnblogs.com/haippy/archive/2012/07/04/2576453.html" target="_blank" rel="noopener">7天学会Maven（第一天——了解 Maven）</a></li><li><a href="http://www.cnblogs.com/haippy/archive/2012/07/05/2577233.html" target="_blank" rel="noopener">7天学会Maven（第二天——Maven 标准目录结构）</a></li><li><a href="http://www.cnblogs.com/zhaoyang/archive/2012/01/07/2315443.html" target="_blank" rel="noopener">Maven 3 入门 – 安装与配置</a></li><li><a href="http://blog.csdn.net/sxyx2008/article/details/8725220" target="_blank" rel="noopener">Maven之pom中文详解</a></li><li><a href="http://my.oschina.net/MyHeaven1987/blog/99781?fromerr=07XUhoR7" target="_blank" rel="noopener">maven中的依赖机制简介</a></li><li><a href="http://my.oschina.net/MyHeaven1987/blog/100704?fromerr=SWanTA4V" target="_blank" rel="noopener">maven中的仓库简介</a></li><li><a href="http://www.cnblogs.com/bigtall/archive/2011/03/23/1993253.html" target="_blank" rel="noopener">maven常见问题问答</a></li><li><a href="http://drizzlewalk.blog.51cto.com/2203401/665590" target="_blank" rel="noopener">maven scope含义的说明</a></li><li><a href="http://www.infoq.com/cn/news/2011/06/xxb-maven-9-package" target="_blank" rel="noopener">Maven实战（九）——打包的技巧</a></li><li><a href="http://blog.csdn.net/sxyx2008/article/details/7959220" target="_blank" rel="noopener">Maven仓库汇总</a></li><li><a href="http://www.cnblogs.com/iusmile/archive/2012/11/14/2770118.html" target="_blank" rel="noopener">Maven 的41种骨架功能介绍</a></li><li><a href="http://blog.csdn.net/zht666/article/details/8673609" target="_blank" rel="noopener">IntelliJ IDEA 12创建Maven管理的Java Web项目（图解）</a></li><li><a href="http://blog.csdn.net/sxyx2008/article/details/7975129" target="_blank" rel="noopener">对maven私服配置的说明 </a></li></ul></li></ul><h2 id="过程细节"><a href="#过程细节" class="headerlink" title="过程细节"></a>过程细节</h2><ul><li>过去 2014 年里，基本上关于 Maven 的知识都是在 Google 上搜索出来的。</li><li>在 2015 年才看到极客学院上面有成套资料</li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul><li>Maven 也许开始要过时了，但是即使 Gradle 的时代要到来了，你会害怕吗？我想你不会的，因为你会学习知识的方法，更而且他们还差不多。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你是学习 Java 或是说 JVM 语言相关的内容的话，在实际使用中有一个东西你是绕不过去的，构建工具。等你到企业还有一个东西你也绕不过去，持续集成。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
      <category term="maven" scheme="http://code.skyheng.com/tags/maven/"/>
    
      <category term="CI" scheme="http://code.skyheng.com/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>JAVA中重写和重载区别</title>
    <link href="http://code.skyheng.com/post/17946.html"/>
    <id>http://code.skyheng.com/post/17946.html</id>
    <published>2014-05-24T15:16:19.000Z</published>
    <updated>2018-03-20T14:50:31.127Z</updated>
    
    <content type="html"><![CDATA[<p>简述重写和重载区别<br><a id="more"></a></p><p><img src="http://img.skyheng.com/picture/2014/java2.png" alt="java"></p><h2 id="重写和重载区别"><a href="#重写和重载区别" class="headerlink" title="重写和重载区别"></a>重写和重载区别</h2><h3 id="重写方法的规则如下："><a href="#重写方法的规则如下：" class="headerlink" title="重写方法的规则如下："></a>重写方法的规则如下：</h3><ol><li>参数列表：必须与被重写方法的参数列表完全匹配。 </li><li>返回类型：必须与超类中被重写的方法中声明的返回类型或子类型完全相同 </li><li>访问级别：一定不能比被重写方法强，可以比被重写方法的弱。 </li><li>非检查异常：重写方法可以抛出任何非检查的异常，无论被重写方法是否声明了该异常。 </li><li>检查异常：重写方法一定不能抛出新的检查异常，或比被重写方法声明的检查异常更广的检查异常 </li><li>不能重写标志为final,static的方法 </li></ol><h4 id="重载方法的规则："><a href="#重载方法的规则：" class="headerlink" title="重载方法的规则："></a>重载方法的规则：</h4><ol><li>参数列表：被重载的方法必须改变参数列表。 </li><li>返回类型：可以改变返回类型。 </li><li>修饰符：可以改变修饰符 </li><li>异常：可以声明新的或者更广泛的异常。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下列出对于Animal的eat方法各种重写重载实例，根据以上列出的规则，判断其是否合法（以下的方法都属于Animal的子类Horse的方法）：</p><ol><li><code>private void eat(){}</code>  不能通过编译，非法重写，访问修饰符限制性变强；不属于重载，因为参数列表没有发生改变</li><li><code>public void eat() throw RuntimeException{}</code>  能通过编译，属于重写，重写方法可以抛出任何非检查异常。</li><li><code>public void eat() throw IOException{}</code>  不能通过编译，非法重写，重写方法一定不能抛出新的检查异常，或比被重写方法声明的检查异常更广的检查异常；不属于重载，参数列表必须发生变化才属于重载</li><li><code>public void eat(String food){}</code>  能通过编译，不是重写；合法重载，因为参数列表发生改变了。</li><li><code>public String eat(){}</code>  不能通过编译，不是重写，因为其返回类型；不是重载，因为参数列表没有发生改变。</li><li><code>public String eat(int n){}</code> 可以通过编译，不是重写；是重载，首先参数列表必须发生变化，返回类型可以发生改变。</li></ol><p>对父类被重写的方法做一个变动：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Animal <span class="title">eat</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;   </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>public Animal eat(){return null;}</code>  可以通过编译，合法重写，可以不抛出异常，只要不抛出新的异常或更广泛的异常就可以。</li><li><code>public Animal eat() throws FileNotFoundException{return null;}</code> 可以通过编译，是重写，属于子类的非检查异常。</li><li><code>public Animal eat() throws Exception{}</code>  不可以通过编译，非法重写，抛出了更广泛的异常。</li><li><code>public Horse eat() {}</code> 可以通过编译，是重写，因为返回类型可以是被重写的返回类型的子类。</li></ol><h2 id="重载-Overloading"><a href="#重载-Overloading" class="headerlink" title="重载(Overloading)"></a>重载(Overloading)</h2><ol><li><p>方法重载是让类以统一的方式处理不同类型数据的一种手段。多个同名函数同时存在，具有不同的参数个数/类型。重载Overloading是一个类中多态性的一种表现。</p></li><li><p>Java的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。、</p></li><li><p>重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回型别作为重载函数的区分标准。</p></li></ol><h2 id="重写（Overriding）"><a href="#重写（Overriding）" class="headerlink" title="重写（Overriding）"></a>重写（Overriding）</h2><ol><li><p>父类与子类之间的多态性，对父类的函数进行重新定义。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。在Java中，子类可继承父类中的方法，而不需要重新编写相同的方法。<br>但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。方法重写又称方法覆盖。</p></li><li><p>若子类中的方法与父类中的某一方法具有相同的方法名、返回类型和参数表，则新方法将覆盖原有的方法。如需父类中原有的方法，可使用super关键字，该关键字引用了当前类的父类。</p></li><li><p>子类函数的访问修饰权限不能少于父类的；</p></li></ol><h2 id="总结：重载和重写（覆盖）"><a href="#总结：重载和重写（覆盖）" class="headerlink" title="总结：重载和重写（覆盖）"></a>总结：重载和重写（覆盖）</h2><ul><li>方法的重写Overriding和重载Overloading是Java多态性的不同表现。重写Overriding是父类与子类之间多态性的一种表现，重载Overloading是一个类中多态性的一种表现。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法<br>被重写 (Overriding)。子类的对象使用这个方法时，将调用子类中的定义，对它而言，父类中的定义如同被“屏蔽”了，而且如果子类的方法名和参数类型和个数都和父类相同，那么子类的返回值类型必须和父类的相同；如果在一个类中定义了多个同<br>名的方法，它们或有不同的参数个数或有不同的参数类型，则称为方法的重载(Overloading)。Overloaded的方法是可以改变返回值的类型。也就是说，重载的返回值类型可以相同也可以不同。</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://blog.csdn.net/baoendemao/article/details/41316167/" target="_blank" rel="noopener">http://blog.csdn.net/baoendemao/article/details/41316167/</a></li><li><a href="http://blog.csdn.net/baoendemao/article/category/1437407/" target="_blank" rel="noopener">http://blog.csdn.net/baoendemao/article/category/1437407/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简述重写和重载区别&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://code.skyheng.com/categories/java/"/>
    
    
      <category term="java" scheme="http://code.skyheng.com/tags/java/"/>
    
  </entry>
  
</feed>
